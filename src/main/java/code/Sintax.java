
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Jun 21 16:26:16 ART 2023
//----------------------------------------------------

package code;

import java_cup.runtime.*;
import java.io.FileReader;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Jun 21 16:26:16 ART 2023
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u014d\000\002\002\004\000\002\002\006\000\002\003" +
    "\006\000\002\003\005\000\002\003\004\000\002\003\004" +
    "\000\002\003\003\000\002\006\005\000\002\007\006\000" +
    "\002\007\005\000\002\005\006\000\002\005\005\000\002" +
    "\005\006\000\002\005\005\000\002\005\006\000\002\005" +
    "\005\000\002\005\006\000\002\005\005\000\002\005\006" +
    "\000\002\005\005\000\002\005\006\000\002\005\005\000" +
    "\002\005\006\000\002\005\005\000\002\005\006\000\002" +
    "\005\005\000\002\005\006\000\002\005\005\000\002\004" +
    "\005\000\002\004\010\000\002\004\005\000\002\010\006" +
    "\000\002\010\005\000\002\010\006\000\002\010\005\000" +
    "\002\010\006\000\002\010\005\000\002\010\006\000\002" +
    "\010\005\000\002\010\006\000\002\010\005\000\002\010" +
    "\006\000\002\010\005\000\002\010\006\000\002\010\005" +
    "\000\002\011\003\000\002\011\004\000\002\011\006\000" +
    "\002\011\005\000\002\011\006\000\002\011\005\000\002" +
    "\011\006\000\002\011\005\000\002\012\004\000\002\012" +
    "\003\000\002\012\006\000\002\012\005\000\002\012\006" +
    "\000\002\012\005\000\002\012\006\000\002\020\006\000" +
    "\002\020\005\000\002\020\006\000\002\020\005\000\002" +
    "\021\003\000\002\021\006\000\002\021\010\000\002\021" +
    "\005\000\002\021\010\000\002\021\005\000\002\021\010" +
    "\000\002\021\005\000\002\021\010\000\002\021\005\000" +
    "\002\021\005\000\002\034\004\000\002\034\003\000\002" +
    "\034\006\000\002\034\005\000\002\034\006\000\002\034" +
    "\005\000\002\034\006\000\002\034\005\000\002\035\004" +
    "\000\002\035\003\000\002\035\006\000\002\035\005\000" +
    "\002\035\006\000\002\035\005\000\002\035\006\000\002" +
    "\035\005\000\002\036\004\000\002\036\003\000\002\036" +
    "\006\000\002\036\005\000\002\036\006\000\002\036\005" +
    "\000\002\036\006\000\002\036\005\000\002\037\004\000" +
    "\002\037\003\000\002\037\006\000\002\037\005\000\002" +
    "\037\006\000\002\037\005\000\002\037\006\000\002\037" +
    "\005\000\002\024\004\000\002\024\003\000\002\024\006" +
    "\000\002\024\005\000\002\024\006\000\002\024\005\000" +
    "\002\024\006\000\002\024\005\000\002\040\004\000\002" +
    "\040\003\000\002\040\006\000\002\040\005\000\002\040" +
    "\006\000\002\040\005\000\002\040\006\000\002\040\005" +
    "\000\002\041\004\000\002\041\003\000\002\041\006\000" +
    "\002\041\005\000\002\041\006\000\002\041\005\000\002" +
    "\041\006\000\002\041\005\000\002\025\004\000\002\025" +
    "\003\000\002\025\006\000\002\025\005\000\002\025\006" +
    "\000\002\025\005\000\002\025\006\000\002\025\005\000" +
    "\002\016\006\000\002\016\006\000\002\016\005\000\002" +
    "\016\006\000\002\016\005\000\002\017\006\000\002\017" +
    "\005\000\002\017\006\000\002\017\005\000\002\013\005" +
    "\000\002\013\006\000\002\013\006\000\002\027\006\000" +
    "\002\027\005\000\002\026\004\000\002\026\003\000\002" +
    "\026\006\000\002\026\005\000\002\026\006\000\002\026" +
    "\005\000\002\026\006\000\002\026\005\000\002\014\006" +
    "\000\002\014\006\000\002\014\005\000\002\014\006\000" +
    "\002\014\005\000\002\015\006\000\002\015\005\000\002" +
    "\015\006\000\002\015\005\000\002\031\006\000\002\031" +
    "\003\000\002\030\006\000\002\030\003\000\002\022\006" +
    "\000\002\022\005\000\002\022\006\000\002\022\005\000" +
    "\002\022\006\000\002\022\005\000\002\022\006\000\002" +
    "\022\005\000\002\022\006\000\002\022\005\000\002\022" +
    "\004\000\002\022\003\000\002\032\006\000\002\032\005" +
    "\000\002\032\006\000\002\032\005\000\002\032\006\000" +
    "\002\032\005\000\002\032\006\000\002\032\005\000\002" +
    "\032\006\000\002\032\005\000\002\032\004\000\002\032" +
    "\003\000\002\032\006\000\002\032\005\000\002\032\006" +
    "\000\002\032\005\000\002\032\006\000\002\032\005\000" +
    "\002\032\006\000\002\032\005\000\002\032\006\000\002" +
    "\032\005\000\002\033\006\000\002\033\005\000\002\033" +
    "\006\000\002\033\005\000\002\033\006\000\002\033\005" +
    "\000\002\033\006\000\002\033\005\000\002\033\006\000" +
    "\002\033\005\000\002\033\004\000\002\033\003\000\002" +
    "\046\006\000\002\046\005\000\002\046\006\000\002\046" +
    "\005\000\002\046\006\000\002\046\005\000\002\046\006" +
    "\000\002\046\005\000\002\046\006\000\002\046\005\000" +
    "\002\046\004\000\002\046\003\000\002\023\006\000\002" +
    "\023\005\000\002\023\006\000\002\023\005\000\002\023" +
    "\006\000\002\023\005\000\002\023\006\000\002\023\005" +
    "\000\002\023\006\000\002\023\005\000\002\023\004\000" +
    "\002\023\003\000\002\042\006\000\002\042\005\000\002" +
    "\047\006\000\002\047\005\000\002\047\006\000\002\047" +
    "\005\000\002\047\006\000\002\047\005\000\002\047\006" +
    "\000\002\047\005\000\002\047\006\000\002\047\005\000" +
    "\002\047\006\000\002\047\005\000\002\047\006\000\002" +
    "\047\005\000\002\047\006\000\002\047\005\000\002\047" +
    "\006\000\002\047\005\000\002\043\006\000\002\043\006" +
    "\000\002\043\005\000\002\043\006\000\002\043\005\000" +
    "\002\043\006\000\002\043\005\000\002\043\006\000\002" +
    "\043\005\000\002\043\006\000\002\043\005\000\002\043" +
    "\006\000\002\043\005\000\002\043\006\000\002\043\005" +
    "\000\002\043\006\000\002\043\005\000\002\043\006\000" +
    "\002\043\005\000\002\044\006\000\002\044\005\000\002" +
    "\044\006\000\002\044\005\000\002\044\006\000\002\044" +
    "\005\000\002\044\006\000\002\044\005\000\002\044\006" +
    "\000\002\044\005\000\002\044\006\000\002\044\005\000" +
    "\002\044\006\000\002\044\005\000\002\044\006\000\002" +
    "\044\005\000\002\044\006\000\002\044\005\000\002\045" +
    "\006\000\002\045\005\000\002\045\006\000\002\045\005" +
    "\000\002\050\013\000\002\050\010\000\002\050\005\000" +
    "\002\051\005\000\002\052\005\000\002\053\005\000\002" +
    "\054\006\000\002\054\005\000\002\054\006\000\002\054" +
    "\005\000\002\055\003\000\002\055\004\000\002\055\006" +
    "\000\002\055\005\000\002\055\006\000\002\055\005\000" +
    "\002\055\006\000\002\055\005\000\002\055\006\000\002" +
    "\055\005\000\002\055\006\000\002\055\005\000\002\055" +
    "\006\000\002\055\005\000\002\055\006\000\002\055\005" +
    "\000\002\056\010\000\002\056\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02a5\000\004\123\005\001\002\000\004\002\u02a7\001" +
    "\002\000\004\032\006\001\002\000\030\005\007\011\024" +
    "\013\017\015\016\017\020\021\013\023\023\025\022\027" +
    "\021\034\014\036\010\001\002\000\006\011\u01d0\074\u01d1" +
    "\001\002\000\010\015\u014d\017\u014e\027\u014f\001\002\000" +
    "\024\005\007\011\024\013\017\015\016\017\020\021\013" +
    "\023\023\034\014\036\010\001\002\000\004\033\u029d\001" +
    "\002\000\026\005\u01a1\011\u01ab\013\u01a6\015\u01a5\017\u01a7" +
    "\021\u01a3\023\u01aa\027\u01a9\034\u01a4\036\u01a2\001\002\000" +
    "\016\034\114\042\116\056\120\070\112\072\117\122\115" +
    "\001\002\000\012\030\ufffb\031\u028c\033\ufffb\040\u028d\001" +
    "\002\000\016\034\u0186\042\u0188\056\u018a\070\u0185\072\u0189" +
    "\122\u0187\001\002\000\016\046\252\050\251\052\253\054" +
    "\256\056\257\122\254\001\002\000\030\005\u0158\011\u0160" +
    "\013\u015e\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070" +
    "\u015f\072\u015c\122\u0159\001\002\000\012\056\u0140\070\u013c" +
    "\072\u013f\122\u013e\001\002\000\020\007\054\011\050\013" +
    "\055\027\052\036\051\042\056\044\053\001\002\000\004" +
    "\120\u0169\001\002\000\010\025\025\112\030\114\027\001" +
    "\002\000\020\007\054\011\050\013\055\027\052\036\051" +
    "\042\056\044\053\001\002\000\004\010\u0273\001\002\000" +
    "\006\025\043\117\044\001\002\000\006\025\031\116\033" +
    "\001\002\000\020\007\054\011\050\013\055\027\052\036" +
    "\051\042\056\044\053\001\002\000\004\113\034\001\002" +
    "\000\004\113\uff54\001\002\000\010\010\uff5e\112\037\114" +
    "\036\001\002\000\004\010\uff5f\001\002\000\006\025\043" +
    "\117\044\001\002\000\006\025\031\116\033\001\002\000" +
    "\004\113\041\001\002\000\010\010\uff5a\112\037\114\036" +
    "\001\002\000\004\010\uff5b\001\002\000\020\007\054\011" +
    "\050\013\055\027\052\036\051\042\056\044\053\001\002" +
    "\000\004\115\uff56\001\002\000\004\115\046\001\002\000" +
    "\010\010\uff58\112\037\114\036\001\002\000\004\010\uff59" +
    "\001\002\000\010\025\025\112\030\114\027\001\002\000" +
    "\010\015\u014d\017\u014e\027\u014f\001\002\000\012\056\u0140" +
    "\070\u013c\072\u013f\122\u013e\001\002\000\004\064\u0115\001" +
    "\002\000\012\034\u0104\070\u0103\072\u0107\122\u0105\001\002" +
    "\000\016\046\252\050\251\052\253\054\256\056\257\122" +
    "\254\001\002\000\006\060\064\062\063\001\002\000\004" +
    "\024\060\001\002\000\004\117\061\001\002\000\004\115" +
    "\uff57\001\002\000\004\043\247\001\002\000\012\034\230" +
    "\070\226\072\232\122\231\001\002\000\012\034\067\070" +
    "\065\072\071\122\070\001\002\000\016\034\142\042\144" +
    "\056\146\070\140\072\145\122\143\001\002\000\004\061" +
    "\221\001\002\000\016\034\114\042\116\056\120\070\112" +
    "\072\117\122\115\001\002\000\014\034\067\061\uff8d\070" +
    "\065\072\071\122\070\001\002\000\016\034\074\042\076" +
    "\056\100\070\073\072\077\122\075\001\002\000\004\073" +
    "\213\001\002\000\016\034\142\042\144\056\146\070\140" +
    "\072\145\122\143\001\002\000\016\034\114\042\116\056" +
    "\120\070\112\072\117\122\115\001\002\000\020\034\074" +
    "\042\076\056\100\070\073\072\077\073\uff0e\122\075\001" +
    "\002\000\006\060\064\062\063\001\002\000\016\034\074" +
    "\042\076\056\100\070\073\072\077\122\075\001\002\000" +
    "\012\034\103\070\101\072\105\122\104\001\002\000\016" +
    "\034\142\042\144\056\146\070\140\072\145\122\143\001" +
    "\002\000\004\057\171\001\002\000\016\034\114\042\116" +
    "\056\120\070\112\072\117\122\115\001\002\000\014\034" +
    "\103\057\uff95\070\101\072\105\122\104\001\002\000\016" +
    "\034\074\042\076\056\100\070\073\072\077\122\075\001" +
    "\002\000\004\073\107\001\002\000\014\034\103\057\uff93" +
    "\070\101\072\105\122\104\001\002\000\004\057\uff94\001" +
    "\002\000\004\057\uff96\001\002\000\016\034\142\042\144" +
    "\056\146\070\140\072\145\122\143\001\002\000\004\035" +
    "\136\001\002\000\016\034\114\042\116\056\120\070\112" +
    "\072\117\122\115\001\002\000\020\034\114\035\uff1a\042" +
    "\116\056\120\070\112\072\117\122\115\001\002\000\006" +
    "\060\064\062\063\001\002\000\016\034\074\042\076\056" +
    "\100\070\073\072\077\122\075\001\002\000\012\034\103" +
    "\070\101\072\105\122\104\001\002\000\004\057\122\001" +
    "\002\000\020\034\114\035\uff1c\042\116\056\120\070\112" +
    "\072\117\122\115\001\002\000\004\035\uff1d\001\002\000" +
    "\004\073\125\001\002\000\020\034\114\035\uff24\042\116" +
    "\056\120\070\112\072\117\122\115\001\002\000\004\035" +
    "\uff25\001\002\000\004\043\130\001\002\000\020\034\114" +
    "\035\uff1e\042\116\056\120\070\112\072\117\122\115\001" +
    "\002\000\004\035\uff1f\001\002\000\004\035\uff1b\001\002" +
    "\000\004\035\134\001\002\000\020\034\114\035\uff20\042" +
    "\116\056\120\070\112\072\117\122\115\001\002\000\004" +
    "\035\uff21\001\002\000\014\034\103\057\uff8f\070\101\072" +
    "\105\122\104\001\002\000\004\057\uff90\001\002\000\016" +
    "\034\142\042\144\056\146\070\140\072\145\122\143\001" +
    "\002\000\004\071\164\001\002\000\016\034\114\042\116" +
    "\056\120\070\112\072\117\122\115\001\002\000\020\034" +
    "\142\042\144\056\146\070\140\071\uff48\072\145\122\143" +
    "\001\002\000\006\060\064\062\063\001\002\000\016\034" +
    "\074\042\076\056\100\070\073\072\077\122\075\001\002" +
    "\000\012\034\103\070\101\072\105\122\104\001\002\000" +
    "\004\057\150\001\002\000\020\034\142\042\144\056\146" +
    "\070\140\071\uff4a\072\145\122\143\001\002\000\004\071" +
    "\uff4b\001\002\000\004\073\153\001\002\000\020\034\142" +
    "\042\144\056\146\070\140\071\uff52\072\145\122\143\001" +
    "\002\000\004\071\uff53\001\002\000\004\043\156\001\002" +
    "\000\020\034\142\042\144\056\146\070\140\071\uff4c\072" +
    "\145\122\143\001\002\000\004\071\uff4d\001\002\000\004" +
    "\071\uff49\001\002\000\004\035\162\001\002\000\020\034" +
    "\142\042\144\056\146\070\140\071\uff4e\072\145\122\143" +
    "\001\002\000\004\071\uff4f\001\002\000\020\034\114\035" +
    "\uff22\042\116\056\120\070\112\072\117\122\115\001\002" +
    "\000\004\035\uff23\001\002\000\004\071\167\001\002\000" +
    "\020\034\142\042\144\056\146\070\140\071\uff50\072\145" +
    "\122\143\001\002\000\004\071\uff51\001\002\000\020\034" +
    "\074\042\076\056\100\070\073\072\077\073\uff10\122\075" +
    "\001\002\000\004\073\uff11\001\002\000\004\071\174\001" +
    "\002\000\014\034\103\057\uff91\070\101\072\105\122\104" +
    "\001\002\000\004\057\uff92\001\002\000\004\073\177\001" +
    "\002\000\020\034\074\042\076\056\100\070\073\072\077" +
    "\073\uff18\122\075\001\002\000\004\073\uff19\001\002\000" +
    "\004\043\202\001\002\000\020\034\074\042\076\056\100" +
    "\070\073\072\077\073\uff12\122\075\001\002\000\004\073" +
    "\uff13\001\002\000\004\073\uff0f\001\002\000\004\035\206" +
    "\001\002\000\020\034\074\042\076\056\100\070\073\072" +
    "\077\073\uff14\122\075\001\002\000\004\073\uff15\001\002" +
    "\000\004\071\211\001\002\000\020\034\074\042\076\056" +
    "\100\070\073\072\077\073\uff16\122\075\001\002\000\004" +
    "\073\uff17\001\002\000\014\034\067\061\uff8b\070\065\072" +
    "\071\122\070\001\002\000\004\061\uff8c\001\002\000\004" +
    "\061\uff8e\001\002\000\004\035\217\001\002\000\014\034" +
    "\067\061\uff87\070\065\072\071\122\070\001\002\000\004" +
    "\061\uff88\001\002\000\010\043\uffc4\060\064\062\063\001" +
    "\002\000\004\043\uffc5\001\002\000\004\071\224\001\002" +
    "\000\014\034\067\061\uff89\070\065\072\071\122\070\001" +
    "\002\000\004\061\uff8a\001\002\000\016\034\142\042\144" +
    "\056\146\070\140\072\145\122\143\001\002\000\004\063" +
    "\242\001\002\000\016\034\114\042\116\056\120\070\112" +
    "\072\117\122\115\001\002\000\014\034\230\063\uff85\070" +
    "\226\072\232\122\231\001\002\000\016\034\074\042\076" +
    "\056\100\070\073\072\077\122\075\001\002\000\004\073" +
    "\234\001\002\000\014\034\230\063\uff83\070\226\072\232" +
    "\122\231\001\002\000\004\063\uff84\001\002\000\004\063" +
    "\uff86\001\002\000\004\035\240\001\002\000\014\034\230" +
    "\063\uff7f\070\226\072\232\122\231\001\002\000\004\063" +
    "\uff80\001\002\000\010\043\uffc2\060\064\062\063\001\002" +
    "\000\004\043\uffc3\001\002\000\004\071\245\001\002\000" +
    "\014\034\230\063\uff81\070\226\072\232\122\231\001\002" +
    "\000\004\063\uff82\001\002\000\022\007\054\011\050\013" +
    "\055\024\uffdb\027\052\036\051\042\056\044\053\001\002" +
    "\000\004\024\uffdc\001\002\000\012\034\362\070\360\072" +
    "\364\122\363\001\002\000\012\034\336\070\335\072\341" +
    "\122\337\001\002\000\012\034\313\070\312\072\316\122" +
    "\314\001\002\000\006\012\uffc1\013\307\001\002\000\004" +
    "\012\305\001\002\000\012\034\264\070\262\072\266\122" +
    "\265\001\002\000\012\034\103\070\101\072\105\122\104" +
    "\001\002\000\004\057\261\001\002\000\004\012\uffb7\001" +
    "\002\000\016\034\142\042\144\056\146\070\140\072\145" +
    "\122\143\001\002\000\004\055\276\001\002\000\016\034" +
    "\114\042\116\056\120\070\112\072\117\122\115\001\002" +
    "\000\014\034\264\055\uff9d\070\262\072\266\122\265\001" +
    "\002\000\016\034\074\042\076\056\100\070\073\072\077" +
    "\122\075\001\002\000\004\073\270\001\002\000\014\034" +
    "\264\055\uff9b\070\262\072\266\122\265\001\002\000\004" +
    "\055\uff9c\001\002\000\004\055\uff9e\001\002\000\004\035" +
    "\274\001\002\000\014\034\264\055\uff97\070\262\072\266" +
    "\122\265\001\002\000\004\055\uff98\001\002\000\006\012" +
    "\uffb8\013\277\001\002\000\016\046\252\050\251\052\253" +
    "\054\256\056\257\122\254\001\002\000\004\012\301\001" +
    "\002\000\004\012\uffb9\001\002\000\004\071\303\001\002" +
    "\000\014\034\264\055\uff99\070\262\072\266\122\265\001" +
    "\002\000\004\055\uff9a\001\002\000\022\007\054\011\050" +
    "\013\055\024\uffdd\027\052\036\051\042\056\044\053\001" +
    "\002\000\004\024\uffde\001\002\000\016\046\252\050\251" +
    "\052\253\054\256\056\257\122\254\001\002\000\004\012" +
    "\311\001\002\000\004\012\uffc0\001\002\000\016\034\142" +
    "\042\144\056\146\070\140\072\145\122\143\001\002\000" +
    "\016\034\114\042\116\056\120\070\112\072\117\122\115" +
    "\001\002\000\014\034\313\053\uffa5\070\312\072\316\122" +
    "\314\001\002\000\004\053\322\001\002\000\016\034\074" +
    "\042\076\056\100\070\073\072\077\122\075\001\002\000" +
    "\004\073\320\001\002\000\014\034\313\053\uffa3\070\312" +
    "\072\316\122\314\001\002\000\004\053\uffa4\001\002\000" +
    "\006\012\uffba\013\323\001\002\000\016\046\252\050\251" +
    "\052\253\054\256\056\257\122\254\001\002\000\004\012" +
    "\325\001\002\000\004\012\uffbb\001\002\000\004\053\uffa6" +
    "\001\002\000\004\035\330\001\002\000\014\034\313\053" +
    "\uff9f\070\312\072\316\122\314\001\002\000\004\053\uffa0" +
    "\001\002\000\004\071\333\001\002\000\014\034\313\053" +
    "\uffa1\070\312\072\316\122\314\001\002\000\004\053\uffa2" +
    "\001\002\000\016\034\142\042\144\056\146\070\140\072" +
    "\145\122\143\001\002\000\016\034\114\042\116\056\120" +
    "\070\112\072\117\122\115\001\002\000\014\034\336\047" +
    "\uffb5\070\335\072\341\122\337\001\002\000\004\047\345" +
    "\001\002\000\016\034\074\042\076\056\100\070\073\072" +
    "\077\122\075\001\002\000\004\073\343\001\002\000\014" +
    "\034\336\047\uffb3\070\335\072\341\122\337\001\002\000" +
    "\004\047\uffb4\001\002\000\006\012\uffbe\013\346\001\002" +
    "\000\016\046\252\050\251\052\253\054\256\056\257\122" +
    "\254\001\002\000\004\012\350\001\002\000\004\012\uffbf" +
    "\001\002\000\004\047\uffb6\001\002\000\004\035\353\001" +
    "\002\000\014\034\336\047\uffaf\070\335\072\341\122\337" +
    "\001\002\000\004\047\uffb0\001\002\000\004\071\356\001" +
    "\002\000\014\034\336\047\uffb1\070\335\072\341\122\337" +
    "\001\002\000\004\047\uffb2\001\002\000\016\034\142\042" +
    "\144\056\146\070\140\072\145\122\143\001\002\000\004" +
    "\051\374\001\002\000\016\034\114\042\116\056\120\070" +
    "\112\072\117\122\115\001\002\000\014\034\362\051\uffad" +
    "\070\360\072\364\122\363\001\002\000\016\034\074\042" +
    "\076\056\100\070\073\072\077\122\075\001\002\000\004" +
    "\073\366\001\002\000\014\034\362\051\uffab\070\360\072" +
    "\364\122\363\001\002\000\004\051\uffac\001\002\000\004" +
    "\051\uffae\001\002\000\004\035\372\001\002\000\014\034" +
    "\362\051\uffa7\070\360\072\364\122\363\001\002\000\004" +
    "\051\uffa8\001\002\000\006\012\uffbc\013\375\001\002\000" +
    "\016\046\252\050\251\052\253\054\256\056\257\122\254" +
    "\001\002\000\004\012\377\001\002\000\004\012\uffbd\001" +
    "\002\000\004\071\u0101\001\002\000\014\034\362\051\uffa9" +
    "\070\360\072\364\122\363\001\002\000\004\051\uffaa\001" +
    "\002\000\016\034\142\042\144\056\146\070\140\072\145" +
    "\122\143\001\002\000\016\034\114\042\116\056\120\070" +
    "\112\072\117\122\115\001\002\000\014\006\uffcb\034\u0104" +
    "\070\u0103\072\u0107\122\u0105\001\002\000\004\006\u010b\001" +
    "\002\000\016\034\074\042\076\056\100\070\073\072\077" +
    "\122\075\001\002\000\004\073\u0109\001\002\000\014\006" +
    "\uffc9\034\u0104\070\u0103\072\u0107\122\u0105\001\002\000\004" +
    "\006\uffca\001\002\000\022\007\054\011\050\013\055\024" +
    "\uffd9\027\052\036\051\042\056\044\053\001\002\000\004" +
    "\024\uffda\001\002\000\004\006\uffcc\001\002\000\004\035" +
    "\u010f\001\002\000\012\034\u0104\070\u0103\072\u0107\122\u0105" +
    "\001\002\000\004\006\uffc6\001\002\000\004\071\u0112\001" +
    "\002\000\014\006\uffc7\034\u0104\070\u0103\072\u0107\122\u0105" +
    "\001\002\000\004\006\uffc8\001\002\000\004\045\u013a\001" +
    "\002\000\012\034\u0117\070\u0116\072\u0119\122\u0118\001\002" +
    "\000\016\034\142\042\144\056\146\070\140\072\145\122" +
    "\143\001\002\000\016\034\114\042\116\056\120\070\112" +
    "\072\117\122\115\001\002\000\014\034\u0117\065\uff7d\070" +
    "\u0116\072\u0119\122\u0118\001\002\000\016\034\074\042\076" +
    "\056\100\070\073\072\077\122\075\001\002\000\004\065" +
    "\u011b\001\002\000\010\045\uff6d\064\u0115\066\u011e\001\002" +
    "\000\004\045\uff6c\001\002\000\004\045\uff6b\001\002\000" +
    "\012\034\u0121\070\u011f\072\u0123\122\u0122\001\002\000\016" +
    "\034\142\042\144\056\146\070\140\072\145\122\143\001" +
    "\002\000\004\067\u012b\001\002\000\016\034\114\042\116" +
    "\056\120\070\112\072\117\122\115\001\002\000\014\034" +
    "\u0121\067\uff67\070\u011f\072\u0123\122\u0122\001\002\000\016" +
    "\034\074\042\076\056\100\070\073\072\077\122\075\001" +
    "\002\000\004\073\u0125\001\002\000\014\034\u0121\067\uff65" +
    "\070\u011f\072\u0123\122\u0122\001\002\000\004\067\uff66\001" +
    "\002\000\004\067\uff68\001\002\000\004\035\u0129\001\002" +
    "\000\014\034\u0121\067\uff61\070\u011f\072\u0123\122\u0122\001" +
    "\002\000\004\067\uff62\001\002\000\006\045\uff69\066\u011e" +
    "\001\002\000\004\045\uff6a\001\002\000\004\071\u012e\001" +
    "\002\000\014\034\u0121\067\uff63\070\u011f\072\u0123\122\u0122" +
    "\001\002\000\004\067\uff64\001\002\000\004\073\u0131\001" +
    "\002\000\014\034\u0117\065\uff7b\070\u0116\072\u0119\122\u0118" +
    "\001\002\000\004\065\uff7c\001\002\000\004\065\uff7e\001" +
    "\002\000\004\035\u0135\001\002\000\014\034\u0117\065\uff77" +
    "\070\u0116\072\u0119\122\u0118\001\002\000\004\065\uff78\001" +
    "\002\000\004\071\u0138\001\002\000\014\034\u0117\065\uff79" +
    "\070\u0116\072\u0119\122\u0118\001\002\000\004\065\uff7a\001" +
    "\002\000\022\007\054\011\050\013\055\024\uffd7\027\052" +
    "\036\051\042\056\044\053\001\002\000\004\024\uffd8\001" +
    "\002\000\016\034\142\042\144\056\146\070\140\072\145" +
    "\122\143\001\002\000\004\026\u0148\001\002\000\014\026" +
    "\uffd4\056\u0140\070\u013c\072\u013f\122\u013e\001\002\000\016" +
    "\034\074\042\076\056\100\070\073\072\077\122\075\001" +
    "\002\000\012\034\103\070\101\072\105\122\104\001\002" +
    "\000\004\057\u0142\001\002\000\014\026\uffcd\056\u0140\070" +
    "\u013c\072\u013f\122\u013e\001\002\000\004\026\uffce\001\002" +
    "\000\004\073\u0145\001\002\000\014\026\uffcf\056\u0140\070" +
    "\u013c\072\u013f\122\u013e\001\002\000\004\026\uffd0\001\002" +
    "\000\004\026\uffd3\001\002\000\022\007\054\011\050\013" +
    "\055\024\uffd5\027\052\036\051\042\056\044\053\001\002" +
    "\000\004\024\uffd6\001\002\000\004\071\u014b\001\002\000" +
    "\014\026\uffd1\056\u0140\070\u013c\072\u013f\122\u013e\001\002" +
    "\000\004\026\uffd2\001\002\000\016\034\u0186\042\u0188\056" +
    "\u018a\070\u0185\072\u0189\122\u0187\001\002\000\030\005\u0158" +
    "\011\u0160\013\u015e\021\u015a\023\u0161\034\u015b\042\u0162\056" +
    "\u015d\070\u015f\072\u015c\122\u0159\001\002\000\012\056\u0140" +
    "\070\u013c\072\u013f\122\u013e\001\002\000\004\037\u0151\001" +
    "\002\000\022\007\054\011\050\013\055\024\uffdf\027\052" +
    "\036\051\042\056\044\053\001\002\000\004\024\uffe0\001" +
    "\002\000\004\026\u0154\001\002\000\006\015\u0155\017\u0156" +
    "\001\002\000\016\034\u0186\042\u0188\056\u018a\070\u0185\072" +
    "\u0189\122\u0187\001\002\000\030\005\u0158\011\u0160\013\u015e" +
    "\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070\u015f\072" +
    "\u015c\122\u0159\001\002\000\004\037\uff76\001\002\000\006" +
    "\011\u01d0\074\u01d1\001\002\000\032\005\u0158\011\u0160\013" +
    "\u015e\016\uff3c\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d" +
    "\070\u015f\072\u015c\122\u0159\001\002\000\026\005\u01a1\011" +
    "\u01ab\013\u01a6\015\u01a5\017\u01a7\021\u01a3\023\u01aa\027\u01a9" +
    "\034\u01a4\036\u01a2\001\002\000\016\034\114\042\116\056" +
    "\120\070\112\072\117\122\115\001\002\000\016\034\074" +
    "\042\076\056\100\070\073\072\077\122\075\001\002\000" +
    "\012\034\103\070\101\072\105\122\104\001\002\000\016" +
    "\046\252\050\251\052\253\054\256\056\257\122\254\001" +
    "\002\000\016\034\142\042\144\056\146\070\140\072\145" +
    "\122\143\001\002\000\010\025\025\112\030\114\027\001" +
    "\002\000\004\120\u0169\001\002\000\006\060\064\062\063" +
    "\001\002\000\004\016\u0164\001\002\000\010\015\u0155\017" +
    "\u0156\037\uff70\001\002\000\004\037\uff71\001\002\000\004" +
    "\043\u0167\001\002\000\032\005\u0158\011\u0160\013\u015e\016" +
    "\uff40\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070\u015f" +
    "\072\u015c\122\u0159\001\002\000\004\016\uff41\001\002\000" +
    "\024\005\u016d\011\u0175\013\u0172\015\u0171\017\u0173\021\u016f" +
    "\023\u0176\034\u0170\036\u016e\001\002\000\004\022\u016b\001" +
    "\002\000\032\005\u0158\011\u0160\013\u015e\016\uff3a\021\u015a" +
    "\023\u0161\034\u015b\042\u0162\056\u015d\070\u015f\072\u015c\122" +
    "\u0159\001\002\000\004\016\uff3b\001\002\000\006\011\u01d0" +
    "\074\u01d1\001\002\000\010\015\u014d\017\u014e\027\u014f\001" +
    "\002\000\026\005\u01a1\011\u01ab\013\u01a6\015\u01a5\017\u01a7" +
    "\021\u01a3\023\u01aa\027\u01a9\034\u01a4\036\u01a2\001\002\000" +
    "\016\034\114\042\116\056\120\070\112\072\117\122\115" +
    "\001\002\000\016\034\u0186\042\u0188\056\u018a\070\u0185\072" +
    "\u0189\122\u0187\001\002\000\016\046\252\050\251\052\253" +
    "\054\256\056\257\122\254\001\002\000\030\005\u0158\011" +
    "\u0160\013\u015e\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d" +
    "\070\u015f\072\u015c\122\u0159\001\002\000\004\121\u017d\001" +
    "\002\000\010\025\025\112\030\114\027\001\002\000\004" +
    "\120\u0169\001\002\000\004\022\u0178\001\002\000\026\005" +
    "\u016d\011\u0175\013\u0172\015\u0171\017\u0173\021\u016f\023\u0176" +
    "\034\u0170\036\u016e\121\uff0a\001\002\000\004\121\uff0b\001" +
    "\002\000\004\010\u017b\001\002\000\026\005\u016d\011\u0175" +
    "\013\u0172\015\u0171\017\u0173\021\u016f\023\u0176\034\u0170\036" +
    "\u016e\121\uff00\001\002\000\004\121\uff01\001\002\000\006" +
    "\022\uff0c\120\u0169\001\002\000\004\022\uff0d\001\002\000" +
    "\004\016\u0180\001\002\000\026\005\u016d\011\u0175\013\u0172" +
    "\015\u0171\017\u0173\021\u016f\023\u0176\034\u0170\036\u016e\121" +
    "\uff06\001\002\000\004\121\uff07\001\002\000\004\012\u0183" +
    "\001\002\000\026\005\u016d\011\u0175\013\u0172\015\u0171\017" +
    "\u0173\021\u016f\023\u0176\034\u0170\036\u016e\121\uff02\001\002" +
    "\000\004\121\uff03\001\002\000\016\034\142\042\144\056" +
    "\146\070\140\072\145\122\143\001\002\000\016\034\114" +
    "\042\116\056\120\070\112\072\117\122\115\001\002\000" +
    "\020\014\uff26\034\u0186\042\u0188\056\u018a\070\u0185\072\u0189" +
    "\122\u0187\001\002\000\006\060\064\062\063\001\002\000" +
    "\016\034\074\042\076\056\100\070\073\072\077\122\075" +
    "\001\002\000\012\034\103\070\101\072\105\122\104\001" +
    "\002\000\004\014\u018c\001\002\000\026\005\u016d\011\u0175" +
    "\013\u0172\015\u0171\017\u0173\021\u016f\023\u0176\034\u0170\036" +
    "\u016e\121\uff04\001\002\000\004\121\uff05\001\002\000\004" +
    "\057\u018f\001\002\000\020\014\uff28\034\u0186\042\u0188\056" +
    "\u018a\070\u0185\072\u0189\122\u0187\001\002\000\004\014\uff29" +
    "\001\002\000\004\073\u0192\001\002\000\020\014\uff30\034" +
    "\u0186\042\u0188\056\u018a\070\u0185\072\u0189\122\u0187\001\002" +
    "\000\004\014\uff31\001\002\000\004\043\u0195\001\002\000" +
    "\020\014\uff2a\034\u0186\042\u0188\056\u018a\070\u0185\072\u0189" +
    "\122\u0187\001\002\000\004\014\uff2b\001\002\000\004\014" +
    "\uff27\001\002\000\004\035\u0199\001\002\000\020\014\uff2c" +
    "\034\u0186\042\u0188\056\u018a\070\u0185\072\u0189\122\u0187\001" +
    "\002\000\004\014\uff2d\001\002\000\004\071\u019c\001\002" +
    "\000\020\014\uff2e\034\u0186\042\u0188\056\u018a\070\u0185\072" +
    "\u0189\122\u0187\001\002\000\004\014\uff2f\001\002\000\004" +
    "\035\u019f\001\002\000\026\005\u016d\011\u0175\013\u0172\015" +
    "\u0171\017\u0173\021\u016f\023\u0176\034\u0170\036\u016e\121\ufefc" +
    "\001\002\000\004\121\ufefd\001\002\000\006\011\u01d0\074" +
    "\u01d1\001\002\000\010\015\u014d\017\u014e\027\u014f\001\002" +
    "\000\026\005\u01a1\011\u01ab\013\u01a6\015\u01a5\017\u01a7\021" +
    "\u01a3\023\u01aa\027\u01a9\034\u01a4\036\u01a2\001\002\000\016" +
    "\034\114\042\116\056\120\070\112\072\117\122\115\001" +
    "\002\000\016\034\u0186\042\u0188\056\u018a\070\u0185\072\u0189" +
    "\122\u0187\001\002\000\016\046\252\050\251\052\253\054" +
    "\256\056\257\122\254\001\002\000\030\005\u0158\011\u0160" +
    "\013\u015e\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070" +
    "\u015f\072\u015c\122\u0159\001\002\000\004\020\u022b\001\002" +
    "\000\012\056\u0140\070\u013c\072\u013f\122\u013e\001\002\000" +
    "\004\120\u0169\001\002\000\010\025\025\112\030\114\027" +
    "\001\002\000\004\010\u01ad\001\002\000\026\005\u01ae\011" +
    "\u01b7\013\u01b3\015\u01b2\017\u01b4\020\ufeeb\021\u01b0\023\u01b6" +
    "\034\u01b1\036\u01af\001\002\000\006\011\u01d0\074\u01d1\001" +
    "\002\000\010\015\u014d\017\u014e\027\u014f\001\002\000\026" +
    "\005\u01a1\011\u01ab\013\u01a6\015\u01a5\017\u01a7\021\u01a3\023" +
    "\u01aa\027\u01a9\034\u01a4\036\u01a2\001\002\000\016\034\114" +
    "\042\116\056\120\070\112\072\117\122\115\001\002\000" +
    "\016\034\u0186\042\u0188\056\u018a\070\u0185\072\u0189\122\u0187" +
    "\001\002\000\016\046\252\050\251\052\253\054\256\056" +
    "\257\122\254\001\002\000\030\005\u0158\011\u0160\013\u015e" +
    "\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070\u015f\072" +
    "\u015c\122\u0159\001\002\000\004\020\ufeec\001\002\000\004" +
    "\120\u0169\001\002\000\010\025\025\112\030\114\027\001" +
    "\002\000\004\010\u01b9\001\002\000\026\005\u01ae\011\u01b7" +
    "\013\u01b3\015\u01b2\017\u01b4\020\ufed9\021\u01b0\023\u01b6\034" +
    "\u01b1\036\u01af\001\002\000\004\020\ufeda\001\002\000\004" +
    "\022\u01bc\001\002\000\026\005\u01ae\011\u01b7\013\u01b3\015" +
    "\u01b2\017\u01b4\020\ufee3\021\u01b0\023\u01b6\034\u01b1\036\u01af" +
    "\001\002\000\004\020\ufee4\001\002\000\004\016\u01bf\001" +
    "\002\000\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4" +
    "\020\ufedf\021\u01b0\023\u01b6\034\u01b1\036\u01af\001\002\000" +
    "\004\020\ufee0\001\002\000\004\012\u01c2\001\002\000\026" +
    "\005\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4\020\ufee5\021" +
    "\u01b0\023\u01b6\034\u01b1\036\u01af\001\002\000\004\020\ufee6" +
    "\001\002\000\004\014\u01c5\001\002\000\026\005\u01ae\011" +
    "\u01b7\013\u01b3\015\u01b2\017\u01b4\020\ufedd\021\u01b0\023\u01b6" +
    "\034\u01b1\036\u01af\001\002\000\004\020\ufede\001\002\000" +
    "\004\035\u01c8\001\002\000\026\005\u01ae\011\u01b7\013\u01b3" +
    "\015\u01b2\017\u01b4\020\ufed7\021\u01b0\023\u01b6\034\u01b1\036" +
    "\u01af\001\002\000\004\020\ufed8\001\002\000\004\020\u01cb" +
    "\001\002\000\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2\017" +
    "\u01b4\020\ufee1\021\u01b0\023\u01b6\034\u01b1\036\u01af\001\002" +
    "\000\004\020\ufee2\001\002\000\004\037\u01ce\001\002\000" +
    "\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4\020\ufedb" +
    "\021\u01b0\023\u01b6\034\u01b1\036\u01af\001\002\000\004\020" +
    "\ufedc\001\002\000\010\025\025\112\030\114\027\001\002" +
    "\000\010\076\u01d7\100\u01d5\102\u01d8\001\002\000\004\004" +
    "\u01d3\001\002\000\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2" +
    "\017\u01b4\020\ufed5\021\u01b0\023\u01b6\034\u01b1\036\u01af\001" +
    "\002\000\004\020\ufed6\001\002\000\004\104\u0213\001\002" +
    "\000\004\075\u021b\001\002\000\004\104\u01e3\001\002\000" +
    "\004\104\u01da\001\002\000\004\103\u020f\001\002\000\006" +
    "\106\u01db\110\u01dd\001\002\000\022\011\u01f6\015\u01f2\017" +
    "\u01f4\021\u01f0\023\u01f5\034\u01f1\036\u01ee\122\u01ef\001\002" +
    "\000\004\105\u01ed\001\002\000\006\076\u01df\102\u01e0\001" +
    "\002\000\004\111\u01eb\001\002\000\004\104\u01e3\001\002" +
    "\000\004\104\u01da\001\002\000\004\103\u01e2\001\002\000" +
    "\004\111\ufeb5\001\002\000\006\106\u01db\110\u01dd\001\002" +
    "\000\004\077\u01e5\001\002\000\004\102\u01e6\001\002\000" +
    "\004\104\u01da\001\002\000\004\103\u01e8\001\002\000\004" +
    "\111\ufeb6\001\002\000\004\105\u01ea\001\002\000\004\077" +
    "\ufecd\001\002\000\010\105\ufec7\106\u01db\110\u01dd\001\002" +
    "\000\004\105\ufec8\001\002\000\004\103\ufecb\001\002\000" +
    "\010\015\u014d\017\u014e\027\u014f\001\002\000\024\011\u01f6" +
    "\015\u01f2\017\u01f4\021\u01f0\023\u01f5\034\u01f1\036\u01ee\107" +
    "\ufec6\122\u01ef\001\002\000\026\005\u01a1\011\u01ab\013\u01a6" +
    "\015\u01a5\017\u01a7\021\u01a3\023\u01aa\027\u01a9\034\u01a4\036" +
    "\u01a2\001\002\000\016\034\114\042\116\056\120\070\112" +
    "\072\117\122\115\001\002\000\016\034\u0186\042\u0188\056" +
    "\u018a\070\u0185\072\u0189\122\u0187\001\002\000\004\107\u0200" +
    "\001\002\000\030\005\u0158\011\u0160\013\u015e\021\u015a\023" +
    "\u0161\034\u015b\042\u0162\056\u015d\070\u015f\072\u015c\122\u0159" +
    "\001\002\000\004\120\u0169\001\002\000\010\025\025\112" +
    "\030\114\027\001\002\000\004\010\u01f8\001\002\000\024" +
    "\011\u01f6\015\u01f2\017\u01f4\021\u01f0\023\u01f5\034\u01f1\036" +
    "\u01ee\107\ufebb\122\u01ef\001\002\000\004\107\ufebc\001\002" +
    "\000\004\022\u01fb\001\002\000\024\011\u01f6\015\u01f2\017" +
    "\u01f4\021\u01f0\023\u01f5\034\u01f1\036\u01ee\107\ufec3\122\u01ef" +
    "\001\002\000\004\107\ufec4\001\002\000\004\016\u01fe\001" +
    "\002\000\024\011\u01f6\015\u01f2\017\u01f4\021\u01f0\023\u01f5" +
    "\034\u01f1\036\u01ee\107\ufebf\122\u01ef\001\002\000\004\107" +
    "\ufec0\001\002\000\010\105\ufec9\106\u01db\110\u01dd\001\002" +
    "\000\004\105\ufeca\001\002\000\004\014\u0203\001\002\000" +
    "\024\011\u01f6\015\u01f2\017\u01f4\021\u01f0\023\u01f5\034\u01f1" +
    "\036\u01ee\107\ufebd\122\u01ef\001\002\000\004\107\ufebe\001" +
    "\002\000\004\035\u0206\001\002\000\024\011\u01f6\015\u01f2" +
    "\017\u01f4\021\u01f0\023\u01f5\034\u01f1\036\u01ee\107\ufeb9\122" +
    "\u01ef\001\002\000\004\107\ufeba\001\002\000\004\020\u0209" +
    "\001\002\000\024\011\u01f6\015\u01f2\017\u01f4\021\u01f0\023" +
    "\u01f5\034\u01f1\036\u01ee\107\ufec1\122\u01ef\001\002\000\004" +
    "\107\ufec2\001\002\000\004\107\ufec5\001\002\000\004\037" +
    "\u020d\001\002\000\024\011\u01f6\015\u01f2\017\u01f4\021\u01f0" +
    "\023\u01f5\034\u01f1\036\u01ee\107\ufeb7\122\u01ef\001\002\000" +
    "\004\107\ufeb8\001\002\000\004\075\ufece\001\002\000\004" +
    "\077\u0211\001\002\000\004\100\u0212\001\002\000\004\104" +
    "\u0213\001\002\000\006\106\u01db\110\u01dd\001\002\000\004" +
    "\101\u0215\001\002\000\004\102\u0216\001\002\000\004\104" +
    "\u01da\001\002\000\004\103\u0218\001\002\000\004\075\ufed0" +
    "\001\002\000\004\105\u021a\001\002\000\004\101\ufecc\001" +
    "\002\000\010\004\ufed3\011\u01d0\074\u01d1\001\002\000\004" +
    "\004\ufed4\001\002\000\004\101\u021e\001\002\000\004\102" +
    "\u021f\001\002\000\004\104\u01da\001\002\000\004\103\u0221" +
    "\001\002\000\004\075\ufecf\001\002\000\004\010\u0223\001" +
    "\002\000\010\004\ufed1\011\u01d0\074\u01d1\001\002\000\004" +
    "\004\ufed2\001\002\000\004\022\u0226\001\002\000\026\005" +
    "\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4\020\ufef5\021\u01b0" +
    "\023\u01b6\034\u01b1\036\u01af\001\002\000\004\020\ufef6\001" +
    "\002\000\004\026\u0229\001\002\000\024\005\u01ae\011\u01b7" +
    "\013\u01b3\015\u01b2\017\u01b4\021\u01b0\023\u01b6\034\u01b1\036" +
    "\u01af\001\002\000\004\020\ufef9\001\002\000\026\005\u016d" +
    "\011\u0175\013\u0172\015\u0171\017\u0173\021\u016f\023\u0176\034" +
    "\u0170\036\u016e\121\uff08\001\002\000\004\121\uff09\001\002" +
    "\000\004\016\u022e\001\002\000\026\005\u01ae\011\u01b7\013" +
    "\u01b3\015\u01b2\017\u01b4\020\ufef1\021\u01b0\023\u01b6\034\u01b1" +
    "\036\u01af\001\002\000\004\020\ufef2\001\002\000\004\012" +
    "\u0231\001\002\000\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2" +
    "\017\u01b4\020\ufef7\021\u01b0\023\u01b6\034\u01b1\036\u01af\001" +
    "\002\000\004\020\ufef8\001\002\000\004\014\u0234\001\002" +
    "\000\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4\020" +
    "\ufeef\021\u01b0\023\u01b6\034\u01b1\036\u01af\001\002\000\004" +
    "\020\ufef0\001\002\000\004\035\u0237\001\002\000\026\005" +
    "\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4\020\ufee9\021\u01b0" +
    "\023\u01b6\034\u01b1\036\u01af\001\002\000\004\020\ufeea\001" +
    "\002\000\004\020\u023a\001\002\000\026\005\u01ae\011\u01b7" +
    "\013\u01b3\015\u01b2\017\u01b4\020\ufef3\021\u01b0\023\u01b6\034" +
    "\u01b1\036\u01af\001\002\000\004\020\ufef4\001\002\000\004" +
    "\037\u023d\001\002\000\026\005\u01ae\011\u01b7\013\u01b3\015" +
    "\u01b2\017\u01b4\020\ufeed\021\u01b0\023\u01b6\034\u01b1\036\u01af" +
    "\001\002\000\004\020\ufeee\001\002\000\004\004\u0240\001" +
    "\002\000\026\005\u01ae\011\u01b7\013\u01b3\015\u01b2\017\u01b4" +
    "\020\ufee7\021\u01b0\023\u01b6\034\u01b1\036\u01af\001\002\000" +
    "\004\020\ufee8\001\002\000\004\037\u0243\001\002\000\026" +
    "\005\u016d\011\u0175\013\u0172\015\u0171\017\u0173\021\u016f\023" +
    "\u0176\034\u0170\036\u016e\121\ufefa\001\002\000\004\121\ufefb" +
    "\001\002\000\004\004\u0246\001\002\000\026\005\u016d\011" +
    "\u0175\013\u0172\015\u0171\017\u0173\021\u016f\023\u0176\034\u0170" +
    "\036\u016e\121\ufefe\001\002\000\004\121\ufeff\001\002\000" +
    "\004\010\u0249\001\002\000\032\005\u0158\011\u0160\013\u015e" +
    "\016\uff34\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070" +
    "\u015f\072\u015c\122\u0159\001\002\000\004\016\uff35\001\002" +
    "\000\004\071\u024c\001\002\000\032\005\u0158\011\u0160\013" +
    "\u015e\016\uff44\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d" +
    "\070\u015f\072\u015c\122\u0159\001\002\000\004\016\uff45\001" +
    "\002\000\004\012\u024f\001\002\000\032\005\u0158\011\u0160" +
    "\013\u015e\016\uff36\021\u015a\023\u0161\034\u015b\042\u0162\056" +
    "\u015d\070\u015f\072\u015c\122\u0159\001\002\000\004\016\uff37" +
    "\001\002\000\004\057\u0252\001\002\000\032\005\u0158\011" +
    "\u0160\013\u015e\016\uff3e\021\u015a\023\u0161\034\u015b\042\u0162" +
    "\056\u015d\070\u015f\072\u015c\122\u0159\001\002\000\004\016" +
    "\uff3f\001\002\000\004\073\u0255\001\002\000\032\005\u0158" +
    "\011\u0160\013\u015e\016\uff46\021\u015a\023\u0161\034\u015b\042" +
    "\u0162\056\u015d\070\u015f\072\u015c\122\u0159\001\002\000\004" +
    "\016\uff47\001\002\000\004\035\u0258\001\002\000\032\005" +
    "\u0158\011\u0160\013\u015e\016\uff42\021\u015a\023\u0161\034\u015b" +
    "\042\u0162\056\u015d\070\u015f\072\u015c\122\u0159\001\002\000" +
    "\004\016\uff43\001\002\000\004\020\u025b\001\002\000\032" +
    "\005\u0158\011\u0160\013\u015e\016\uff38\021\u015a\023\u0161\034" +
    "\u015b\042\u0162\056\u015d\070\u015f\072\u015c\122\u0159\001\002" +
    "\000\004\016\uff39\001\002\000\004\016\uff3d\001\002\000" +
    "\004\004\u025f\001\002\000\032\005\u0158\011\u0160\013\u015e" +
    "\016\uff32\021\u015a\023\u0161\034\u015b\042\u0162\056\u015d\070" +
    "\u015f\072\u015c\122\u0159\001\002\000\004\016\uff33\001\002" +
    "\000\004\014\u0262\001\002\000\010\015\u0155\017\u0156\037" +
    "\uff6e\001\002\000\004\037\uff6f\001\002\000\004\016\u0265" +
    "\001\002\000\010\015\u0155\017\u0156\037\uff74\001\002\000" +
    "\004\037\uff75\001\002\000\004\014\u0268\001\002\000\010" +
    "\015\u0155\017\u0156\037\uff72\001\002\000\004\037\uff73\001" +
    "\002\000\004\010\u026b\001\002\000\022\007\054\011\050" +
    "\013\055\024\uffe1\027\052\036\051\042\056\044\053\001" +
    "\002\000\004\024\uffe2\001\002\000\004\024\u026e\001\002" +
    "\000\004\116\u026f\001\002\000\004\113\uff55\001\002\000" +
    "\004\115\u0271\001\002\000\010\010\uff5c\112\037\114\036" +
    "\001\002\000\004\010\uff5d\001\002\000\036\005\007\011" +
    "\024\013\017\015\016\017\020\021\013\023\023\030\uffec" +
    "\031\uffec\033\uffec\034\014\036\010\040\uffec\041\uffec\001" +
    "\002\000\014\030\uffed\031\uffed\033\uffed\040\uffed\041\uffed" +
    "\001\002\000\004\024\u0276\001\002\000\006\112\037\114" +
    "\036\001\002\000\004\010\uff60\001\002\000\004\022\u0279" +
    "\001\002\000\036\005\007\011\024\013\017\015\016\017" +
    "\020\021\013\023\023\030\ufff6\031\ufff6\033\ufff6\034\014" +
    "\036\010\040\ufff6\041\ufff6\001\002\000\014\030\ufff7\031" +
    "\ufff7\033\ufff7\040\ufff7\041\ufff7\001\002\000\004\024\u027c" +
    "\001\002\000\026\005\uffe5\011\uffe5\013\uffe5\015\uffe5\017" +
    "\uffe5\021\uffe5\023\uffe5\027\u027d\034\uffe5\036\uffe5\001\002" +
    "\000\012\056\u0140\070\u013c\072\u013f\122\u013e\001\002\000" +
    "\004\026\u027f\001\002\000\024\005\uffe4\011\uffe4\013\uffe4" +
    "\015\uffe4\017\uffe4\021\uffe4\023\uffe4\034\uffe4\036\uffe4\001" +
    "\002\000\004\026\u0281\001\002\000\024\005\uffe3\011\uffe3" +
    "\013\uffe3\015\uffe3\017\uffe3\021\uffe3\023\uffe3\034\uffe3\036" +
    "\uffe3\001\002\000\004\016\u0283\001\002\000\036\005\007" +
    "\011\024\013\017\015\016\017\020\021\013\023\023\030" +
    "\ufff2\031\ufff2\033\ufff2\034\014\036\010\040\ufff2\041\ufff2" +
    "\001\002\000\014\030\ufff3\031\ufff3\033\ufff3\040\ufff3\041" +
    "\ufff3\001\002\000\004\012\u0286\001\002\000\036\005\007" +
    "\011\024\013\017\015\016\017\020\021\013\023\023\030" +
    "\uffee\031\uffee\033\uffee\034\014\036\010\040\uffee\041\uffee" +
    "\001\002\000\014\030\uffef\031\uffef\033\uffef\040\uffef\041" +
    "\uffef\001\002\000\004\014\u0289\001\002\000\036\005\007" +
    "\011\024\013\017\015\016\017\020\021\013\023\023\030" +
    "\ufff0\031\ufff0\033\ufff0\034\014\036\010\040\ufff0\041\ufff0" +
    "\001\002\000\014\030\ufff1\031\ufff1\033\ufff1\040\ufff1\041" +
    "\ufff1\001\002\000\010\030\ufffd\033\ufffd\040\u028d\001\002" +
    "\000\030\005\007\011\024\013\017\015\016\017\020\021" +
    "\013\023\023\025\022\027\021\034\014\036\010\001\002" +
    "\000\030\005\007\011\024\013\017\015\016\017\020\021" +
    "\013\023\023\025\022\027\021\034\014\036\010\001\002" +
    "\000\006\030\ufffc\033\ufffc\001\002\000\024\005\007\011" +
    "\024\013\017\015\016\017\020\021\013\023\023\034\014" +
    "\036\010\001\002\000\004\041\u0291\001\002\000\006\030" +
    "\ufff8\033\ufff8\001\002\000\004\041\u0293\001\002\000\006" +
    "\030\ufff9\033\ufff9\001\002\000\004\030\u0295\001\002\000" +
    "\010\030\ufffa\033\ufffa\040\ufffa\001\002\000\006\030\ufffe" +
    "\033\ufffe\001\002\000\004\035\u0298\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\013\023\023" +
    "\030\uffe8\031\uffe8\033\uffe8\034\014\036\010\040\uffe8\041" +
    "\uffe8\001\002\000\014\030\uffe9\031\uffe9\033\uffe9\040\uffe9" +
    "\041\uffe9\001\002\000\004\020\u029b\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\013\023\023" +
    "\030\ufff4\031\ufff4\033\ufff4\034\014\036\010\040\ufff4\041" +
    "\ufff4\001\002\000\014\030\ufff5\031\ufff5\033\ufff5\040\ufff5" +
    "\041\ufff5\001\002\000\004\002\000\001\002\000\004\031" +
    "\u028c\001\002\000\004\040\u028d\001\002\000\006\030\uffff" +
    "\033\uffff\001\002\000\004\037\u02a2\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\013\023\023" +
    "\030\uffe6\031\uffe6\033\uffe6\034\014\036\010\040\uffe6\041" +
    "\uffe6\001\002\000\014\030\uffe7\031\uffe7\033\uffe7\040\uffe7" +
    "\041\uffe7\001\002\000\004\004\u02a5\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\013\023\023" +
    "\030\uffea\031\uffea\033\uffea\034\014\036\010\040\uffea\041" +
    "\uffea\001\002\000\014\030\uffeb\031\uffeb\033\uffeb\040\uffeb" +
    "\041\uffeb\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02a5\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\003\011\004\010\005\014\001\001" +
    "\000\004\045\u02a3\001\001\000\004\016\u02a0\001\001\000" +
    "\004\005\u029d\001\001\000\002\001\001\000\004\043\u0299" +
    "\001\001\000\004\046\u0296\001\001\000\006\006\u028a\007" +
    "\u028d\001\001\000\004\033\u0287\001\001\000\004\021\u0284" +
    "\001\001\000\004\032\u0281\001\001\000\004\011\u027f\001" +
    "\001\000\004\010\u027a\001\001\000\004\042\u0277\001\001" +
    "\000\004\014\025\001\001\000\004\010\u0274\001\001\000" +
    "\002\001\001\000\004\031\u026f\001\001\000\004\030\031" +
    "\001\001\000\004\010\u026c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\015\034\001\001\000\002\001\001" +
    "\000\004\031\044\001\001\000\004\030\037\001\001\000" +
    "\002\001\001\000\004\015\041\001\001\000\002\001\001" +
    "\000\004\010\056\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\015\046\001\001\000\002\001\001\000\004" +
    "\014\u0269\001\001\000\004\016\u014f\001\001\000\004\011" +
    "\u013c\001\001\000\004\013\u0113\001\001\000\004\012\u0105" +
    "\001\001\000\004\021\254\001\001\000\004\020\061\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\041\226\001\001\000\004\040" +
    "\065\001\001\000\004\022\222\001\001\000\002\001\001" +
    "\000\004\046\215\001\001\000\004\040\214\001\001\000" +
    "\004\023\071\001\001\000\002\001\001\000\004\022\207" +
    "\001\001\000\004\046\204\001\001\000\004\023\203\001" +
    "\001\000\004\020\200\001\001\000\004\023\175\001\001" +
    "\000\004\024\101\001\001\000\004\022\172\001\001\000" +
    "\002\001\001\000\004\046\112\001\001\000\004\024\110" +
    "\001\001\000\004\023\105\001\001\000\002\001\001\000" +
    "\004\024\107\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\022\140\001\001\000\002\001\001\000\004\046" +
    "\132\001\001\000\004\046\131\001\001\000\004\020\126" +
    "\001\001\000\004\023\123\001\001\000\004\024\120\001" +
    "\001\000\002\001\001\000\004\046\122\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\125\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\130\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\046\134\001\001\000\002\001\001\000\004\024\136" +
    "\001\001\000\002\001\001\000\004\022\165\001\001\000" +
    "\002\001\001\000\004\046\160\001\001\000\004\022\157" +
    "\001\001\000\004\020\154\001\001\000\004\023\151\001" +
    "\001\000\004\024\146\001\001\000\002\001\001\000\004" +
    "\022\150\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\022\153\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\022\156\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\022\162\001\001\000\002" +
    "\001\001\000\004\046\164\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\167\001\001\000\002\001\001" +
    "\000\004\023\171\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\174\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\177\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\202\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\023\206\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\211" +
    "\001\001\000\002\001\001\000\004\040\213\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\040\217\001\001\000\002\001\001\000\004\020\221\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\040\224" +
    "\001\001\000\002\001\001\000\004\022\243\001\001\000" +
    "\002\001\001\000\004\046\236\001\001\000\004\041\235" +
    "\001\001\000\004\023\232\001\001\000\002\001\001\000" +
    "\004\041\234\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\041\240\001\001\000\002\001" +
    "\001\000\004\020\242\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\041\245\001\001\000\002\001\001\000" +
    "\004\010\247\001\001\000\002\001\001\000\004\035\360" +
    "\001\001\000\004\034\337\001\001\000\004\036\314\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\037\262" +
    "\001\001\000\004\024\257\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\301\001\001\000\002\001\001" +
    "\000\004\046\272\001\001\000\004\037\271\001\001\000" +
    "\004\023\266\001\001\000\002\001\001\000\004\037\270" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\274\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\277\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\037\303\001\001" +
    "\000\002\001\001\000\004\010\305\001\001\000\002\001" +
    "\001\000\004\021\307\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\331\001\001\000\004\046\326\001" +
    "\001\000\004\036\325\001\001\000\002\001\001\000\004" +
    "\023\316\001\001\000\002\001\001\000\004\036\320\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\021\323" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\036\330\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\036\333\001\001\000" +
    "\002\001\001\000\004\022\354\001\001\000\004\046\351" +
    "\001\001\000\004\034\350\001\001\000\002\001\001\000" +
    "\004\023\341\001\001\000\002\001\001\000\004\034\343" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\021" +
    "\346\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\034\353\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\034\356\001\001" +
    "\000\002\001\001\000\004\022\377\001\001\000\002\001" +
    "\001\000\004\046\370\001\001\000\004\035\367\001\001" +
    "\000\004\023\364\001\001\000\002\001\001\000\004\035" +
    "\366\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\372\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\021\375\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\035\u0101\001" +
    "\001\000\002\001\001\000\004\022\u0110\001\001\000\004" +
    "\046\u010d\001\001\000\004\012\u010c\001\001\000\002\001" +
    "\001\000\004\023\u0107\001\001\000\002\001\001\000\004" +
    "\012\u0109\001\001\000\002\001\001\000\004\010\u010b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\012\u010f\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\u0112\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\u0119\001\001\000\004\022\u0136\001" +
    "\001\000\004\046\u0133\001\001\000\004\025\u0132\001\001" +
    "\000\004\023\u012f\001\001\000\002\001\001\000\006\013" +
    "\u011b\027\u011c\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\u011f\001\001\000\004\022\u012c\001\001\000" +
    "\002\001\001\000\004\046\u0127\001\001\000\004\026\u0126" +
    "\001\001\000\004\023\u0123\001\001\000\002\001\001\000" +
    "\004\026\u0125\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\026\u0129\001\001\000\002\001" +
    "\001\000\004\027\u012b\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\u012e\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\u0131\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\025\u0135\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\025\u0138" +
    "\001\001\000\002\001\001\000\004\010\u013a\001\001\000" +
    "\002\001\001\000\004\022\u0149\001\001\000\002\001\001" +
    "\000\004\011\u0146\001\001\000\004\023\u0143\001\001\000" +
    "\004\024\u0140\001\001\000\002\001\001\000\004\011\u0142" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u0145\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\u0148\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u014b\001\001\000\002\001\001\000\004\033\u0266" +
    "\001\001\000\004\032\u0263\001\001\000\004\011\u0152\001" +
    "\001\000\002\001\001\000\004\010\u0151\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\017\u0156\001\001\000" +
    "\004\033\u0260\001\001\000\004\032\u0162\001\001\000\002" +
    "\001\001\000\004\045\u025d\001\001\000\004\032\u025c\001" +
    "\001\000\004\043\u0259\001\001\000\004\046\u0256\001\001" +
    "\000\004\023\u0253\001\001\000\004\024\u0250\001\001\000" +
    "\004\021\u024d\001\001\000\004\022\u024a\001\001\000\004" +
    "\014\u0247\001\001\000\004\042\u0169\001\001\000\004\020" +
    "\u0165\001\001\000\002\001\001\000\004\017\u0164\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u0167\001" +
    "\001\000\002\001\001\000\004\047\u0173\001\001\000\002" +
    "\001\001\000\004\032\u016b\001\001\000\002\001\001\000" +
    "\004\045\u0244\001\001\000\004\016\u0241\001\001\000\004" +
    "\043\u01a7\001\001\000\004\046\u019d\001\001\000\004\033" +
    "\u018a\001\001\000\004\021\u0181\001\001\000\004\032\u017e" +
    "\001\001\000\002\001\001\000\004\014\u0179\001\001\000" +
    "\004\042\u0176\001\001\000\002\001\001\000\004\047\u0178" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\047" +
    "\u017b\001\001\000\002\001\001\000\004\042\u017d\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\047\u0180\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\047\u0183" +
    "\001\001\000\002\001\001\000\004\022\u019a\001\001\000" +
    "\004\046\u0197\001\001\000\004\033\u0196\001\001\000\004" +
    "\020\u0193\001\001\000\004\023\u0190\001\001\000\004\024" +
    "\u018d\001\001\000\002\001\001\000\004\047\u018c\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\033\u018f\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\u0192" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\u0195\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\033\u0199\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\033\u019c\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\047\u019f\001\001\000\002\001" +
    "\001\000\004\045\u023e\001\001\000\004\016\u023b\001\001" +
    "\000\004\043\u0238\001\001\000\004\046\u0235\001\001\000" +
    "\004\033\u0232\001\001\000\004\021\u022f\001\001\000\004" +
    "\032\u022c\001\001\000\002\001\001\000\004\011\u0227\001" +
    "\001\000\004\042\u0224\001\001\000\004\014\u01ab\001\001" +
    "\000\002\001\001\000\004\044\u01b4\001\001\000\004\045" +
    "\u01d1\001\001\000\004\016\u01cc\001\001\000\004\043\u01c9" +
    "\001\001\000\004\046\u01c6\001\001\000\004\033\u01c3\001" +
    "\001\000\004\021\u01c0\001\001\000\004\032\u01bd\001\001" +
    "\000\002\001\001\000\004\042\u01ba\001\001\000\004\014" +
    "\u01b7\001\001\000\002\001\001\000\004\044\u01b9\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\044\u01bc\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\044\u01bf" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\044" +
    "\u01c2\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\044\u01c5\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\044\u01c8\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\u01cb\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\044\u01ce\001\001\000\002\001\001\000\004" +
    "\014\u0221\001\001\000\004\050\u01d5\001\001\000\002\001" +
    "\001\000\004\044\u01d3\001\001\000\002\001\001\000\004" +
    "\052\u021c\001\001\000\002\001\001\000\004\051\u020f\001" +
    "\001\000\004\053\u01d8\001\001\000\002\001\001\000\004" +
    "\054\u01db\001\001\000\004\055\u01f2\001\001\000\002\001" +
    "\001\000\004\056\u01dd\001\001\000\002\001\001\000\004" +
    "\051\u01e3\001\001\000\004\053\u01e0\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\054\u01e8\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\053\u01e6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\054\u01eb\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\016\u020b\001\001\000\004\055\u020a" +
    "\001\001\000\004\043\u0207\001\001\000\004\046\u0204\001" +
    "\001\000\004\033\u0201\001\001\000\002\001\001\000\004" +
    "\032\u01fc\001\001\000\004\042\u01f9\001\001\000\004\014" +
    "\u01f6\001\001\000\002\001\001\000\004\055\u01f8\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\055\u01fb\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\055\u01fe" +
    "\001\001\000\002\001\001\000\004\054\u0200\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\055\u0203\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\055\u0206\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\055\u0209" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\055\u020d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\052" +
    "\u0213\001\001\000\004\054\u0218\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\053\u0216\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\045\u021b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\053\u021f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\045" +
    "\u0223\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\044\u0226\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\044\u0229\001\001\000\002\001\001\000\004\047\u022b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\044" +
    "\u022e\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\044\u0231\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\044\u0234\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\044\u0237\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\044\u023a\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\044\u023d\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\044\u0240\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\047\u0243\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\047\u0246\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\032\u0249\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\032\u024c\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u024f\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\032\u0252" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\032" +
    "\u0255\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\032\u0258\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\u025b\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\032\u025f\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\017\u0262\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\017\u0265\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\u0268\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\u026b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\015\u0271\001" +
    "\001\000\002\001\001\000\004\005\u0273\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\015\u0276\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\u0279\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\u027d\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\u0283\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u0286\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\u0289\001\001\000\002\001\001\000\004" +
    "\007\u0295\001\001\000\010\003\u0293\004\010\005\014\001" +
    "\001\000\006\004\u028e\005\u028f\001\001\000\002\001\001" +
    "\000\004\005\u0291\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\u0298\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u029b\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\006\u029e\001\001\000\004\007\u029f\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u02a2\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\u02a5" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getSymbol(){
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ENTRYTBL ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // ENTRYTBL ::= AperturaThead THEAD CierreThead AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // ENTRY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // ENTRY ::= AperturaComment COMMENT CierreComment ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // ENTRY ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // ENTRY ::= AperturaPara PARRAFO CierrePara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // ENTRY ::= Texto ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // ENTRY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // ROW ::= AperturaEntry ENTRY CierreEntry 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // ROW ::= AperturaEntry ENTRY CierreEntry ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // TBODY ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TBODY",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // TFOOT ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TFOOT",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // THEAD ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("THEAD",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // TGROUP ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // TGROUP ::= AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // TGROUP ::= AperturaThead THEAD CierreThead AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // NIMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // NIMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // IMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // IMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // IMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // IMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // IMPORTANT ::= AperturaTitulo TITULO CierreTitulo NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // LISTITEM ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // LISTITEM ::= AperturaComment COMMENT CierreComment LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LISTITEM ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LISTITEM ::= AperturaPara PARRAFO CierrePara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem ITEMIZEDLIST 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // LINK ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // LINK ::= Texto LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // LINK ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // LINK ::= AperturaEmail EMAIL CierreEmail LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // LINK ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // LINK ::= AperturaAuthor AUTHOR CierreAuthor LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // LINK ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // LINK ::= AperturaComment COMMENT CierreComment LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // LINK ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // LINK ::= AperturaLink LINK CierreLink LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // COMMENT ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // COMMENT ::= Texto COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // COMMENT ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // COMMENT ::= AperturaEmail EMAIL CierreEmail COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // COMMENT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // COMMENT ::= AperturaComment COMMENT CierreComment COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // COMMENT ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // COMMENT ::= AperturaLink LINK CierreLink COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // SIMPARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // SIMPARRAFO ::= Texto SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // SIMPARRAFO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // SIMPARRAFO ::= AperturaLink LINK CierreLink SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // PARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // PARRAFO ::= Texto PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // PARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // PARRAFO ::= AperturaEmail EMAIL CierreEmail PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // PARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // PARRAFO ::= AperturaComment COMMENT CierreComment PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // PARRAFO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // PARRAFO ::= AperturaLink LINK CierreLink PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // EMPHASIS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // EMPHASIS ::= Texto EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // EMPHASIS ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // EMPHASIS ::= AperturaComment COMMENT CierreComment EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // EMPHASIS ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // EMPHASIS ::= AperturaLink LINK CierreLink EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // VIDEOOBJECT ::= Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // VIDEOOBJECT ::= AperturaInfo INFORMACION CierreInfo Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // IMAGEOBJECT ::= Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // IMAGEOBJECT ::= AperturaInfo INFORMACION CierreInfo Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // MEDIAOBJECT ::= AperturaInfo INFORMACION CierreInfo NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // HOLDER ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // HOLDER ::= AperturaComment COMMENT CierreComment HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // HOLDER ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // HOLDER ::= AperturaLink LINK CierreLink HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // HOLDER ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // HOLDER ::= Texto HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // NHOLDER ::= AperturaHolder HOLDER CierreHolder 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // NHOLDER ::= AperturaHolder HOLDER CierreHolder NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // COPYRIGHT ::= AperturaYear YEAR CierreYear NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // COPYRIGHT ::= AperturaYear YEAR CierreYear COPYRIGHT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // COPYRIGHT ::= AperturaYear YEAR CierreYear 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // NABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // NABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // ABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // ABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // ABSTRACT ::= AperturaTitulo TITULO CierreTitulo NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // YEAR ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // YEAR ::= AperturaComment COMMENT CierreComment YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // YEAR ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // YEAR ::= AperturaLink LINK CierreLink YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // YEAR ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // YEAR ::= Texto YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // SURNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // SURNAME ::= AperturaComment COMMENT CierreComment SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // SURNAME ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // SURNAME ::= AperturaLink LINK CierreLink SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // SURNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // SURNAME ::= Texto SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // FIRSTNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // FIRSTNAME ::= AperturaComment COMMENT CierreComment FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // FIRSTNAME ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // FIRSTNAME ::= AperturaLink LINK CierreLink FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // FIRSTNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // FIRSTNAME ::= Texto FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // EMAIL ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // EMAIL ::= AperturaComment COMMENT CierreComment EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // EMAIL ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // EMAIL ::= AperturaLink LINK CierreLink EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // EMAIL ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // EMAIL ::= Texto EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // PHONE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // PHONE ::= AperturaComment COMMENT CierreComment PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // PHONE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // PHONE ::= AperturaLink LINK CierreLink PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // PHONE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // PHONE ::= Texto PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // STATE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // STATE ::= AperturaComment COMMENT CierreComment STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // STATE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // STATE ::= AperturaLink LINK CierreLink STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // STATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // STATE ::= Texto STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // CITY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // CITY ::= AperturaComment COMMENT CierreComment CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // CITY ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // CITY ::= AperturaLink LINK CierreLink CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // CITY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // CITY ::= Texto CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // STREET ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // STREET ::= AperturaComment COMMENT CierreComment STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // STREET ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // STREET ::= AperturaLink LINK CierreLink STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // STREET ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // STREET ::= Texto STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ADDRESS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ADDRESS ::= AperturaPhone PHONE CierrePhone 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ADDRESS ::= AperturaPhone PHONE CierrePhone AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ADDRESS ::= AperturaState STATE CierreState 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ADDRESS ::= AperturaState STATE CierreState AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ADDRESS ::= AperturaCity CITY CierreCity 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ADDRESS ::= AperturaCity CITY CierreCity AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ADDRESS ::= AperturaStreet STREET CierreStreet 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ADDRESS ::= AperturaStreet STREET CierreStreet AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ADDRESS ::= Texto AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ADDRESS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // AUTHOR ::= AperturaSurname SURNAME CierreSurname 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // AUTHOR ::= AperturaSurname SURNAME CierreSurname AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // DATE ::= AperturaComment COMMENT CierreComment DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // DATE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // DATE ::= AperturaLink LINK CierreLink DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // DATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // DATE ::= Texto DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // TITULO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TITULO ::= AperturaEmail EMAIL CierreEmail TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TITULO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // TITULO ::= AperturaLink LINK CierreLink TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // TITULO ::= Texto TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // TITULO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // INFORMACION ::= AperturaDate DATE CierreDate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // INFORMACION ::= AperturaDate DATE CierreDate INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ENCABEZADO ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTENIDO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTENIDO ::= AperturaComment COMMENT CierreComment CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CONTENIDO ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CONTENIDO ::= AperturaPara PARRAFO CierrePara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SECTSIMPLE ::= AperturaSimpleSect CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SECTSIMPLE ::= AperturaSimpleSect ENCABEZADO CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // SECCION ::= AperturaSection ARTICULO CierreSection 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ARTICULO ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ARTICULO ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ARTICULO ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARTICULO ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= EncabezadoXML AperturaArticulo ARTICULO CierreArticulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

