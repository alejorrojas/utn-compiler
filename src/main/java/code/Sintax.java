
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Jun 25 20:56:32 ART 2023
//----------------------------------------------------

package code;

import java_cup.runtime.*;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Jun 25 20:56:32 ART 2023
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u015a\000\002\002\004\000\002\002\006\000\002\003" +
    "\006\000\002\003\005\000\002\003\005\000\002\003\005" +
    "\000\002\003\004\000\002\003\004\000\002\003\003\000" +
    "\002\007\005\000\002\010\006\000\002\010\005\000\002" +
    "\011\006\000\002\011\005\000\002\011\005\000\002\011" +
    "\005\000\002\011\004\000\002\011\004\000\002\011\003" +
    "\000\002\005\006\000\002\005\005\000\002\005\006\000" +
    "\002\005\005\000\002\005\006\000\002\005\005\000\002" +
    "\005\006\000\002\005\005\000\002\005\006\000\002\005" +
    "\005\000\002\005\006\000\002\005\005\000\002\005\006" +
    "\000\002\005\005\000\002\005\006\000\002\005\005\000" +
    "\002\005\006\000\002\005\005\000\002\004\005\000\002" +
    "\004\010\000\002\004\005\000\002\006\005\000\002\006" +
    "\010\000\002\006\005\000\002\012\006\000\002\012\005" +
    "\000\002\012\006\000\002\012\005\000\002\012\006\000" +
    "\002\012\005\000\002\012\006\000\002\012\005\000\002" +
    "\012\006\000\002\012\005\000\002\012\006\000\002\012" +
    "\005\000\002\012\006\000\002\012\005\000\002\013\003" +
    "\000\002\013\004\000\002\013\006\000\002\013\005\000" +
    "\002\013\006\000\002\013\005\000\002\013\006\000\002" +
    "\013\005\000\002\014\004\000\002\014\003\000\002\014" +
    "\006\000\002\014\005\000\002\014\006\000\002\014\005" +
    "\000\002\014\006\000\002\022\006\000\002\022\005\000" +
    "\002\022\006\000\002\022\005\000\002\023\003\000\002" +
    "\023\004\000\002\023\006\000\002\023\005\000\002\023" +
    "\006\000\002\023\005\000\002\023\006\000\002\023\005" +
    "\000\002\023\006\000\002\023\005\000\002\023\006\000" +
    "\002\023\005\000\002\036\004\000\002\036\003\000\002" +
    "\036\006\000\002\036\005\000\002\036\006\000\002\036" +
    "\005\000\002\036\006\000\002\036\005\000\002\037\004" +
    "\000\002\037\003\000\002\037\006\000\002\037\005\000" +
    "\002\037\006\000\002\037\005\000\002\037\006\000\002" +
    "\037\005\000\002\040\004\000\002\040\003\000\002\040" +
    "\006\000\002\040\005\000\002\040\006\000\002\040\005" +
    "\000\002\040\006\000\002\040\005\000\002\041\004\000" +
    "\002\041\003\000\002\041\006\000\002\041\005\000\002" +
    "\041\006\000\002\041\005\000\002\041\006\000\002\041" +
    "\005\000\002\026\004\000\002\026\003\000\002\026\006" +
    "\000\002\026\005\000\002\026\006\000\002\026\005\000" +
    "\002\026\006\000\002\026\005\000\002\042\004\000\002" +
    "\042\003\000\002\042\006\000\002\042\005\000\002\042" +
    "\006\000\002\042\005\000\002\042\006\000\002\042\005" +
    "\000\002\043\004\000\002\043\003\000\002\043\006\000" +
    "\002\043\005\000\002\043\006\000\002\043\005\000\002" +
    "\043\006\000\002\043\005\000\002\027\004\000\002\027" +
    "\003\000\002\027\006\000\002\027\005\000\002\027\006" +
    "\000\002\027\005\000\002\027\006\000\002\027\005\000" +
    "\002\020\006\000\002\020\006\000\002\020\005\000\002" +
    "\020\006\000\002\020\005\000\002\021\006\000\002\021" +
    "\005\000\002\021\006\000\002\021\005\000\002\015\005" +
    "\000\002\015\006\000\002\015\006\000\002\031\006\000" +
    "\002\031\005\000\002\030\004\000\002\030\003\000\002" +
    "\030\006\000\002\030\005\000\002\030\006\000\002\030" +
    "\005\000\002\030\006\000\002\030\005\000\002\016\006" +
    "\000\002\016\006\000\002\016\005\000\002\016\006\000" +
    "\002\016\005\000\002\017\006\000\002\017\005\000\002" +
    "\017\006\000\002\017\005\000\002\033\006\000\002\033" +
    "\003\000\002\032\006\000\002\032\003\000\002\024\006" +
    "\000\002\024\005\000\002\024\006\000\002\024\005\000" +
    "\002\024\006\000\002\024\005\000\002\024\006\000\002" +
    "\024\005\000\002\024\006\000\002\024\005\000\002\024" +
    "\004\000\002\024\003\000\002\034\006\000\002\034\005" +
    "\000\002\034\006\000\002\034\005\000\002\034\006\000" +
    "\002\034\005\000\002\034\006\000\002\034\005\000\002" +
    "\034\006\000\002\034\005\000\002\034\004\000\002\034" +
    "\003\000\002\034\006\000\002\034\005\000\002\034\006" +
    "\000\002\034\005\000\002\034\006\000\002\034\005\000" +
    "\002\034\006\000\002\034\005\000\002\034\006\000\002" +
    "\034\005\000\002\035\006\000\002\035\005\000\002\035" +
    "\006\000\002\035\005\000\002\035\006\000\002\035\005" +
    "\000\002\035\006\000\002\035\005\000\002\035\006\000" +
    "\002\035\005\000\002\035\004\000\002\035\003\000\002" +
    "\050\006\000\002\050\005\000\002\050\006\000\002\050" +
    "\005\000\002\050\006\000\002\050\005\000\002\050\006" +
    "\000\002\050\005\000\002\050\006\000\002\050\005\000" +
    "\002\050\004\000\002\050\003\000\002\025\006\000\002" +
    "\025\005\000\002\025\006\000\002\025\005\000\002\025" +
    "\006\000\002\025\005\000\002\025\006\000\002\025\005" +
    "\000\002\025\006\000\002\025\005\000\002\025\004\000" +
    "\002\025\003\000\002\044\006\000\002\044\005\000\002" +
    "\051\006\000\002\051\005\000\002\051\006\000\002\051" +
    "\005\000\002\051\006\000\002\051\005\000\002\051\006" +
    "\000\002\051\005\000\002\051\006\000\002\051\005\000" +
    "\002\051\006\000\002\051\005\000\002\051\006\000\002" +
    "\051\005\000\002\051\006\000\002\051\005\000\002\051" +
    "\006\000\002\051\005\000\002\045\006\000\002\045\006" +
    "\000\002\045\005\000\002\045\006\000\002\045\005\000" +
    "\002\045\006\000\002\045\005\000\002\045\006\000\002" +
    "\045\005\000\002\045\006\000\002\045\005\000\002\045" +
    "\006\000\002\045\005\000\002\045\006\000\002\045\005" +
    "\000\002\045\006\000\002\045\005\000\002\045\006\000" +
    "\002\045\005\000\002\046\006\000\002\046\005\000\002" +
    "\046\006\000\002\046\005\000\002\046\006\000\002\046" +
    "\005\000\002\046\006\000\002\046\005\000\002\046\006" +
    "\000\002\046\005\000\002\046\006\000\002\046\005\000" +
    "\002\046\006\000\002\046\005\000\002\046\006\000\002" +
    "\046\005\000\002\046\006\000\002\046\005\000\002\047" +
    "\006\000\002\047\005\000\002\047\006\000\002\047\005" +
    "\000\002\052\013\000\002\052\010\000\002\052\005\000" +
    "\002\053\005\000\002\054\005\000\002\055\005\000\002" +
    "\056\006\000\002\056\005\000\002\056\006\000\002\056" +
    "\005\000\002\057\003\000\002\057\004\000\002\057\006" +
    "\000\002\057\005\000\002\057\006\000\002\057\005\000" +
    "\002\057\006\000\002\057\005\000\002\057\006\000\002" +
    "\057\005\000\002\057\006\000\002\057\005\000\002\057" +
    "\006\000\002\057\005\000\002\057\006\000\002\057\005" +
    "\000\002\060\010\000\002\060\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02af\000\004\124\005\001\002\000\004\002\u02b1\001" +
    "\002\000\004\030\006\001\002\000\030\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\025\022\032" +
    "\014\034\010\121\021\001\002\000\006\011\u01ca\072\u01cb" +
    "\001\002\000\010\015\u0144\017\u0145\121\u0146\001\002\000" +
    "\024\005\007\011\024\013\017\015\016\017\020\021\012" +
    "\023\023\032\014\034\010\001\002\000\026\005\u019b\011" +
    "\u01a5\013\u01a0\015\u019f\017\u01a1\021\u019d\023\u01a4\032\u019e" +
    "\034\u019c\121\u01a3\001\002\000\004\031\u02a3\001\002\000" +
    "\016\032\131\040\133\054\135\066\127\070\134\120\132" +
    "\001\002\000\010\027\u0283\031\ufff9\036\u0284\001\002\000" +
    "\016\032\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181" +
    "\001\002\000\016\044\062\046\063\050\064\052\067\054" +
    "\070\120\065\001\002\000\030\005\u014f\011\u0158\013\u0155" +
    "\021\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070" +
    "\u0153\120\u0150\001\002\000\012\054\u0137\066\u0133\070\u0136" +
    "\120\u0135\001\002\000\020\007\053\011\050\013\056\034" +
    "\051\040\055\042\054\121\052\001\002\000\004\116\u0163" +
    "\001\002\000\010\025\025\110\027\112\030\001\002\000" +
    "\020\007\053\011\050\013\056\034\051\040\055\042\054" +
    "\121\052\001\002\000\004\010\u026a\001\002\000\006\025" +
    "\043\114\045\001\002\000\006\025\031\115\033\001\002" +
    "\000\020\007\053\011\050\013\056\034\051\040\055\042" +
    "\054\121\052\001\002\000\004\113\034\001\002\000\004" +
    "\113\uff49\001\002\000\010\010\uff4f\110\036\112\037\001" +
    "\002\000\004\010\uff50\001\002\000\006\025\043\114\045" +
    "\001\002\000\006\025\031\115\033\001\002\000\004\113" +
    "\041\001\002\000\010\010\uff4b\110\036\112\037\001\002" +
    "\000\004\010\uff4c\001\002\000\020\007\053\011\050\013" +
    "\056\034\051\040\055\042\054\121\052\001\002\000\004" +
    "\111\046\001\002\000\004\111\uff47\001\002\000\010\010" +
    "\uff4d\110\036\112\037\001\002\000\004\010\uff4e\001\002" +
    "\000\010\025\025\110\027\112\030\001\002\000\010\015" +
    "\u0144\017\u0145\121\u0146\001\002\000\012\054\u0137\066\u0133" +
    "\070\u0136\120\u0135\001\002\000\012\032\u0123\066\u0122\070" +
    "\u0126\120\u0124\001\002\000\004\062\373\001\002\000\006" +
    "\056\115\060\114\001\002\000\016\044\062\046\063\050" +
    "\064\052\067\054\070\120\065\001\002\000\004\024\060" +
    "\001\002\000\004\114\061\001\002\000\004\111\uff48\001" +
    "\002\000\012\032\347\066\346\070\352\120\350\001\002" +
    "\000\012\032\327\066\325\070\331\120\330\001\002\000" +
    "\012\032\305\066\304\070\310\120\306\001\002\000\020" +
    "\012\uffb5\044\062\046\063\050\064\052\067\054\070\120" +
    "\065\001\002\000\004\012\301\001\002\000\012\032\262" +
    "\066\260\070\264\120\263\001\002\000\012\032\073\066" +
    "\071\070\075\120\074\001\002\000\016\032\157\040\161" +
    "\054\163\066\155\070\162\120\160\001\002\000\004\055" +
    "\253\001\002\000\016\032\131\040\133\054\135\066\127" +
    "\070\134\120\132\001\002\000\014\032\073\055\uff88\066" +
    "\071\070\075\120\074\001\002\000\016\032\100\040\102" +
    "\054\104\066\077\070\103\120\101\001\002\000\004\071" +
    "\245\001\002\000\016\032\157\040\161\054\163\066\155" +
    "\070\162\120\160\001\002\000\016\032\131\040\133\054" +
    "\135\066\127\070\134\120\132\001\002\000\020\032\100" +
    "\040\102\054\104\066\077\070\103\071\uff01\120\101\001" +
    "\002\000\006\056\115\060\114\001\002\000\016\032\100" +
    "\040\102\054\104\066\077\070\103\120\101\001\002\000" +
    "\012\032\073\066\071\070\075\120\074\001\002\000\004" +
    "\055\106\001\002\000\020\032\100\040\102\054\104\066" +
    "\077\070\103\071\uff03\120\101\001\002\000\004\071\uff04" +
    "\001\002\000\004\071\111\001\002\000\020\032\100\040" +
    "\102\054\104\066\077\070\103\071\uff0b\120\101\001\002" +
    "\000\004\071\uff0c\001\002\000\004\041\234\001\002\000" +
    "\012\032\215\066\213\070\217\120\216\001\002\000\012" +
    "\032\120\066\116\070\122\120\121\001\002\000\016\032" +
    "\157\040\161\054\163\066\155\070\162\120\160\001\002" +
    "\000\004\057\206\001\002\000\016\032\131\040\133\054" +
    "\135\066\127\070\134\120\132\001\002\000\014\032\120" +
    "\057\uff80\066\116\070\122\120\121\001\002\000\016\032" +
    "\100\040\102\054\104\066\077\070\103\120\101\001\002" +
    "\000\004\071\124\001\002\000\014\032\120\057\uff7e\066" +
    "\116\070\122\120\121\001\002\000\004\057\uff7f\001\002" +
    "\000\004\057\uff81\001\002\000\016\032\157\040\161\054" +
    "\163\066\155\070\162\120\160\001\002\000\004\033\153" +
    "\001\002\000\016\032\131\040\133\054\135\066\127\070" +
    "\134\120\132\001\002\000\020\032\131\033\uff0d\040\133" +
    "\054\135\066\127\070\134\120\132\001\002\000\006\056" +
    "\115\060\114\001\002\000\016\032\100\040\102\054\104" +
    "\066\077\070\103\120\101\001\002\000\012\032\073\066" +
    "\071\070\075\120\074\001\002\000\004\055\137\001\002" +
    "\000\020\032\131\033\uff0f\040\133\054\135\066\127\070" +
    "\134\120\132\001\002\000\004\033\uff10\001\002\000\004" +
    "\071\142\001\002\000\020\032\131\033\uff17\040\133\054" +
    "\135\066\127\070\134\120\132\001\002\000\004\033\uff18" +
    "\001\002\000\004\041\145\001\002\000\020\032\131\033" +
    "\uff11\040\133\054\135\066\127\070\134\120\132\001\002" +
    "\000\004\033\uff12\001\002\000\004\033\uff0e\001\002\000" +
    "\004\033\151\001\002\000\020\032\131\033\uff13\040\133" +
    "\054\135\066\127\070\134\120\132\001\002\000\004\033" +
    "\uff14\001\002\000\014\032\120\057\uff7a\066\116\070\122" +
    "\120\121\001\002\000\004\057\uff7b\001\002\000\016\032" +
    "\157\040\161\054\163\066\155\070\162\120\160\001\002" +
    "\000\004\067\201\001\002\000\016\032\131\040\133\054" +
    "\135\066\127\070\134\120\132\001\002\000\020\032\157" +
    "\040\161\054\163\066\155\067\uff3b\070\162\120\160\001" +
    "\002\000\006\056\115\060\114\001\002\000\016\032\100" +
    "\040\102\054\104\066\077\070\103\120\101\001\002\000" +
    "\012\032\073\066\071\070\075\120\074\001\002\000\004" +
    "\055\165\001\002\000\020\032\157\040\161\054\163\066" +
    "\155\067\uff3d\070\162\120\160\001\002\000\004\067\uff3e" +
    "\001\002\000\004\071\170\001\002\000\020\032\157\040" +
    "\161\054\163\066\155\067\uff45\070\162\120\160\001\002" +
    "\000\004\067\uff46\001\002\000\004\041\173\001\002\000" +
    "\020\032\157\040\161\054\163\066\155\067\uff3f\070\162" +
    "\120\160\001\002\000\004\067\uff40\001\002\000\004\067" +
    "\uff3c\001\002\000\004\033\177\001\002\000\020\032\157" +
    "\040\161\054\163\066\155\067\uff41\070\162\120\160\001" +
    "\002\000\004\067\uff42\001\002\000\020\032\131\033\uff15" +
    "\040\133\054\135\066\127\070\134\120\132\001\002\000" +
    "\004\033\uff16\001\002\000\004\067\204\001\002\000\020" +
    "\032\157\040\161\054\163\066\155\067\uff43\070\162\120" +
    "\160\001\002\000\004\067\uff44\001\002\000\010\041\uffb8" +
    "\056\115\060\114\001\002\000\004\041\uffb9\001\002\000" +
    "\004\067\211\001\002\000\014\032\120\057\uff7c\066\116" +
    "\070\122\120\121\001\002\000\004\057\uff7d\001\002\000" +
    "\016\032\157\040\161\054\163\066\155\070\162\120\160" +
    "\001\002\000\004\061\227\001\002\000\016\032\131\040" +
    "\133\054\135\066\127\070\134\120\132\001\002\000\014" +
    "\032\215\061\uff78\066\213\070\217\120\216\001\002\000" +
    "\016\032\100\040\102\054\104\066\077\070\103\120\101" +
    "\001\002\000\004\071\221\001\002\000\014\032\215\061" +
    "\uff76\066\213\070\217\120\216\001\002\000\004\061\uff77" +
    "\001\002\000\004\061\uff79\001\002\000\004\033\225\001" +
    "\002\000\014\032\215\061\uff72\066\213\070\217\120\216" +
    "\001\002\000\004\061\uff73\001\002\000\010\041\uffb6\056" +
    "\115\060\114\001\002\000\004\041\uffb7\001\002\000\004" +
    "\067\232\001\002\000\014\032\215\061\uff74\066\213\070" +
    "\217\120\216\001\002\000\004\061\uff75\001\002\000\020" +
    "\032\100\040\102\054\104\066\077\070\103\071\uff05\120" +
    "\101\001\002\000\004\071\uff06\001\002\000\004\071\uff02" +
    "\001\002\000\004\033\240\001\002\000\020\032\100\040" +
    "\102\054\104\066\077\070\103\071\uff07\120\101\001\002" +
    "\000\004\071\uff08\001\002\000\004\067\243\001\002\000" +
    "\020\032\100\040\102\054\104\066\077\070\103\071\uff09" +
    "\120\101\001\002\000\004\071\uff0a\001\002\000\014\032" +
    "\073\055\uff86\066\071\070\075\120\074\001\002\000\004" +
    "\055\uff87\001\002\000\004\055\uff89\001\002\000\004\033" +
    "\251\001\002\000\014\032\073\055\uff82\066\071\070\075" +
    "\120\074\001\002\000\004\055\uff83\001\002\000\020\012" +
    "\uffaa\044\062\046\063\050\064\052\067\054\070\120\065" +
    "\001\002\000\004\012\uffab\001\002\000\004\067\256\001" +
    "\002\000\014\032\073\055\uff84\066\071\070\075\120\074" +
    "\001\002\000\004\055\uff85\001\002\000\016\032\157\040" +
    "\161\054\163\066\155\070\162\120\160\001\002\000\004" +
    "\053\274\001\002\000\016\032\131\040\133\054\135\066" +
    "\127\070\134\120\132\001\002\000\014\032\262\053\uff90" +
    "\066\260\070\264\120\263\001\002\000\016\032\100\040" +
    "\102\054\104\066\077\070\103\120\101\001\002\000\004" +
    "\071\266\001\002\000\014\032\262\053\uff8e\066\260\070" +
    "\264\120\263\001\002\000\004\053\uff8f\001\002\000\004" +
    "\053\uff91\001\002\000\004\033\272\001\002\000\014\032" +
    "\262\053\uff8a\066\260\070\264\120\263\001\002\000\004" +
    "\053\uff8b\001\002\000\020\012\uffac\044\062\046\063\050" +
    "\064\052\067\054\070\120\065\001\002\000\004\012\uffad" +
    "\001\002\000\004\067\277\001\002\000\014\032\262\053" +
    "\uff8c\066\260\070\264\120\263\001\002\000\004\053\uff8d" +
    "\001\002\000\022\007\053\011\050\013\056\024\uffd1\034" +
    "\051\040\055\042\054\121\052\001\002\000\004\024\uffd2" +
    "\001\002\000\004\012\uffb4\001\002\000\016\032\157\040" +
    "\161\054\163\066\155\070\162\120\160\001\002\000\016" +
    "\032\131\040\133\054\135\066\127\070\134\120\132\001" +
    "\002\000\014\032\305\051\uff98\066\304\070\310\120\306" +
    "\001\002\000\004\051\314\001\002\000\016\032\100\040" +
    "\102\054\104\066\077\070\103\120\101\001\002\000\004" +
    "\071\312\001\002\000\014\032\305\051\uff96\066\304\070" +
    "\310\120\306\001\002\000\004\051\uff97\001\002\000\020" +
    "\012\uffae\044\062\046\063\050\064\052\067\054\070\120" +
    "\065\001\002\000\004\012\uffaf\001\002\000\004\051\uff99" +
    "\001\002\000\004\033\320\001\002\000\014\032\305\051" +
    "\uff92\066\304\070\310\120\306\001\002\000\004\051\uff93" +
    "\001\002\000\004\067\323\001\002\000\014\032\305\051" +
    "\uff94\066\304\070\310\120\306\001\002\000\004\051\uff95" +
    "\001\002\000\016\032\157\040\161\054\163\066\155\070" +
    "\162\120\160\001\002\000\004\047\341\001\002\000\016" +
    "\032\131\040\133\054\135\066\127\070\134\120\132\001" +
    "\002\000\014\032\327\047\uffa0\066\325\070\331\120\330" +
    "\001\002\000\016\032\100\040\102\054\104\066\077\070" +
    "\103\120\101\001\002\000\004\071\333\001\002\000\014" +
    "\032\327\047\uff9e\066\325\070\331\120\330\001\002\000" +
    "\004\047\uff9f\001\002\000\004\047\uffa1\001\002\000\004" +
    "\033\337\001\002\000\014\032\327\047\uff9a\066\325\070" +
    "\331\120\330\001\002\000\004\047\uff9b\001\002\000\020" +
    "\012\uffb0\044\062\046\063\050\064\052\067\054\070\120" +
    "\065\001\002\000\004\012\uffb1\001\002\000\004\067\344" +
    "\001\002\000\014\032\327\047\uff9c\066\325\070\331\120" +
    "\330\001\002\000\004\047\uff9d\001\002\000\016\032\157" +
    "\040\161\054\163\066\155\070\162\120\160\001\002\000" +
    "\016\032\131\040\133\054\135\066\127\070\134\120\132" +
    "\001\002\000\014\032\347\045\uffa8\066\346\070\352\120" +
    "\350\001\002\000\004\045\356\001\002\000\016\032\100" +
    "\040\102\054\104\066\077\070\103\120\101\001\002\000" +
    "\004\071\354\001\002\000\014\032\347\045\uffa6\066\346" +
    "\070\352\120\350\001\002\000\004\045\uffa7\001\002\000" +
    "\020\012\uffb2\044\062\046\063\050\064\052\067\054\070" +
    "\120\065\001\002\000\004\012\uffb3\001\002\000\004\045" +
    "\uffa9\001\002\000\004\033\362\001\002\000\014\032\347" +
    "\045\uffa2\066\346\070\352\120\350\001\002\000\004\045" +
    "\uffa3\001\002\000\004\067\365\001\002\000\014\032\347" +
    "\045\uffa4\066\346\070\352\120\350\001\002\000\004\045" +
    "\uffa5\001\002\000\004\041\370\001\002\000\022\007\053" +
    "\011\050\013\056\024\uffcf\034\051\040\055\042\054\121" +
    "\052\001\002\000\004\024\uffd0\001\002\000\004\043\u0120" +
    "\001\002\000\012\032\375\066\374\070\377\120\376\001" +
    "\002\000\016\032\157\040\161\054\163\066\155\070\162" +
    "\120\160\001\002\000\016\032\131\040\133\054\135\066" +
    "\127\070\134\120\132\001\002\000\014\032\375\063\uff70" +
    "\066\374\070\377\120\376\001\002\000\016\032\100\040" +
    "\102\054\104\066\077\070\103\120\101\001\002\000\004" +
    "\063\u0101\001\002\000\010\043\uff60\062\373\064\u0104\001" +
    "\002\000\004\043\uff5f\001\002\000\004\043\uff5e\001\002" +
    "\000\012\032\u0107\066\u0105\070\u0109\120\u0108\001\002\000" +
    "\016\032\157\040\161\054\163\066\155\070\162\120\160" +
    "\001\002\000\004\065\u0111\001\002\000\016\032\131\040" +
    "\133\054\135\066\127\070\134\120\132\001\002\000\014" +
    "\032\u0107\065\uff5a\066\u0105\070\u0109\120\u0108\001\002\000" +
    "\016\032\100\040\102\054\104\066\077\070\103\120\101" +
    "\001\002\000\004\071\u010b\001\002\000\014\032\u0107\065" +
    "\uff58\066\u0105\070\u0109\120\u0108\001\002\000\004\065\uff59" +
    "\001\002\000\004\065\uff5b\001\002\000\004\033\u010f\001" +
    "\002\000\014\032\u0107\065\uff54\066\u0105\070\u0109\120\u0108" +
    "\001\002\000\004\065\uff55\001\002\000\006\043\uff5c\064" +
    "\u0104\001\002\000\004\043\uff5d\001\002\000\004\067\u0114" +
    "\001\002\000\014\032\u0107\065\uff56\066\u0105\070\u0109\120" +
    "\u0108\001\002\000\004\065\uff57\001\002\000\004\071\u0117" +
    "\001\002\000\014\032\375\063\uff6e\066\374\070\377\120" +
    "\376\001\002\000\004\063\uff6f\001\002\000\004\063\uff71" +
    "\001\002\000\004\033\u011b\001\002\000\014\032\375\063" +
    "\uff6a\066\374\070\377\120\376\001\002\000\004\063\uff6b" +
    "\001\002\000\004\067\u011e\001\002\000\014\032\375\063" +
    "\uff6c\066\374\070\377\120\376\001\002\000\004\063\uff6d" +
    "\001\002\000\022\007\053\011\050\013\056\024\uffcb\034" +
    "\051\040\055\042\054\121\052\001\002\000\004\024\uffcc" +
    "\001\002\000\016\032\157\040\161\054\163\066\155\070" +
    "\162\120\160\001\002\000\016\032\131\040\133\054\135" +
    "\066\127\070\134\120\132\001\002\000\014\006\uffbf\032" +
    "\u0123\066\u0122\070\u0126\120\u0124\001\002\000\004\006\u012a" +
    "\001\002\000\016\032\100\040\102\054\104\066\077\070" +
    "\103\120\101\001\002\000\004\071\u0128\001\002\000\014" +
    "\006\uffbd\032\u0123\066\u0122\070\u0126\120\u0124\001\002\000" +
    "\004\006\uffbe\001\002\000\022\007\053\011\050\013\056" +
    "\024\uffcd\034\051\040\055\042\054\121\052\001\002\000" +
    "\004\024\uffce\001\002\000\004\006\uffc0\001\002\000\004" +
    "\033\u012e\001\002\000\012\032\u0123\066\u0122\070\u0126\120" +
    "\u0124\001\002\000\004\006\uffba\001\002\000\004\067\u0131" +
    "\001\002\000\014\006\uffbb\032\u0123\066\u0122\070\u0126\120" +
    "\u0124\001\002\000\004\006\uffbc\001\002\000\016\032\157" +
    "\040\161\054\163\066\155\070\162\120\160\001\002\000" +
    "\004\122\u013f\001\002\000\014\054\u0137\066\u0133\070\u0136" +
    "\120\u0135\122\uffc8\001\002\000\016\032\100\040\102\054" +
    "\104\066\077\070\103\120\101\001\002\000\012\032\073" +
    "\066\071\070\075\120\074\001\002\000\004\055\u0139\001" +
    "\002\000\014\054\u0137\066\u0133\070\u0136\120\u0135\122\uffc1" +
    "\001\002\000\004\122\uffc2\001\002\000\004\071\u013c\001" +
    "\002\000\014\054\u0137\066\u0133\070\u0136\120\u0135\122\uffc3" +
    "\001\002\000\004\122\uffc4\001\002\000\004\122\uffc7\001" +
    "\002\000\022\007\053\011\050\013\056\024\uffc9\034\051" +
    "\040\055\042\054\121\052\001\002\000\004\024\uffca\001" +
    "\002\000\004\067\u0142\001\002\000\014\054\u0137\066\u0133" +
    "\070\u0136\120\u0135\122\uffc5\001\002\000\004\122\uffc6\001" +
    "\002\000\016\032\u0180\040\u0182\054\u0185\066\u017f\070\u0183" +
    "\120\u0181\001\002\000\030\005\u014f\011\u0158\013\u0155\021" +
    "\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153" +
    "\120\u0150\001\002\000\012\054\u0137\066\u0133\070\u0136\120" +
    "\u0135\001\002\000\004\035\u0148\001\002\000\022\007\053" +
    "\011\050\013\056\024\uffd3\034\051\040\055\042\054\121" +
    "\052\001\002\000\004\024\uffd4\001\002\000\004\122\u014b" +
    "\001\002\000\006\015\u014c\017\u014d\001\002\000\016\032" +
    "\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001\002" +
    "\000\030\005\u014f\011\u0158\013\u0155\021\u0151\023\u0157\032" +
    "\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120\u0150\001\002" +
    "\000\004\035\uff69\001\002\000\006\011\u01ca\072\u01cb\001" +
    "\002\000\032\005\u014f\011\u0158\013\u0155\016\uff2f\021\u0151" +
    "\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120" +
    "\u0150\001\002\000\026\005\u019b\011\u01a5\013\u01a0\015\u019f" +
    "\017\u01a1\021\u019d\023\u01a4\032\u019e\034\u019c\121\u01a3\001" +
    "\002\000\016\032\131\040\133\054\135\066\127\070\134" +
    "\120\132\001\002\000\016\032\100\040\102\054\104\066" +
    "\077\070\103\120\101\001\002\000\012\032\073\066\071" +
    "\070\075\120\074\001\002\000\016\044\062\046\063\050" +
    "\064\052\067\054\070\120\065\001\002\000\016\032\157" +
    "\040\161\054\163\066\155\070\162\120\160\001\002\000" +
    "\004\116\u0163\001\002\000\010\025\025\110\027\112\030" +
    "\001\002\000\006\056\115\060\114\001\002\000\004\016" +
    "\u015b\001\002\000\010\015\u014c\017\u014d\035\uff63\001\002" +
    "\000\004\035\uff64\001\002\000\004\041\u015e\001\002\000" +
    "\032\005\u014f\011\u0158\013\u0155\016\uff33\021\u0151\023\u0157" +
    "\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120\u0150\001" +
    "\002\000\004\016\uff34\001\002\000\004\010\u0161\001\002" +
    "\000\032\005\u014f\011\u0158\013\u0155\016\uff27\021\u0151\023" +
    "\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120\u0150" +
    "\001\002\000\004\016\uff28\001\002\000\024\005\u0167\011" +
    "\u0170\013\u016c\015\u016b\017\u016d\021\u0169\023\u016f\032\u016a" +
    "\034\u0168\001\002\000\004\022\u0165\001\002\000\032\005" +
    "\u014f\011\u0158\013\u0155\016\uff2d\021\u0151\023\u0157\032\u0152" +
    "\040\u0159\054\u0154\066\u0156\070\u0153\120\u0150\001\002\000" +
    "\004\016\uff2e\001\002\000\006\011\u01ca\072\u01cb\001\002" +
    "\000\010\015\u0144\017\u0145\121\u0146\001\002\000\026\005" +
    "\u019b\011\u01a5\013\u01a0\015\u019f\017\u01a1\021\u019d\023\u01a4" +
    "\032\u019e\034\u019c\121\u01a3\001\002\000\016\032\131\040" +
    "\133\054\135\066\127\070\134\120\132\001\002\000\016" +
    "\032\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001" +
    "\002\000\016\044\062\046\063\050\064\052\067\054\070" +
    "\120\065\001\002\000\030\005\u014f\011\u0158\013\u0155\021" +
    "\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153" +
    "\120\u0150\001\002\000\004\117\u0177\001\002\000\004\116" +
    "\u0163\001\002\000\010\025\025\110\027\112\030\001\002" +
    "\000\004\010\u0172\001\002\000\026\005\u0167\011\u0170\013" +
    "\u016c\015\u016b\017\u016d\021\u0169\023\u016f\032\u016a\034\u0168" +
    "\117\ufef3\001\002\000\004\117\ufef4\001\002\000\004\022" +
    "\u0175\001\002\000\026\005\u0167\011\u0170\013\u016c\015\u016b" +
    "\017\u016d\021\u0169\023\u016f\032\u016a\034\u0168\117\ufefd\001" +
    "\002\000\004\117\ufefe\001\002\000\006\022\ufeff\116\u0163" +
    "\001\002\000\004\022\uff00\001\002\000\004\016\u017a\001" +
    "\002\000\026\005\u0167\011\u0170\013\u016c\015\u016b\017\u016d" +
    "\021\u0169\023\u016f\032\u016a\034\u0168\117\ufef9\001\002\000" +
    "\004\117\ufefa\001\002\000\004\012\u017d\001\002\000\026" +
    "\005\u0167\011\u0170\013\u016c\015\u016b\017\u016d\021\u0169\023" +
    "\u016f\032\u016a\034\u0168\117\ufef5\001\002\000\004\117\ufef6" +
    "\001\002\000\016\032\157\040\161\054\163\066\155\070" +
    "\162\120\160\001\002\000\016\032\131\040\133\054\135" +
    "\066\127\070\134\120\132\001\002\000\020\014\uff19\032" +
    "\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001\002" +
    "\000\006\056\115\060\114\001\002\000\016\032\100\040" +
    "\102\054\104\066\077\070\103\120\101\001\002\000\004" +
    "\014\u0189\001\002\000\012\032\073\066\071\070\075\120" +
    "\074\001\002\000\004\055\u0187\001\002\000\020\014\uff1b" +
    "\032\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001" +
    "\002\000\004\014\uff1c\001\002\000\026\005\u0167\011\u0170" +
    "\013\u016c\015\u016b\017\u016d\021\u0169\023\u016f\032\u016a\034" +
    "\u0168\117\ufef7\001\002\000\004\117\ufef8\001\002\000\004" +
    "\071\u018c\001\002\000\020\014\uff23\032\u0180\040\u0182\054" +
    "\u0185\066\u017f\070\u0183\120\u0181\001\002\000\004\014\uff24" +
    "\001\002\000\004\041\u018f\001\002\000\020\014\uff1d\032" +
    "\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001\002" +
    "\000\004\014\uff1e\001\002\000\004\014\uff1a\001\002\000" +
    "\004\033\u0193\001\002\000\020\014\uff1f\032\u0180\040\u0182" +
    "\054\u0185\066\u017f\070\u0183\120\u0181\001\002\000\004\014" +
    "\uff20\001\002\000\004\067\u0196\001\002\000\020\014\uff21" +
    "\032\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001" +
    "\002\000\004\014\uff22\001\002\000\004\033\u0199\001\002" +
    "\000\026\005\u0167\011\u0170\013\u016c\015\u016b\017\u016d\021" +
    "\u0169\023\u016f\032\u016a\034\u0168\117\ufeef\001\002\000\004" +
    "\117\ufef0\001\002\000\006\011\u01ca\072\u01cb\001\002\000" +
    "\010\015\u0144\017\u0145\121\u0146\001\002\000\026\005\u019b" +
    "\011\u01a5\013\u01a0\015\u019f\017\u01a1\021\u019d\023\u01a4\032" +
    "\u019e\034\u019c\121\u01a3\001\002\000\016\032\131\040\133" +
    "\054\135\066\127\070\134\120\132\001\002\000\016\032" +
    "\u0180\040\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001\002" +
    "\000\016\044\062\046\063\050\064\052\067\054\070\120" +
    "\065\001\002\000\030\005\u014f\011\u0158\013\u0155\021\u0151" +
    "\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120" +
    "\u0150\001\002\000\004\020\u0225\001\002\000\012\054\u0137" +
    "\066\u0133\070\u0136\120\u0135\001\002\000\004\116\u0163\001" +
    "\002\000\010\025\025\110\027\112\030\001\002\000\004" +
    "\010\u01a7\001\002\000\026\005\u01a8\011\u01b0\013\u01ad\015" +
    "\u01ac\017\u01ae\020\ufede\021\u01aa\023\u01b1\032\u01ab\034\u01a9" +
    "\001\002\000\006\011\u01ca\072\u01cb\001\002\000\010\015" +
    "\u0144\017\u0145\121\u0146\001\002\000\026\005\u019b\011\u01a5" +
    "\013\u01a0\015\u019f\017\u01a1\021\u019d\023\u01a4\032\u019e\034" +
    "\u019c\121\u01a3\001\002\000\016\032\131\040\133\054\135" +
    "\066\127\070\134\120\132\001\002\000\016\032\u0180\040" +
    "\u0182\054\u0185\066\u017f\070\u0183\120\u0181\001\002\000\016" +
    "\044\062\046\063\050\064\052\067\054\070\120\065\001" +
    "\002\000\030\005\u014f\011\u0158\013\u0155\021\u0151\023\u0157" +
    "\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120\u0150\001" +
    "\002\000\004\020\ufedf\001\002\000\010\025\025\110\027" +
    "\112\030\001\002\000\004\116\u0163\001\002\000\004\022" +
    "\u01b3\001\002\000\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac" +
    "\017\u01ae\020\ufed6\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001" +
    "\002\000\004\020\ufed7\001\002\000\004\010\u01b6\001\002" +
    "\000\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020" +
    "\ufecc\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000\004" +
    "\020\ufecd\001\002\000\004\016\u01b9\001\002\000\026\005" +
    "\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufed2\021\u01aa" +
    "\023\u01b1\032\u01ab\034\u01a9\001\002\000\004\020\ufed3\001" +
    "\002\000\004\012\u01bc\001\002\000\026\005\u01a8\011\u01b0" +
    "\013\u01ad\015\u01ac\017\u01ae\020\ufed8\021\u01aa\023\u01b1\032" +
    "\u01ab\034\u01a9\001\002\000\004\020\ufed9\001\002\000\004" +
    "\014\u01bf\001\002\000\026\005\u01a8\011\u01b0\013\u01ad\015" +
    "\u01ac\017\u01ae\020\ufed0\021\u01aa\023\u01b1\032\u01ab\034\u01a9" +
    "\001\002\000\004\020\ufed1\001\002\000\004\033\u01c2\001" +
    "\002\000\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae" +
    "\020\ufeca\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000" +
    "\004\020\ufecb\001\002\000\004\020\u01c5\001\002\000\026" +
    "\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufed4\021" +
    "\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000\004\020\ufed5" +
    "\001\002\000\004\035\u01c8\001\002\000\026\005\u01a8\011" +
    "\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufece\021\u01aa\023\u01b1" +
    "\032\u01ab\034\u01a9\001\002\000\004\020\ufecf\001\002\000" +
    "\010\025\025\110\027\112\030\001\002\000\010\074\u01d1" +
    "\076\u01cf\100\u01d2\001\002\000\004\004\u01cd\001\002\000" +
    "\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufec8" +
    "\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000\004\020" +
    "\ufec9\001\002\000\004\102\u020d\001\002\000\004\073\u0215" +
    "\001\002\000\004\102\u01dd\001\002\000\004\102\u01d4\001" +
    "\002\000\004\101\u0209\001\002\000\006\104\u01d5\106\u01d7" +
    "\001\002\000\022\011\u01f0\015\u01ec\017\u01ee\021\u01ea\023" +
    "\u01ef\032\u01eb\034\u01e8\120\u01e9\001\002\000\004\103\u01e7" +
    "\001\002\000\006\074\u01d9\100\u01da\001\002\000\004\107" +
    "\u01e5\001\002\000\004\102\u01dd\001\002\000\004\102\u01d4" +
    "\001\002\000\004\101\u01dc\001\002\000\004\107\ufea8\001" +
    "\002\000\006\104\u01d5\106\u01d7\001\002\000\004\075\u01df" +
    "\001\002\000\004\100\u01e0\001\002\000\004\102\u01d4\001" +
    "\002\000\004\101\u01e2\001\002\000\004\107\ufea9\001\002" +
    "\000\004\103\u01e4\001\002\000\004\075\ufec0\001\002\000" +
    "\010\103\ufeba\104\u01d5\106\u01d7\001\002\000\004\103\ufebb" +
    "\001\002\000\004\101\ufebe\001\002\000\010\015\u0144\017" +
    "\u0145\121\u0146\001\002\000\024\011\u01f0\015\u01ec\017\u01ee" +
    "\021\u01ea\023\u01ef\032\u01eb\034\u01e8\105\ufeb9\120\u01e9\001" +
    "\002\000\026\005\u019b\011\u01a5\013\u01a0\015\u019f\017\u01a1" +
    "\021\u019d\023\u01a4\032\u019e\034\u019c\121\u01a3\001\002\000" +
    "\016\032\131\040\133\054\135\066\127\070\134\120\132" +
    "\001\002\000\016\032\u0180\040\u0182\054\u0185\066\u017f\070" +
    "\u0183\120\u0181\001\002\000\004\105\u01fa\001\002\000\030" +
    "\005\u014f\011\u0158\013\u0155\021\u0151\023\u0157\032\u0152\040" +
    "\u0159\054\u0154\066\u0156\070\u0153\120\u0150\001\002\000\004" +
    "\116\u0163\001\002\000\010\025\025\110\027\112\030\001" +
    "\002\000\004\010\u01f2\001\002\000\024\011\u01f0\015\u01ec" +
    "\017\u01ee\021\u01ea\023\u01ef\032\u01eb\034\u01e8\105\ufeae\120" +
    "\u01e9\001\002\000\004\105\ufeaf\001\002\000\004\022\u01f5" +
    "\001\002\000\024\011\u01f0\015\u01ec\017\u01ee\021\u01ea\023" +
    "\u01ef\032\u01eb\034\u01e8\105\ufeb6\120\u01e9\001\002\000\004" +
    "\105\ufeb7\001\002\000\004\016\u01f8\001\002\000\024\011" +
    "\u01f0\015\u01ec\017\u01ee\021\u01ea\023\u01ef\032\u01eb\034\u01e8" +
    "\105\ufeb2\120\u01e9\001\002\000\004\105\ufeb3\001\002\000" +
    "\010\103\ufebc\104\u01d5\106\u01d7\001\002\000\004\103\ufebd" +
    "\001\002\000\004\014\u01fd\001\002\000\024\011\u01f0\015" +
    "\u01ec\017\u01ee\021\u01ea\023\u01ef\032\u01eb\034\u01e8\105\ufeb0" +
    "\120\u01e9\001\002\000\004\105\ufeb1\001\002\000\004\033" +
    "\u0200\001\002\000\024\011\u01f0\015\u01ec\017\u01ee\021\u01ea" +
    "\023\u01ef\032\u01eb\034\u01e8\105\ufeac\120\u01e9\001\002\000" +
    "\004\105\ufead\001\002\000\004\020\u0203\001\002\000\024" +
    "\011\u01f0\015\u01ec\017\u01ee\021\u01ea\023\u01ef\032\u01eb\034" +
    "\u01e8\105\ufeb4\120\u01e9\001\002\000\004\105\ufeb5\001\002" +
    "\000\004\105\ufeb8\001\002\000\004\035\u0207\001\002\000" +
    "\024\011\u01f0\015\u01ec\017\u01ee\021\u01ea\023\u01ef\032\u01eb" +
    "\034\u01e8\105\ufeaa\120\u01e9\001\002\000\004\105\ufeab\001" +
    "\002\000\004\073\ufec1\001\002\000\004\075\u020b\001\002" +
    "\000\004\076\u020c\001\002\000\004\102\u020d\001\002\000" +
    "\006\104\u01d5\106\u01d7\001\002\000\004\077\u020f\001\002" +
    "\000\004\100\u0210\001\002\000\004\102\u01d4\001\002\000" +
    "\004\101\u0212\001\002\000\004\073\ufec3\001\002\000\004" +
    "\103\u0214\001\002\000\004\077\ufebf\001\002\000\010\004" +
    "\ufec6\011\u01ca\072\u01cb\001\002\000\004\004\ufec7\001\002" +
    "\000\004\077\u0218\001\002\000\004\100\u0219\001\002\000" +
    "\004\102\u01d4\001\002\000\004\101\u021b\001\002\000\004" +
    "\073\ufec2\001\002\000\004\010\u021d\001\002\000\010\004" +
    "\ufec4\011\u01ca\072\u01cb\001\002\000\004\004\ufec5\001\002" +
    "\000\004\022\u0220\001\002\000\026\005\u01a8\011\u01b0\013" +
    "\u01ad\015\u01ac\017\u01ae\020\ufee8\021\u01aa\023\u01b1\032\u01ab" +
    "\034\u01a9\001\002\000\004\020\ufee9\001\002\000\004\122" +
    "\u0223\001\002\000\024\005\u01a8\011\u01b0\013\u01ad\015\u01ac" +
    "\017\u01ae\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000" +
    "\004\020\ufeec\001\002\000\026\005\u0167\011\u0170\013\u016c" +
    "\015\u016b\017\u016d\021\u0169\023\u016f\032\u016a\034\u0168\117" +
    "\ufefb\001\002\000\004\117\ufefc\001\002\000\004\016\u0228" +
    "\001\002\000\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017" +
    "\u01ae\020\ufee4\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002" +
    "\000\004\020\ufee5\001\002\000\004\012\u022b\001\002\000" +
    "\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufeea" +
    "\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000\004\020" +
    "\ufeeb\001\002\000\004\014\u022e\001\002\000\026\005\u01a8" +
    "\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufee2\021\u01aa\023" +
    "\u01b1\032\u01ab\034\u01a9\001\002\000\004\020\ufee3\001\002" +
    "\000\004\033\u0231\001\002\000\026\005\u01a8\011\u01b0\013" +
    "\u01ad\015\u01ac\017\u01ae\020\ufedc\021\u01aa\023\u01b1\032\u01ab" +
    "\034\u01a9\001\002\000\004\020\ufedd\001\002\000\004\020" +
    "\u0234\001\002\000\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac" +
    "\017\u01ae\020\ufee6\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001" +
    "\002\000\004\020\ufee7\001\002\000\004\035\u0237\001\002" +
    "\000\026\005\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020" +
    "\ufee0\021\u01aa\023\u01b1\032\u01ab\034\u01a9\001\002\000\004" +
    "\020\ufee1\001\002\000\004\004\u023a\001\002\000\026\005" +
    "\u01a8\011\u01b0\013\u01ad\015\u01ac\017\u01ae\020\ufeda\021\u01aa" +
    "\023\u01b1\032\u01ab\034\u01a9\001\002\000\004\020\ufedb\001" +
    "\002\000\004\035\u023d\001\002\000\026\005\u0167\011\u0170" +
    "\013\u016c\015\u016b\017\u016d\021\u0169\023\u016f\032\u016a\034" +
    "\u0168\117\ufeed\001\002\000\004\117\ufeee\001\002\000\004" +
    "\004\u0240\001\002\000\026\005\u0167\011\u0170\013\u016c\015" +
    "\u016b\017\u016d\021\u0169\023\u016f\032\u016a\034\u0168\117\ufef1" +
    "\001\002\000\004\117\ufef2\001\002\000\004\067\u0243\001" +
    "\002\000\032\005\u014f\011\u0158\013\u0155\016\uff37\021\u0151" +
    "\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120" +
    "\u0150\001\002\000\004\016\uff38\001\002\000\004\012\u0246" +
    "\001\002\000\032\005\u014f\011\u0158\013\u0155\016\uff29\021" +
    "\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153" +
    "\120\u0150\001\002\000\004\016\uff2a\001\002\000\004\055" +
    "\u0249\001\002\000\032\005\u014f\011\u0158\013\u0155\016\uff31" +
    "\021\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070" +
    "\u0153\120\u0150\001\002\000\004\016\uff32\001\002\000\004" +
    "\071\u024c\001\002\000\032\005\u014f\011\u0158\013\u0155\016" +
    "\uff39\021\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066\u0156" +
    "\070\u0153\120\u0150\001\002\000\004\016\uff3a\001\002\000" +
    "\004\033\u024f\001\002\000\032\005\u014f\011\u0158\013\u0155" +
    "\016\uff35\021\u0151\023\u0157\032\u0152\040\u0159\054\u0154\066" +
    "\u0156\070\u0153\120\u0150\001\002\000\004\016\uff36\001\002" +
    "\000\004\020\u0252\001\002\000\032\005\u014f\011\u0158\013" +
    "\u0155\016\uff2b\021\u0151\023\u0157\032\u0152\040\u0159\054\u0154" +
    "\066\u0156\070\u0153\120\u0150\001\002\000\004\016\uff2c\001" +
    "\002\000\004\016\uff30\001\002\000\004\004\u0256\001\002" +
    "\000\032\005\u014f\011\u0158\013\u0155\016\uff25\021\u0151\023" +
    "\u0157\032\u0152\040\u0159\054\u0154\066\u0156\070\u0153\120\u0150" +
    "\001\002\000\004\016\uff26\001\002\000\004\014\u0259\001" +
    "\002\000\010\015\u014c\017\u014d\035\uff61\001\002\000\004" +
    "\035\uff62\001\002\000\004\016\u025c\001\002\000\010\015" +
    "\u014c\017\u014d\035\uff67\001\002\000\004\035\uff68\001\002" +
    "\000\004\014\u025f\001\002\000\010\015\u014c\017\u014d\035" +
    "\uff65\001\002\000\004\035\uff66\001\002\000\004\010\u0262" +
    "\001\002\000\022\007\053\011\050\013\056\024\uffd5\034" +
    "\051\040\055\042\054\121\052\001\002\000\004\024\uffd6" +
    "\001\002\000\004\024\u0265\001\002\000\004\115\u0266\001" +
    "\002\000\004\113\uff4a\001\002\000\004\111\u0268\001\002" +
    "\000\010\010\uff51\110\036\112\037\001\002\000\004\010" +
    "\uff52\001\002\000\036\005\007\011\024\013\017\015\016" +
    "\017\020\021\012\023\023\026\uffe3\027\uffe3\031\uffe3\032" +
    "\014\034\010\036\uffe3\037\uffe3\001\002\000\014\026\uffe4" +
    "\027\uffe4\031\uffe4\036\uffe4\037\uffe4\001\002\000\004\024" +
    "\u026d\001\002\000\006\110\036\112\037\001\002\000\004" +
    "\010\uff53\001\002\000\004\022\u0270\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\012\023\023" +
    "\026\uffed\027\uffed\031\uffed\032\014\034\010\036\uffed\037" +
    "\uffed\001\002\000\014\026\uffee\027\uffee\031\uffee\036\uffee" +
    "\037\uffee\001\002\000\004\024\u0273\001\002\000\026\005" +
    "\uffdc\011\uffdc\013\uffdc\015\uffdc\017\uffdc\021\uffdc\023\uffdc" +
    "\032\uffdc\034\uffdc\121\u0274\001\002\000\012\054\u0137\066" +
    "\u0133\070\u0136\120\u0135\001\002\000\004\122\u0276\001\002" +
    "\000\024\005\uffdb\011\uffdb\013\uffdb\015\uffdb\017\uffdb\021" +
    "\uffdb\023\uffdb\032\uffdb\034\uffdb\001\002\000\004\122\u0278" +
    "\001\002\000\024\005\uffda\011\uffda\013\uffda\015\uffda\017" +
    "\uffda\021\uffda\023\uffda\032\uffda\034\uffda\001\002\000\004" +
    "\016\u027a\001\002\000\036\005\007\011\024\013\017\015" +
    "\016\017\020\021\012\023\023\026\uffe9\027\uffe9\031\uffe9" +
    "\032\014\034\010\036\uffe9\037\uffe9\001\002\000\014\026" +
    "\uffea\027\uffea\031\uffea\036\uffea\037\uffea\001\002\000\004" +
    "\012\u027d\001\002\000\036\005\007\011\024\013\017\015" +
    "\016\017\020\021\012\023\023\026\uffe5\027\uffe5\031\uffe5" +
    "\032\014\034\010\036\uffe5\037\uffe5\001\002\000\014\026" +
    "\uffe6\027\uffe6\031\uffe6\036\uffe6\037\uffe6\001\002\000\004" +
    "\014\u0280\001\002\000\036\005\007\011\024\013\017\015" +
    "\016\017\020\021\012\023\023\026\uffe7\027\uffe7\031\uffe7" +
    "\032\014\034\010\036\uffe7\037\uffe7\001\002\000\014\026" +
    "\uffe8\027\uffe8\031\uffe8\036\uffe8\037\uffe8\001\002\000\006" +
    "\031\ufffb\036\u0284\001\002\000\030\005\007\011\024\013" +
    "\017\015\016\017\020\021\012\023\023\025\u0289\032\014" +
    "\034\010\121\u0288\001\002\000\030\005\007\011\024\013" +
    "\017\015\016\017\020\021\012\023\023\025\u0289\032\014" +
    "\034\010\121\u0288\001\002\000\004\031\ufffa\001\002\000" +
    "\004\037\u0293\001\002\000\024\005\007\011\024\013\017" +
    "\015\016\017\020\021\012\023\023\032\014\034\010\001" +
    "\002\000\012\054\u0137\066\u0133\070\u0136\120\u0135\001\002" +
    "\000\020\007\053\011\050\013\056\034\051\040\055\042" +
    "\054\121\052\001\002\000\004\024\u028b\001\002\000\026" +
    "\005\uffd9\011\uffd9\013\uffd9\015\uffd9\017\uffd9\021\uffd9\023" +
    "\uffd9\032\uffd9\034\uffd9\121\u028c\001\002\000\012\054\u0137" +
    "\066\u0133\070\u0136\120\u0135\001\002\000\004\122\u028e\001" +
    "\002\000\024\005\uffd8\011\uffd8\013\uffd8\015\uffd8\017\uffd8" +
    "\021\uffd8\023\uffd8\032\uffd8\034\uffd8\001\002\000\004\122" +
    "\u0290\001\002\000\024\005\uffd7\011\uffd7\013\uffd7\015\uffd7" +
    "\017\uffd7\021\uffd7\023\uffd7\032\uffd7\034\uffd7\001\002\000" +
    "\004\037\u0292\001\002\000\006\026\ufff7\031\ufff7\001\002" +
    "\000\006\026\ufff6\031\ufff6\001\002\000\004\026\u029e\001" +
    "\002\000\010\026\uffef\027\u0283\036\u0284\001\002\000\024" +
    "\005\007\011\024\013\017\015\016\017\020\021\012\023" +
    "\023\032\014\034\010\001\002\000\006\027\u0283\036\u0284" +
    "\001\002\000\006\026\ufff3\036\u0284\001\002\000\004\026" +
    "\ufff4\001\002\000\004\026\ufff5\001\002\000\006\026\ufff1" +
    "\036\u0284\001\002\000\004\026\ufff0\001\002\000\004\026" +
    "\ufff2\001\002\000\010\026\ufff8\031\ufff8\036\ufff8\001\002" +
    "\000\004\031\ufffc\001\002\000\004\033\u02a1\001\002\000" +
    "\036\005\007\011\024\013\017\015\016\017\020\021\012" +
    "\023\023\026\uffdf\027\uffdf\031\uffdf\032\014\034\010\036" +
    "\uffdf\037\uffdf\001\002\000\014\026\uffe0\027\uffe0\031\uffe0" +
    "\036\uffe0\037\uffe0\001\002\000\004\002\000\001\002\000" +
    "\004\020\u02a5\001\002\000\036\005\007\011\024\013\017" +
    "\015\016\017\020\021\012\023\023\026\uffeb\027\uffeb\031" +
    "\uffeb\032\014\034\010\036\uffeb\037\uffeb\001\002\000\014" +
    "\026\uffec\027\uffec\031\uffec\036\uffec\037\uffec\001\002\000" +
    "\006\027\u0283\036\u0284\001\002\000\006\031\ufffd\036\u0284" +
    "\001\002\000\004\031\ufffe\001\002\000\004\031\uffff\001" +
    "\002\000\004\035\u02ac\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffdd\027" +
    "\uffdd\031\uffdd\032\014\034\010\036\uffdd\037\uffdd\001\002" +
    "\000\014\026\uffde\027\uffde\031\uffde\036\uffde\037\uffde\001" +
    "\002\000\004\004\u02af\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffe1\027" +
    "\uffe1\031\uffe1\032\014\034\010\036\uffe1\037\uffe1\001\002" +
    "\000\014\026\uffe2\027\uffe2\031\uffe2\036\uffe2\037\uffe2\001" +
    "\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02af\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\003\012\004\010\005\014\001\001" +
    "\000\004\047\u02ad\001\001\000\004\020\u02aa\001\001\000" +
    "\004\005\u02a6\001\001\000\004\045\u02a3\001\001\000\002" +
    "\001\001\000\004\050\u029f\001\001\000\006\007\u0281\010" +
    "\u0284\001\001\000\004\035\u027e\001\001\000\004\023\u027b" +
    "\001\001\000\004\034\u0278\001\001\000\004\013\u0276\001" +
    "\001\000\004\012\u0271\001\001\000\004\044\u026e\001\001" +
    "\000\004\016\025\001\001\000\004\012\u026b\001\001\000" +
    "\002\001\001\000\004\032\u0266\001\001\000\004\033\031" +
    "\001\001\000\004\012\u0263\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\034\001\001\000\002\001\001" +
    "\000\004\032\043\001\001\000\004\033\037\001\001\000" +
    "\002\001\001\000\004\017\041\001\001\000\002\001\001" +
    "\000\004\012\056\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\046\001\001\000\002\001\001\000\004" +
    "\016\u0260\001\001\000\004\020\u0146\001\001\000\004\013" +
    "\u0133\001\001\000\004\014\u0124\001\001\000\004\015\371" +
    "\001\001\000\004\022\366\001\001\000\004\023\065\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\350\001\001\000\004\037\325\001\001\000" +
    "\004\040\306\001\001\000\004\023\302\001\001\000\002" +
    "\001\001\000\004\041\260\001\001\000\004\026\071\001" +
    "\001\000\004\024\254\001\001\000\002\001\001\000\004" +
    "\050\247\001\001\000\004\026\246\001\001\000\004\025" +
    "\075\001\001\000\002\001\001\000\004\024\241\001\001" +
    "\000\004\050\236\001\001\000\004\025\235\001\001\000" +
    "\004\022\112\001\001\000\004\025\107\001\001\000\004" +
    "\026\104\001\001\000\002\001\001\000\004\025\106\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\025\111" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\213\001\001\000\004\042\116\001\001\000\004\024\207" +
    "\001\001\000\002\001\001\000\004\050\127\001\001\000" +
    "\004\042\125\001\001\000\004\025\122\001\001\000\002" +
    "\001\001\000\004\042\124\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\024\155\001\001\000\002\001\001" +
    "\000\004\050\147\001\001\000\004\050\146\001\001\000" +
    "\004\022\143\001\001\000\004\025\140\001\001\000\004" +
    "\026\135\001\001\000\002\001\001\000\004\050\137\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\050\142" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\050" +
    "\145\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\050\151\001\001\000\002\001\001\000" +
    "\004\042\153\001\001\000\002\001\001\000\004\024\202" +
    "\001\001\000\002\001\001\000\004\050\175\001\001\000" +
    "\004\024\174\001\001\000\004\022\171\001\001\000\004" +
    "\025\166\001\001\000\004\026\163\001\001\000\002\001" +
    "\001\000\004\024\165\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\024\170\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\024\173\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\024\177\001" +
    "\001\000\002\001\001\000\004\050\201\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\204\001\001\000" +
    "\002\001\001\000\004\022\206\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\042\211\001\001\000\002\001" +
    "\001\000\004\024\230\001\001\000\002\001\001\000\004" +
    "\050\223\001\001\000\004\043\222\001\001\000\004\025" +
    "\217\001\001\000\002\001\001\000\004\043\221\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\043\225\001\001\000\002\001\001\000\004\022\227" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\043" +
    "\232\001\001\000\002\001\001\000\004\025\234\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\025\240\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\025\243\001\001\000\002\001\001\000\004\026" +
    "\245\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\251\001\001\000\002\001\001\000" +
    "\004\023\253\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\256\001\001\000\002\001\001\000\004\024" +
    "\275\001\001\000\002\001\001\000\004\050\270\001\001" +
    "\000\004\041\267\001\001\000\004\025\264\001\001\000" +
    "\002\001\001\000\004\041\266\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\041\272\001" +
    "\001\000\002\001\001\000\004\023\274\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\041\277\001\001\000" +
    "\002\001\001\000\004\012\301\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\321\001\001\000\004\050" +
    "\316\001\001\000\004\040\315\001\001\000\002\001\001" +
    "\000\004\025\310\001\001\000\002\001\001\000\004\040" +
    "\312\001\001\000\002\001\001\000\004\023\314\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\040\320\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\040\323\001\001\000\002\001\001\000\004\024" +
    "\342\001\001\000\002\001\001\000\004\050\335\001\001" +
    "\000\004\037\334\001\001\000\004\025\331\001\001\000" +
    "\002\001\001\000\004\037\333\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\037\337\001" +
    "\001\000\002\001\001\000\004\023\341\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\037\344\001\001\000" +
    "\002\001\001\000\004\024\363\001\001\000\004\050\360" +
    "\001\001\000\004\036\357\001\001\000\002\001\001\000" +
    "\004\025\352\001\001\000\002\001\001\000\004\036\354" +
    "\001\001\000\002\001\001\000\004\023\356\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\036\362\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\036\365\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\012\370\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\027\377\001\001\000\004\024\u011c\001\001" +
    "\000\004\050\u0119\001\001\000\004\027\u0118\001\001\000" +
    "\004\025\u0115\001\001\000\002\001\001\000\006\015\u0101" +
    "\031\u0102\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\030\u0105\001\001\000\004\024\u0112\001\001\000\002" +
    "\001\001\000\004\050\u010d\001\001\000\004\030\u010c\001" +
    "\001\000\004\025\u0109\001\001\000\002\001\001\000\004" +
    "\030\u010b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\030\u010f\001\001\000\002\001\001" +
    "\000\004\031\u0111\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\030\u0114\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u0117\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\027\u011b\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\u011e\001" +
    "\001\000\002\001\001\000\004\012\u0120\001\001\000\002" +
    "\001\001\000\004\024\u012f\001\001\000\004\050\u012c\001" +
    "\001\000\004\014\u012b\001\001\000\002\001\001\000\004" +
    "\025\u0126\001\001\000\002\001\001\000\004\014\u0128\001" +
    "\001\000\002\001\001\000\004\012\u012a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\u012e\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\u0131\001\001\000\002\001\001\000\004\024\u0140\001" +
    "\001\000\002\001\001\000\004\013\u013d\001\001\000\004" +
    "\025\u013a\001\001\000\004\026\u0137\001\001\000\002\001" +
    "\001\000\004\013\u0139\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\013\u013c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\u013f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\u0142\001\001\000\002\001" +
    "\001\000\004\035\u025d\001\001\000\004\034\u025a\001\001" +
    "\000\004\013\u0149\001\001\000\002\001\001\000\004\012" +
    "\u0148\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\u014d\001\001\000\004\035\u0257\001\001\000\004\034" +
    "\u0159\001\001\000\002\001\001\000\004\047\u0254\001\001" +
    "\000\004\034\u0253\001\001\000\004\045\u0250\001\001\000" +
    "\004\050\u024d\001\001\000\004\025\u024a\001\001\000\004" +
    "\026\u0247\001\001\000\004\023\u0244\001\001\000\004\024" +
    "\u0241\001\001\000\004\044\u0163\001\001\000\004\016\u015f" +
    "\001\001\000\004\022\u015c\001\001\000\002\001\001\000" +
    "\004\021\u015b\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u015e\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u0161\001\001\000\002\001\001\000\004" +
    "\051\u016d\001\001\000\002\001\001\000\004\034\u0165\001" +
    "\001\000\002\001\001\000\004\047\u023e\001\001\000\004" +
    "\020\u023b\001\001\000\004\045\u01a1\001\001\000\004\050" +
    "\u0197\001\001\000\004\035\u0183\001\001\000\004\023\u017b" +
    "\001\001\000\004\034\u0178\001\001\000\002\001\001\000" +
    "\004\044\u0173\001\001\000\004\016\u0170\001\001\000\002" +
    "\001\001\000\004\051\u0172\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\051\u0175\001\001\000\002\001\001" +
    "\000\004\044\u0177\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\051\u017a\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\051\u017d\001\001\000\002\001\001\000" +
    "\004\024\u0194\001\001\000\004\050\u0191\001\001\000\004" +
    "\035\u0190\001\001\000\004\022\u018d\001\001\000\004\025" +
    "\u018a\001\001\000\002\001\001\000\004\026\u0185\001\001" +
    "\000\002\001\001\000\004\035\u0187\001\001\000\002\001" +
    "\001\000\004\051\u0189\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\u018c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\035\u018f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\035\u0193\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\035\u0196" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\u0199\001\001\000\002\001\001\000\004\047\u0238\001\001" +
    "\000\004\020\u0235\001\001\000\004\045\u0232\001\001\000" +
    "\004\050\u022f\001\001\000\004\035\u022c\001\001\000\004" +
    "\023\u0229\001\001\000\004\034\u0226\001\001\000\002\001" +
    "\001\000\004\013\u0221\001\001\000\004\044\u021e\001\001" +
    "\000\004\016\u01a5\001\001\000\002\001\001\000\004\046" +
    "\u01ae\001\001\000\004\047\u01cb\001\001\000\004\020\u01c6" +
    "\001\001\000\004\045\u01c3\001\001\000\004\050\u01c0\001" +
    "\001\000\004\035\u01bd\001\001\000\004\023\u01ba\001\001" +
    "\000\004\034\u01b7\001\001\000\002\001\001\000\004\016" +
    "\u01b4\001\001\000\004\044\u01b1\001\001\000\002\001\001" +
    "\000\004\046\u01b3\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\046\u01b6\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\u01b9\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u01bc\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u01bf\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u01c2\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u01c5\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\u01c8\001\001" +
    "\000\002\001\001\000\004\016\u021b\001\001\000\004\052" +
    "\u01cf\001\001\000\002\001\001\000\004\046\u01cd\001\001" +
    "\000\002\001\001\000\004\054\u0216\001\001\000\002\001" +
    "\001\000\004\053\u0209\001\001\000\004\055\u01d2\001\001" +
    "\000\002\001\001\000\004\056\u01d5\001\001\000\004\057" +
    "\u01ec\001\001\000\002\001\001\000\004\060\u01d7\001\001" +
    "\000\002\001\001\000\004\053\u01dd\001\001\000\004\055" +
    "\u01da\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\056\u01e2\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\055\u01e0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\056\u01e5\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\u0205" +
    "\001\001\000\004\057\u0204\001\001\000\004\045\u0201\001" +
    "\001\000\004\050\u01fe\001\001\000\004\035\u01fb\001\001" +
    "\000\002\001\001\000\004\034\u01f6\001\001\000\004\044" +
    "\u01f3\001\001\000\004\016\u01f0\001\001\000\002\001\001" +
    "\000\004\057\u01f2\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\057\u01f5\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\057\u01f8\001\001\000\002\001\001\000" +
    "\004\056\u01fa\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\057\u01fd\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\057\u0200\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\057\u0203\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\057\u0207\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\054\u020d\001\001\000\004\056\u0212" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\055" +
    "\u0210\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\047\u0215\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\055\u0219\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\047\u021d\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u0220\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u0223\001\001\000\002" +
    "\001\001\000\004\051\u0225\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u0228\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u022b\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u022e\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u0231\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\u0234\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\046\u0237\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\046\u023a" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\u023d\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\051\u0240\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u0243\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u0246\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u0249\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\034\u024c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u024f\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\034\u0252\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\034\u0256" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\021" +
    "\u0259\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\u025c\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\021\u025f\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\012\u0262\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\u0268\001\001\000\002\001\001\000\004\005" +
    "\u026a\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\017\u026d\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\u0270\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\u0274\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\u027a\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\u027d\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\u0280\001\001\000" +
    "\002\001\001\000\004\010\u029e\001\001\000\010\005\u0294" +
    "\006\u0295\011\u0293\001\001\000\006\005\u0285\006\u0286\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\u0290" +
    "\001\001\000\004\013\u028e\001\001\000\004\012\u0289\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\u028c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\u029a\010" +
    "\u029b\001\001\000\004\005\u0296\001\001\000\006\007\u0297" +
    "\010\u0298\001\001\000\004\010\u0299\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\u029c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\u02a1\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\005" +
    "\u02a5\001\001\000\002\001\001\000\006\007\u02a7\010\u02a8" +
    "\001\001\000\004\010\u02a9\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\005\u02ac\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u02af\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getSymbol(){
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {

 

    BufferedWriter writer;  

    public void InitFileWritter() throws IOException{
        this.writer = new BufferedWriter(new FileWriter("index.html"));
        this.Write("<html><head></head><body>\n");
       
    }

    public void Write(String token) throws IOException{
        this.writer.write(token);
    }

    public void CloseFileWritter() throws IOException{
        this.writer.close();
    }


  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ENTRYTBL ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ENTRYTBL ::= AperturaThead THEAD CierreThead AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ENTRY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ENTRY ::= AperturaComment COMMENT CierreComment ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ENTRY ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ENTRY ::= AperturaPara PARRAFO CierrePara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // ENTRY ::= Texto ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // ENTRY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // ROW ::= AperturaEntry ENTRY CierreEntry 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // ROW ::= AperturaEntry ENTRY CierreEntry ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // TBODY ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TBODY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // TFOOT ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TFOOT",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // THEAD ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("THEAD",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // TGROUP ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // TGROUP ::= AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // TGROUP ::= AperturaThead THEAD CierreThead AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // NIMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // NIMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // IMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // IMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // IMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // IMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // IMPORTANT ::= AperturaTitulo TITULO CierreTitulo NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // LISTITEM ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // LISTITEM ::= AperturaComment COMMENT CierreComment LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // LISTITEM ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // LISTITEM ::= AperturaPara PARRAFO CierrePara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem ITEMIZEDLIST 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // LINK ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // LINK ::= Texto LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // LINK ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // LINK ::= AperturaEmail EMAIL CierreEmail LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LINK ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LINK ::= AperturaAuthor AUTHOR CierreAuthor LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LINK ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LINK ::= AperturaComment COMMENT CierreComment LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // LINK ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // LINK ::= AperturaLink LINK CierreLink LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // COMMENT ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // COMMENT ::= Texto COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // COMMENT ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // COMMENT ::= AperturaEmail EMAIL CierreEmail COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // COMMENT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // COMMENT ::= AperturaComment COMMENT CierreComment COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // COMMENT ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // COMMENT ::= AperturaLink LINK CierreLink COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // SIMPARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // SIMPARRAFO ::= Texto SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // SIMPARRAFO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // SIMPARRAFO ::= AperturaLink LINK CierreLink SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // PARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // PARRAFO ::= Texto PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // PARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // PARRAFO ::= AperturaEmail EMAIL CierreEmail PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // PARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // PARRAFO ::= AperturaComment COMMENT CierreComment PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // PARRAFO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // PARRAFO ::= AperturaLink LINK CierreLink PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // EMPHASIS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // EMPHASIS ::= Texto EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // EMPHASIS ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // EMPHASIS ::= AperturaComment COMMENT CierreComment EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // EMPHASIS ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // EMPHASIS ::= AperturaLink LINK CierreLink EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // VIDEOOBJECT ::= Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // VIDEOOBJECT ::= AperturaInfo INFORMACION CierreInfo Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // IMAGEOBJECT ::= Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // IMAGEOBJECT ::= AperturaInfo INFORMACION CierreInfo Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // MEDIAOBJECT ::= AperturaInfo INFORMACION CierreInfo NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // HOLDER ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // HOLDER ::= AperturaComment COMMENT CierreComment HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // HOLDER ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // HOLDER ::= AperturaLink LINK CierreLink HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // HOLDER ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // HOLDER ::= Texto HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // NHOLDER ::= AperturaHolder HOLDER CierreHolder 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // NHOLDER ::= AperturaHolder HOLDER CierreHolder NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // COPYRIGHT ::= AperturaYear YEAR CierreYear NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // COPYRIGHT ::= AperturaYear YEAR CierreYear COPYRIGHT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // COPYRIGHT ::= AperturaYear YEAR CierreYear 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // NABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // NABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // ABSTRACT ::= AperturaTitulo TITULO CierreTitulo NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // YEAR ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // YEAR ::= AperturaComment COMMENT CierreComment YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // YEAR ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // YEAR ::= AperturaLink LINK CierreLink YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // YEAR ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // YEAR ::= Texto YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // SURNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // SURNAME ::= AperturaComment COMMENT CierreComment SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // SURNAME ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // SURNAME ::= AperturaLink LINK CierreLink SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // SURNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // SURNAME ::= Texto SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // FIRSTNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // FIRSTNAME ::= AperturaComment COMMENT CierreComment FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // FIRSTNAME ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // FIRSTNAME ::= AperturaLink LINK CierreLink FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // FIRSTNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // FIRSTNAME ::= Texto FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // EMAIL ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // EMAIL ::= AperturaComment COMMENT CierreComment EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // EMAIL ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // EMAIL ::= AperturaLink LINK CierreLink EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // EMAIL ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // EMAIL ::= Texto EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PHONE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PHONE ::= AperturaComment COMMENT CierreComment PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // PHONE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // PHONE ::= AperturaLink LINK CierreLink PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PHONE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PHONE ::= Texto PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // STATE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // STATE ::= AperturaComment COMMENT CierreComment STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // STATE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // STATE ::= AperturaLink LINK CierreLink STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // STATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // STATE ::= Texto STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // CITY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // CITY ::= AperturaComment COMMENT CierreComment CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // CITY ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // CITY ::= AperturaLink LINK CierreLink CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // CITY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // CITY ::= Texto CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // STREET ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // STREET ::= AperturaComment COMMENT CierreComment STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // STREET ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // STREET ::= AperturaLink LINK CierreLink STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // STREET ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // STREET ::= Texto STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ADDRESS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ADDRESS ::= AperturaEmail EMAIL CierreEmail ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ADDRESS ::= AperturaPhone PHONE CierrePhone 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ADDRESS ::= AperturaPhone PHONE CierrePhone ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ADDRESS ::= AperturaState STATE CierreState 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ADDRESS ::= AperturaState STATE CierreState ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ADDRESS ::= AperturaCity CITY CierreCity 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ADDRESS ::= AperturaCity CITY CierreCity ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ADDRESS ::= AperturaStreet STREET CierreStreet 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ADDRESS ::= AperturaStreet STREET CierreStreet ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ADDRESS ::= Texto ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ADDRESS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // AUTHOR ::= AperturaSurname SURNAME CierreSurname 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // AUTHOR ::= AperturaSurname SURNAME CierreSurname AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DATE ::= AperturaComment COMMENT CierreComment DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // DATE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // DATE ::= AperturaLink LINK CierreLink DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // DATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // DATE ::= Texto DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TITULO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TITULO ::= AperturaEmail EMAIL CierreEmail TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TITULO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // TITULO ::= AperturaLink LINK CierreLink TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // TITULO ::= Texto TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // TITULO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INFORMACION ::= AperturaDate DATE CierreDate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INFORMACION ::= AperturaDate DATE CierreDate INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ENCABEZADOSECTION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ENCABEZADOSECTION ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ENCABEZADOSECTION ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ENCABEZADO ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CONTENIDO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONTENIDO ::= AperturaComment COMMENT CierreComment CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTENIDO ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONTENIDO ::= AperturaPara PARRAFO CierrePara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NSECTION ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NSECTION ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NSECTION ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NSECTION ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SECTSIMPLE ::= AperturaSimpleSect CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SECTSIMPLE ::= AperturaSimpleSect ENCABEZADOSECTION CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // SECCION ::= AperturaSection NSECTION CierreSection 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ARTICULO ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ARTICULO ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ARTICULO ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ARTICULO ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARTICULO ::= ENCABEZADO CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= EncabezadoXML AperturaArticulo ARTICULO CierreArticulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

