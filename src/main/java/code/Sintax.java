
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Thu Jul 06 17:28:18 ART 2023
//----------------------------------------------------

package code;

import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Thu Jul 06 17:28:18 ART 2023
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0162\000\002\002\004\000\002\002\006\000\002\003" +
    "\006\000\002\003\005\000\002\003\005\000\002\003\005" +
    "\000\002\003\004\000\002\003\004\000\002\003\004\000" +
    "\002\003\003\000\002\007\006\000\002\007\005\000\002" +
    "\010\007\000\002\010\006\000\002\010\006\000\002\010" +
    "\005\000\002\011\006\000\002\011\005\000\002\011\005" +
    "\000\002\011\005\000\002\011\004\000\002\011\004\000" +
    "\002\011\004\000\002\011\003\000\002\005\006\000\002" +
    "\005\005\000\002\005\006\000\002\005\005\000\002\005" +
    "\006\000\002\005\005\000\002\005\006\000\002\005\005" +
    "\000\002\005\006\000\002\005\005\000\002\005\006\000" +
    "\002\005\005\000\002\005\006\000\002\005\005\000\002" +
    "\005\006\000\002\005\005\000\002\005\006\000\002\005" +
    "\005\000\002\004\005\000\002\004\010\000\002\004\005" +
    "\000\002\006\005\000\002\006\010\000\002\006\005\000" +
    "\002\012\006\000\002\012\005\000\002\012\006\000\002" +
    "\012\005\000\002\012\006\000\002\012\005\000\002\012" +
    "\006\000\002\012\005\000\002\012\006\000\002\012\005" +
    "\000\002\012\006\000\002\012\005\000\002\012\006\000" +
    "\002\012\005\000\002\013\003\000\002\013\004\000\002" +
    "\013\006\000\002\013\005\000\002\013\007\000\002\013" +
    "\006\000\002\013\006\000\002\013\005\000\002\014\004" +
    "\000\002\014\003\000\002\014\007\000\002\014\006\000" +
    "\002\014\006\000\002\014\005\000\002\014\006\000\002" +
    "\022\006\000\002\022\005\000\002\022\006\000\002\022" +
    "\005\000\002\023\003\000\002\023\004\000\002\023\006" +
    "\000\002\023\005\000\002\023\006\000\002\023\005\000" +
    "\002\023\006\000\002\023\005\000\002\023\006\000\002" +
    "\023\005\000\002\023\006\000\002\023\005\000\002\036" +
    "\004\000\002\036\003\000\002\036\007\000\002\036\006" +
    "\000\002\036\006\000\002\036\005\000\002\036\006\000" +
    "\002\036\005\000\002\037\004\000\002\037\003\000\002" +
    "\037\007\000\002\037\006\000\002\037\006\000\002\037" +
    "\005\000\002\037\006\000\002\037\005\000\002\040\004" +
    "\000\002\040\003\000\002\040\007\000\002\040\006\000" +
    "\002\040\006\000\002\040\005\000\002\040\006\000\002" +
    "\040\005\000\002\041\004\000\002\041\003\000\002\041" +
    "\007\000\002\041\006\000\002\041\006\000\002\041\005" +
    "\000\002\041\006\000\002\041\005\000\002\026\004\000" +
    "\002\026\003\000\002\026\007\000\002\026\006\000\002" +
    "\026\006\000\002\026\005\000\002\026\006\000\002\026" +
    "\005\000\002\042\004\000\002\042\003\000\002\042\007" +
    "\000\002\042\006\000\002\042\006\000\002\042\005\000" +
    "\002\042\006\000\002\042\005\000\002\043\004\000\002" +
    "\043\003\000\002\043\007\000\002\043\006\000\002\043" +
    "\006\000\002\043\005\000\002\043\006\000\002\043\005" +
    "\000\002\027\004\000\002\027\003\000\002\027\007\000" +
    "\002\027\006\000\002\027\006\000\002\027\005\000\002" +
    "\027\006\000\002\027\005\000\002\020\006\000\002\020" +
    "\006\000\002\020\005\000\002\020\006\000\002\020\005" +
    "\000\002\021\006\000\002\021\005\000\002\021\006\000" +
    "\002\021\005\000\002\015\005\000\002\015\006\000\002" +
    "\015\006\000\002\031\006\000\002\031\005\000\002\030" +
    "\004\000\002\030\003\000\002\030\007\000\002\030\006" +
    "\000\002\030\006\000\002\030\005\000\002\030\006\000" +
    "\002\030\005\000\002\016\006\000\002\016\006\000\002" +
    "\016\005\000\002\016\006\000\002\016\005\000\002\017" +
    "\006\000\002\017\005\000\002\017\006\000\002\017\005" +
    "\000\002\033\006\000\002\033\003\000\002\032\006\000" +
    "\002\032\003\000\002\024\007\000\002\024\006\000\002" +
    "\024\006\000\002\024\005\000\002\024\006\000\002\024" +
    "\005\000\002\024\006\000\002\024\005\000\002\024\006" +
    "\000\002\024\005\000\002\024\004\000\002\024\003\000" +
    "\002\034\007\000\002\034\006\000\002\034\006\000\002" +
    "\034\005\000\002\034\006\000\002\034\005\000\002\034" +
    "\006\000\002\034\005\000\002\034\006\000\002\034\005" +
    "\000\002\034\004\000\002\034\003\000\002\034\006\000" +
    "\002\034\005\000\002\034\006\000\002\034\005\000\002" +
    "\034\006\000\002\034\005\000\002\034\006\000\002\034" +
    "\005\000\002\034\006\000\002\034\005\000\002\035\007" +
    "\000\002\035\006\000\002\035\006\000\002\035\005\000" +
    "\002\035\006\000\002\035\005\000\002\035\006\000\002" +
    "\035\005\000\002\035\006\000\002\035\005\000\002\035" +
    "\004\000\002\035\003\000\002\050\007\000\002\050\006" +
    "\000\002\050\006\000\002\050\005\000\002\050\006\000" +
    "\002\050\005\000\002\050\006\000\002\050\005\000\002" +
    "\050\006\000\002\050\005\000\002\050\004\000\002\050" +
    "\003\000\002\025\007\000\002\025\006\000\002\025\006" +
    "\000\002\025\005\000\002\025\006\000\002\025\005\000" +
    "\002\025\006\000\002\025\005\000\002\025\006\000\002" +
    "\025\005\000\002\025\004\000\002\025\003\000\002\044" +
    "\006\000\002\044\005\000\002\051\006\000\002\051\005" +
    "\000\002\051\006\000\002\051\005\000\002\051\006\000" +
    "\002\051\005\000\002\051\006\000\002\051\005\000\002" +
    "\051\006\000\002\051\005\000\002\051\006\000\002\051" +
    "\005\000\002\051\006\000\002\051\005\000\002\051\006" +
    "\000\002\051\005\000\002\051\006\000\002\051\005\000" +
    "\002\045\006\000\002\045\006\000\002\045\005\000\002" +
    "\045\006\000\002\045\005\000\002\045\006\000\002\045" +
    "\005\000\002\045\006\000\002\045\005\000\002\045\006" +
    "\000\002\045\005\000\002\045\006\000\002\045\005\000" +
    "\002\045\006\000\002\045\005\000\002\045\006\000\002" +
    "\045\005\000\002\045\006\000\002\045\005\000\002\046" +
    "\006\000\002\046\005\000\002\046\006\000\002\046\005" +
    "\000\002\046\006\000\002\046\005\000\002\046\006\000" +
    "\002\046\005\000\002\046\006\000\002\046\005\000\002" +
    "\046\006\000\002\046\005\000\002\046\006\000\002\046" +
    "\005\000\002\046\006\000\002\046\005\000\002\046\006" +
    "\000\002\046\005\000\002\047\006\000\002\047\005\000" +
    "\002\047\006\000\002\047\005\000\002\052\013\000\002" +
    "\052\010\000\002\052\005\000\002\053\005\000\002\053" +
    "\006\000\002\054\005\000\002\054\006\000\002\055\005" +
    "\000\002\055\006\000\002\056\006\000\002\056\005\000" +
    "\002\056\006\000\002\056\005\000\002\057\003\000\002" +
    "\057\004\000\002\057\006\000\002\057\005\000\002\057" +
    "\006\000\002\057\005\000\002\057\006\000\002\057\005" +
    "\000\002\057\006\000\002\057\005\000\002\057\006\000" +
    "\002\057\005\000\002\057\006\000\002\057\005\000\002" +
    "\057\006\000\002\057\005\000\002\060\010\000\002\060" +
    "\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02c5\000\004\124\005\001\002\000\004\002\u02c7\001" +
    "\002\000\004\030\006\001\002\000\030\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\025\022\032" +
    "\014\034\010\121\021\001\002\000\006\011\u01d9\072\u01da" +
    "\001\002\000\010\015\u0152\017\u0153\121\u0154\001\002\000" +
    "\024\005\007\011\024\013\017\015\016\017\020\021\012" +
    "\023\023\032\014\034\010\001\002\000\026\005\u01aa\011" +
    "\u01b4\013\u01af\015\u01ae\017\u01b0\021\u01ac\023\u01b3\032\u01ad" +
    "\034\u01ab\121\u01b2\001\002\000\004\031\u02b9\001\002\000" +
    "\016\032\115\040\120\054\122\066\114\070\121\120\117" +
    "\001\002\000\010\027\u0296\031\ufff8\036\u0297\001\002\000" +
    "\016\032\u018e\040\u0190\054\u0192\066\u018d\070\u0191\120\u018f" +
    "\001\002\000\016\044\257\046\260\050\261\052\264\054" +
    "\265\120\262\001\002\000\030\005\u015d\011\u0166\013\u0163" +
    "\021\u015f\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070" +
    "\u0161\120\u015e\001\002\000\012\054\u0144\066\u0140\070\u0143" +
    "\120\u0142\001\002\000\020\007\054\011\050\013\055\034" +
    "\051\040\056\042\053\121\052\001\002\000\004\116\u0171" +
    "\001\002\000\010\025\025\110\030\112\027\001\002\000" +
    "\020\007\054\011\050\013\055\034\051\040\056\042\053" +
    "\121\052\001\002\000\004\010\u027d\001\002\000\006\025" +
    "\043\115\045\001\002\000\006\025\031\114\033\001\002" +
    "\000\020\007\054\011\050\013\055\034\051\040\056\042" +
    "\053\121\052\001\002\000\004\111\034\001\002\000\004" +
    "\111\uff42\001\002\000\010\010\uff4c\110\037\112\036\001" +
    "\002\000\004\010\uff4d\001\002\000\006\025\043\115\045" +
    "\001\002\000\006\025\031\114\033\001\002\000\004\111" +
    "\041\001\002\000\010\010\uff48\110\037\112\036\001\002" +
    "\000\004\010\uff49\001\002\000\020\007\054\011\050\013" +
    "\055\034\051\040\056\042\053\121\052\001\002\000\004" +
    "\113\046\001\002\000\004\113\uff44\001\002\000\010\010" +
    "\uff46\110\037\112\036\001\002\000\004\010\uff47\001\002" +
    "\000\010\025\025\110\030\112\027\001\002\000\010\015" +
    "\u0152\017\u0153\121\u0154\001\002\000\012\054\u0144\066\u0140" +
    "\070\u0143\120\u0142\001\002\000\004\062\u0117\001\002\000" +
    "\012\032\u0105\066\u0104\070\u0108\120\u0106\001\002\000\016" +
    "\044\257\046\260\050\261\052\264\054\265\120\262\001" +
    "\002\000\006\056\064\060\063\001\002\000\004\024\060" +
    "\001\002\000\004\115\061\001\002\000\004\113\uff45\001" +
    "\002\000\004\041\255\001\002\000\012\032\235\066\233" +
    "\070\237\120\236\001\002\000\012\032\067\066\065\070" +
    "\071\120\070\001\002\000\016\032\145\040\147\054\151" +
    "\066\143\070\150\120\146\001\002\000\004\057\226\001" +
    "\002\000\016\032\115\040\120\054\122\066\114\070\121" +
    "\120\117\001\002\000\014\032\067\057\uff7b\066\065\070" +
    "\071\120\070\001\002\000\004\123\072\001\002\000\016" +
    "\032\075\040\077\054\101\066\074\070\100\120\076\001" +
    "\002\000\004\071\220\001\002\000\016\032\145\040\147" +
    "\054\151\066\143\070\150\120\146\001\002\000\016\032" +
    "\115\040\120\054\122\066\114\070\121\120\117\001\002" +
    "\000\020\032\075\040\077\054\101\066\074\070\100\071" +
    "\ufefc\120\076\001\002\000\006\056\064\060\063\001\002" +
    "\000\004\123\202\001\002\000\012\032\104\066\102\070" +
    "\106\120\105\001\002\000\016\032\145\040\147\054\151" +
    "\066\143\070\150\120\146\001\002\000\004\055\175\001" +
    "\002\000\016\032\115\040\120\054\122\066\114\070\121" +
    "\120\117\001\002\000\014\032\104\055\uff83\066\102\070" +
    "\106\120\105\001\002\000\004\123\107\001\002\000\016" +
    "\032\075\040\077\054\101\066\074\070\100\120\076\001" +
    "\002\000\004\071\111\001\002\000\014\032\104\055\uff81" +
    "\066\102\070\106\120\105\001\002\000\004\055\uff82\001" +
    "\002\000\004\055\uff84\001\002\000\016\032\145\040\147" +
    "\054\151\066\143\070\150\120\146\001\002\000\016\032" +
    "\115\040\120\054\122\066\114\070\121\120\117\001\002" +
    "\000\004\033\136\001\002\000\020\032\115\033\uff08\040" +
    "\120\054\122\066\114\070\121\120\117\001\002\000\006" +
    "\056\064\060\063\001\002\000\004\123\126\001\002\000" +
    "\012\032\104\066\102\070\106\120\105\001\002\000\004" +
    "\055\124\001\002\000\020\032\115\033\uff0a\040\120\054" +
    "\122\066\114\070\121\120\117\001\002\000\004\033\uff0b" +
    "\001\002\000\016\032\075\040\077\054\101\066\074\070" +
    "\100\120\076\001\002\000\004\071\130\001\002\000\020" +
    "\032\115\033\uff12\040\120\054\122\066\114\070\121\120" +
    "\117\001\002\000\004\033\uff13\001\002\000\004\041\133" +
    "\001\002\000\020\032\115\033\uff0c\040\120\054\122\066" +
    "\114\070\121\120\117\001\002\000\004\033\uff0d\001\002" +
    "\000\004\033\uff09\001\002\000\014\032\104\055\uff7d\066" +
    "\102\070\106\120\105\001\002\000\004\055\uff7e\001\002" +
    "\000\004\033\141\001\002\000\020\032\115\033\uff0e\040" +
    "\120\054\122\066\114\070\121\120\117\001\002\000\004" +
    "\033\uff0f\001\002\000\016\032\145\040\147\054\151\066" +
    "\143\070\150\120\146\001\002\000\004\067\170\001\002" +
    "\000\016\032\115\040\120\054\122\066\114\070\121\120" +
    "\117\001\002\000\020\032\145\040\147\054\151\066\143" +
    "\067\uff36\070\150\120\146\001\002\000\006\056\064\060" +
    "\063\001\002\000\004\123\155\001\002\000\012\032\104" +
    "\066\102\070\106\120\105\001\002\000\004\055\153\001" +
    "\002\000\020\032\145\040\147\054\151\066\143\067\uff38" +
    "\070\150\120\146\001\002\000\004\067\uff39\001\002\000" +
    "\016\032\075\040\077\054\101\066\074\070\100\120\076" +
    "\001\002\000\004\071\157\001\002\000\020\032\145\040" +
    "\147\054\151\066\143\067\uff40\070\150\120\146\001\002" +
    "\000\004\067\uff41\001\002\000\004\041\162\001\002\000" +
    "\020\032\145\040\147\054\151\066\143\067\uff3a\070\150" +
    "\120\146\001\002\000\004\067\uff3b\001\002\000\004\067" +
    "\uff37\001\002\000\004\033\166\001\002\000\020\032\145" +
    "\040\147\054\151\066\143\067\uff3c\070\150\120\146\001" +
    "\002\000\004\067\uff3d\001\002\000\020\032\115\033\uff10" +
    "\040\120\054\122\066\114\070\121\120\117\001\002\000" +
    "\004\033\uff11\001\002\000\004\067\173\001\002\000\020" +
    "\032\145\040\147\054\151\066\143\067\uff3e\070\150\120" +
    "\146\001\002\000\004\067\uff3f\001\002\000\020\032\075" +
    "\040\077\054\101\066\074\070\100\071\ufefe\120\076\001" +
    "\002\000\004\071\ufeff\001\002\000\004\067\200\001\002" +
    "\000\014\032\104\055\uff7f\066\102\070\106\120\105\001" +
    "\002\000\004\055\uff80\001\002\000\016\032\075\040\077" +
    "\054\101\066\074\070\100\120\076\001\002\000\004\071" +
    "\204\001\002\000\020\032\075\040\077\054\101\066\074" +
    "\070\100\071\uff06\120\076\001\002\000\004\071\uff07\001" +
    "\002\000\004\041\207\001\002\000\020\032\075\040\077" +
    "\054\101\066\074\070\100\071\uff00\120\076\001\002\000" +
    "\004\071\uff01\001\002\000\004\071\ufefd\001\002\000\004" +
    "\033\213\001\002\000\020\032\075\040\077\054\101\066" +
    "\074\070\100\071\uff02\120\076\001\002\000\004\071\uff03" +
    "\001\002\000\004\067\216\001\002\000\020\032\075\040" +
    "\077\054\101\066\074\070\100\071\uff04\120\076\001\002" +
    "\000\004\071\uff05\001\002\000\014\032\067\057\uff79\066" +
    "\065\070\071\120\070\001\002\000\004\057\uff7a\001\002" +
    "\000\004\057\uff7c\001\002\000\004\033\224\001\002\000" +
    "\014\032\067\057\uff75\066\065\070\071\120\070\001\002" +
    "\000\004\057\uff76\001\002\000\010\041\uffb3\056\064\060" +
    "\063\001\002\000\004\041\uffb4\001\002\000\004\067\231" +
    "\001\002\000\014\032\067\057\uff77\066\065\070\071\120" +
    "\070\001\002\000\004\057\uff78\001\002\000\016\032\145" +
    "\040\147\054\151\066\143\070\150\120\146\001\002\000" +
    "\004\061\250\001\002\000\016\032\115\040\120\054\122" +
    "\066\114\070\121\120\117\001\002\000\014\032\235\061" +
    "\uff73\066\233\070\237\120\236\001\002\000\004\123\240" +
    "\001\002\000\016\032\075\040\077\054\101\066\074\070" +
    "\100\120\076\001\002\000\004\071\242\001\002\000\014" +
    "\032\235\061\uff71\066\233\070\237\120\236\001\002\000" +
    "\004\061\uff72\001\002\000\004\061\uff74\001\002\000\004" +
    "\033\246\001\002\000\014\032\235\061\uff6d\066\233\070" +
    "\237\120\236\001\002\000\004\061\uff6e\001\002\000\010" +
    "\041\uffb1\056\064\060\063\001\002\000\004\041\uffb2\001" +
    "\002\000\004\067\253\001\002\000\014\032\235\061\uff6f" +
    "\066\233\070\237\120\236\001\002\000\004\061\uff70\001" +
    "\002\000\022\007\054\011\050\013\055\024\uffca\034\051" +
    "\040\056\042\053\121\052\001\002\000\004\024\uffcb\001" +
    "\002\000\012\032\363\066\362\070\365\120\364\001\002" +
    "\000\012\032\342\066\340\070\344\120\343\001\002\000" +
    "\012\032\317\066\316\070\322\120\320\001\002\000\020" +
    "\012\uffb0\044\257\046\260\050\261\052\264\054\265\120" +
    "\262\001\002\000\004\012\313\001\002\000\012\032\273" +
    "\066\271\070\275\120\274\001\002\000\012\032\104\066" +
    "\102\070\106\120\105\001\002\000\004\055\267\001\002" +
    "\000\020\012\uffa5\044\257\046\260\050\261\052\264\054" +
    "\265\120\262\001\002\000\004\012\uffa6\001\002\000\016" +
    "\032\145\040\147\054\151\066\143\070\150\120\146\001" +
    "\002\000\004\053\306\001\002\000\016\032\115\040\120" +
    "\054\122\066\114\070\121\120\117\001\002\000\014\032" +
    "\273\053\uff8b\066\271\070\275\120\274\001\002\000\004" +
    "\123\276\001\002\000\016\032\075\040\077\054\101\066" +
    "\074\070\100\120\076\001\002\000\004\071\300\001\002" +
    "\000\014\032\273\053\uff89\066\271\070\275\120\274\001" +
    "\002\000\004\053\uff8a\001\002\000\004\053\uff8c\001\002" +
    "\000\004\033\304\001\002\000\014\032\273\053\uff85\066" +
    "\271\070\275\120\274\001\002\000\004\053\uff86\001\002" +
    "\000\020\012\uffa7\044\257\046\260\050\261\052\264\054" +
    "\265\120\262\001\002\000\004\012\uffa8\001\002\000\004" +
    "\067\311\001\002\000\014\032\273\053\uff87\066\271\070" +
    "\275\120\274\001\002\000\004\053\uff88\001\002\000\022" +
    "\007\054\011\050\013\055\024\uffcc\034\051\040\056\042" +
    "\053\121\052\001\002\000\004\024\uffcd\001\002\000\004" +
    "\012\uffaf\001\002\000\016\032\145\040\147\054\151\066" +
    "\143\070\150\120\146\001\002\000\016\032\115\040\120" +
    "\054\122\066\114\070\121\120\117\001\002\000\014\032" +
    "\317\051\uff93\066\316\070\322\120\320\001\002\000\004" +
    "\051\327\001\002\000\004\123\323\001\002\000\016\032" +
    "\075\040\077\054\101\066\074\070\100\120\076\001\002" +
    "\000\004\071\325\001\002\000\014\032\317\051\uff91\066" +
    "\316\070\322\120\320\001\002\000\004\051\uff92\001\002" +
    "\000\020\012\uffa9\044\257\046\260\050\261\052\264\054" +
    "\265\120\262\001\002\000\004\012\uffaa\001\002\000\004" +
    "\051\uff94\001\002\000\004\033\333\001\002\000\014\032" +
    "\317\051\uff8d\066\316\070\322\120\320\001\002\000\004" +
    "\051\uff8e\001\002\000\004\067\336\001\002\000\014\032" +
    "\317\051\uff8f\066\316\070\322\120\320\001\002\000\004" +
    "\051\uff90\001\002\000\016\032\145\040\147\054\151\066" +
    "\143\070\150\120\146\001\002\000\004\047\355\001\002" +
    "\000\016\032\115\040\120\054\122\066\114\070\121\120" +
    "\117\001\002\000\014\032\342\047\uff9b\066\340\070\344" +
    "\120\343\001\002\000\004\123\345\001\002\000\016\032" +
    "\075\040\077\054\101\066\074\070\100\120\076\001\002" +
    "\000\004\071\347\001\002\000\014\032\342\047\uff99\066" +
    "\340\070\344\120\343\001\002\000\004\047\uff9a\001\002" +
    "\000\004\047\uff9c\001\002\000\004\033\353\001\002\000" +
    "\014\032\342\047\uff95\066\340\070\344\120\343\001\002" +
    "\000\004\047\uff96\001\002\000\020\012\uffab\044\257\046" +
    "\260\050\261\052\264\054\265\120\262\001\002\000\004" +
    "\012\uffac\001\002\000\004\067\360\001\002\000\014\032" +
    "\342\047\uff97\066\340\070\344\120\343\001\002\000\004" +
    "\047\uff98\001\002\000\016\032\145\040\147\054\151\066" +
    "\143\070\150\120\146\001\002\000\016\032\115\040\120" +
    "\054\122\066\114\070\121\120\117\001\002\000\014\032" +
    "\363\045\uffa3\066\362\070\365\120\364\001\002\000\004" +
    "\123\371\001\002\000\004\045\367\001\002\000\020\012" +
    "\uffad\044\257\046\260\050\261\052\264\054\265\120\262" +
    "\001\002\000\004\012\uffae\001\002\000\016\032\075\040" +
    "\077\054\101\066\074\070\100\120\076\001\002\000\004" +
    "\071\373\001\002\000\014\032\363\045\uffa1\066\362\070" +
    "\365\120\364\001\002\000\004\045\uffa2\001\002\000\004" +
    "\045\uffa4\001\002\000\004\033\377\001\002\000\014\032" +
    "\363\045\uff9d\066\362\070\365\120\364\001\002\000\004" +
    "\045\uff9e\001\002\000\004\067\u0102\001\002\000\014\032" +
    "\363\045\uff9f\066\362\070\365\120\364\001\002\000\004" +
    "\045\uffa0\001\002\000\016\032\145\040\147\054\151\066" +
    "\143\070\150\120\146\001\002\000\016\032\115\040\120" +
    "\054\122\066\114\070\121\120\117\001\002\000\014\006" +
    "\uffba\032\u0105\066\u0104\070\u0108\120\u0106\001\002\000\004" +
    "\006\u010d\001\002\000\004\123\u0109\001\002\000\016\032" +
    "\075\040\077\054\101\066\074\070\100\120\076\001\002" +
    "\000\004\071\u010b\001\002\000\014\006\uffb8\032\u0105\066" +
    "\u0104\070\u0108\120\u0106\001\002\000\004\006\uffb9\001\002" +
    "\000\022\007\054\011\050\013\055\024\uffc8\034\051\040" +
    "\056\042\053\121\052\001\002\000\004\024\uffc9\001\002" +
    "\000\004\006\uffbb\001\002\000\004\033\u0111\001\002\000" +
    "\012\032\u0105\066\u0104\070\u0108\120\u0106\001\002\000\004" +
    "\006\uffb5\001\002\000\004\067\u0114\001\002\000\014\006" +
    "\uffb6\032\u0105\066\u0104\070\u0108\120\u0106\001\002\000\004" +
    "\006\uffb7\001\002\000\004\043\u013e\001\002\000\012\032" +
    "\u0119\066\u0118\070\u011b\120\u011a\001\002\000\016\032\145" +
    "\040\147\054\151\066\143\070\150\120\146\001\002\000" +
    "\016\032\115\040\120\054\122\066\114\070\121\120\117" +
    "\001\002\000\014\032\u0119\063\uff6b\066\u0118\070\u011b\120" +
    "\u011a\001\002\000\004\123\u0133\001\002\000\004\063\u011d" +
    "\001\002\000\010\043\uff5b\062\u0117\064\u0120\001\002\000" +
    "\004\043\uff5a\001\002\000\004\043\uff59\001\002\000\012" +
    "\032\u0123\066\u0121\070\u0125\120\u0124\001\002\000\016\032" +
    "\145\040\147\054\151\066\143\070\150\120\146\001\002" +
    "\000\004\065\u012e\001\002\000\016\032\115\040\120\054" +
    "\122\066\114\070\121\120\117\001\002\000\014\032\u0123" +
    "\065\uff55\066\u0121\070\u0125\120\u0124\001\002\000\004\123" +
    "\u0126\001\002\000\016\032\075\040\077\054\101\066\074" +
    "\070\100\120\076\001\002\000\004\071\u0128\001\002\000" +
    "\014\032\u0123\065\uff53\066\u0121\070\u0125\120\u0124\001\002" +
    "\000\004\065\uff54\001\002\000\004\065\uff56\001\002\000" +
    "\004\033\u012c\001\002\000\014\032\u0123\065\uff4f\066\u0121" +
    "\070\u0125\120\u0124\001\002\000\004\065\uff50\001\002\000" +
    "\006\043\uff57\064\u0120\001\002\000\004\043\uff58\001\002" +
    "\000\004\067\u0131\001\002\000\014\032\u0123\065\uff51\066" +
    "\u0121\070\u0125\120\u0124\001\002\000\004\065\uff52\001\002" +
    "\000\016\032\075\040\077\054\101\066\074\070\100\120" +
    "\076\001\002\000\004\071\u0135\001\002\000\014\032\u0119" +
    "\063\uff69\066\u0118\070\u011b\120\u011a\001\002\000\004\063" +
    "\uff6a\001\002\000\004\063\uff6c\001\002\000\004\033\u0139" +
    "\001\002\000\014\032\u0119\063\uff65\066\u0118\070\u011b\120" +
    "\u011a\001\002\000\004\063\uff66\001\002\000\004\067\u013c" +
    "\001\002\000\014\032\u0119\063\uff67\066\u0118\070\u011b\120" +
    "\u011a\001\002\000\004\063\uff68\001\002\000\022\007\054" +
    "\011\050\013\055\024\uffc6\034\051\040\056\042\053\121" +
    "\052\001\002\000\004\024\uffc7\001\002\000\016\032\145" +
    "\040\147\054\151\066\143\070\150\120\146\001\002\000" +
    "\004\122\u014d\001\002\000\014\054\u0144\066\u0140\070\u0143" +
    "\120\u0142\122\uffc3\001\002\000\004\123\u0148\001\002\000" +
    "\012\032\104\066\102\070\106\120\105\001\002\000\004" +
    "\055\u0146\001\002\000\014\054\u0144\066\u0140\070\u0143\120" +
    "\u0142\122\uffbc\001\002\000\004\122\uffbd\001\002\000\016" +
    "\032\075\040\077\054\101\066\074\070\100\120\076\001" +
    "\002\000\004\071\u014a\001\002\000\014\054\u0144\066\u0140" +
    "\070\u0143\120\u0142\122\uffbe\001\002\000\004\122\uffbf\001" +
    "\002\000\004\122\uffc2\001\002\000\022\007\054\011\050" +
    "\013\055\024\uffc4\034\051\040\056\042\053\121\052\001" +
    "\002\000\004\024\uffc5\001\002\000\004\067\u0150\001\002" +
    "\000\014\054\u0144\066\u0140\070\u0143\120\u0142\122\uffc0\001" +
    "\002\000\004\122\uffc1\001\002\000\016\032\u018e\040\u0190" +
    "\054\u0192\066\u018d\070\u0191\120\u018f\001\002\000\030\005" +
    "\u015d\011\u0166\013\u0163\021\u015f\023\u0165\032\u0160\040\u0167" +
    "\054\u0162\066\u0164\070\u0161\120\u015e\001\002\000\012\054" +
    "\u0144\066\u0140\070\u0143\120\u0142\001\002\000\004\035\u0156" +
    "\001\002\000\022\007\054\011\050\013\055\024\uffce\034" +
    "\051\040\056\042\053\121\052\001\002\000\004\024\uffcf" +
    "\001\002\000\004\122\u0159\001\002\000\006\015\u015a\017" +
    "\u015b\001\002\000\016\032\u018e\040\u0190\054\u0192\066\u018d" +
    "\070\u0191\120\u018f\001\002\000\030\005\u015d\011\u0166\013" +
    "\u0163\021\u015f\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164" +
    "\070\u0161\120\u015e\001\002\000\004\035\uff64\001\002\000" +
    "\006\011\u01d9\072\u01da\001\002\000\032\005\u015d\011\u0166" +
    "\013\u0163\016\uff2a\021\u015f\023\u0165\032\u0160\040\u0167\054" +
    "\u0162\066\u0164\070\u0161\120\u015e\001\002\000\026\005\u01aa" +
    "\011\u01b4\013\u01af\015\u01ae\017\u01b0\021\u01ac\023\u01b3\032" +
    "\u01ad\034\u01ab\121\u01b2\001\002\000\016\032\115\040\120" +
    "\054\122\066\114\070\121\120\117\001\002\000\004\123" +
    "\u025d\001\002\000\012\032\104\066\102\070\106\120\105" +
    "\001\002\000\016\044\257\046\260\050\261\052\264\054" +
    "\265\120\262\001\002\000\016\032\145\040\147\054\151" +
    "\066\143\070\150\120\146\001\002\000\004\116\u0171\001" +
    "\002\000\010\025\025\110\030\112\027\001\002\000\006" +
    "\056\064\060\063\001\002\000\004\016\u0169\001\002\000" +
    "\010\015\u015a\017\u015b\035\uff5e\001\002\000\004\035\uff5f" +
    "\001\002\000\004\041\u016c\001\002\000\032\005\u015d\011" +
    "\u0166\013\u0163\016\uff2e\021\u015f\023\u0165\032\u0160\040\u0167" +
    "\054\u0162\066\u0164\070\u0161\120\u015e\001\002\000\004\016" +
    "\uff2f\001\002\000\004\010\u016f\001\002\000\032\005\u015d" +
    "\011\u0166\013\u0163\016\uff22\021\u015f\023\u0165\032\u0160\040" +
    "\u0167\054\u0162\066\u0164\070\u0161\120\u015e\001\002\000\004" +
    "\016\uff23\001\002\000\024\005\u0175\011\u017e\013\u017a\015" +
    "\u0179\017\u017b\021\u0177\023\u017d\032\u0178\034\u0176\001\002" +
    "\000\004\022\u0173\001\002\000\032\005\u015d\011\u0166\013" +
    "\u0163\016\uff28\021\u015f\023\u0165\032\u0160\040\u0167\054\u0162" +
    "\066\u0164\070\u0161\120\u015e\001\002\000\004\016\uff29\001" +
    "\002\000\006\011\u01d9\072\u01da\001\002\000\010\015\u0152" +
    "\017\u0153\121\u0154\001\002\000\026\005\u01aa\011\u01b4\013" +
    "\u01af\015\u01ae\017\u01b0\021\u01ac\023\u01b3\032\u01ad\034\u01ab" +
    "\121\u01b2\001\002\000\016\032\115\040\120\054\122\066" +
    "\114\070\121\120\117\001\002\000\016\032\u018e\040\u0190" +
    "\054\u0192\066\u018d\070\u0191\120\u018f\001\002\000\016\044" +
    "\257\046\260\050\261\052\264\054\265\120\262\001\002" +
    "\000\030\005\u015d\011\u0166\013\u0163\021\u015f\023\u0165\032" +
    "\u0160\040\u0167\054\u0162\066\u0164\070\u0161\120\u015e\001\002" +
    "\000\004\117\u0185\001\002\000\004\116\u0171\001\002\000" +
    "\010\025\025\110\030\112\027\001\002\000\004\010\u0180" +
    "\001\002\000\026\005\u0175\011\u017e\013\u017a\015\u0179\017" +
    "\u017b\021\u0177\023\u017d\032\u0178\034\u0176\117\ufeee\001\002" +
    "\000\004\117\ufeef\001\002\000\004\022\u0183\001\002\000" +
    "\026\005\u0175\011\u017e\013\u017a\015\u0179\017\u017b\021\u0177" +
    "\023\u017d\032\u0178\034\u0176\117\ufef8\001\002\000\004\117" +
    "\ufef9\001\002\000\006\022\ufefa\116\u0171\001\002\000\004" +
    "\022\ufefb\001\002\000\004\016\u0188\001\002\000\026\005" +
    "\u0175\011\u017e\013\u017a\015\u0179\017\u017b\021\u0177\023\u017d" +
    "\032\u0178\034\u0176\117\ufef4\001\002\000\004\117\ufef5\001" +
    "\002\000\004\012\u018b\001\002\000\026\005\u0175\011\u017e" +
    "\013\u017a\015\u0179\017\u017b\021\u0177\023\u017d\032\u0178\034" +
    "\u0176\117\ufef0\001\002\000\004\117\ufef1\001\002\000\016" +
    "\032\145\040\147\054\151\066\143\070\150\120\146\001" +
    "\002\000\016\032\115\040\120\054\122\066\114\070\121" +
    "\120\117\001\002\000\020\014\uff14\032\u018e\040\u0190\054" +
    "\u0192\066\u018d\070\u0191\120\u018f\001\002\000\006\056\064" +
    "\060\063\001\002\000\004\123\u0199\001\002\000\012\032" +
    "\104\066\102\070\106\120\105\001\002\000\004\014\u0194" +
    "\001\002\000\026\005\u0175\011\u017e\013\u017a\015\u0179\017" +
    "\u017b\021\u0177\023\u017d\032\u0178\034\u0176\117\ufef2\001\002" +
    "\000\004\117\ufef3\001\002\000\004\055\u0197\001\002\000" +
    "\020\014\uff16\032\u018e\040\u0190\054\u0192\066\u018d\070\u0191" +
    "\120\u018f\001\002\000\004\014\uff17\001\002\000\016\032" +
    "\075\040\077\054\101\066\074\070\100\120\076\001\002" +
    "\000\004\071\u019b\001\002\000\020\014\uff1e\032\u018e\040" +
    "\u0190\054\u0192\066\u018d\070\u0191\120\u018f\001\002\000\004" +
    "\014\uff1f\001\002\000\004\041\u019e\001\002\000\020\014" +
    "\uff18\032\u018e\040\u0190\054\u0192\066\u018d\070\u0191\120\u018f" +
    "\001\002\000\004\014\uff19\001\002\000\004\014\uff15\001" +
    "\002\000\004\033\u01a2\001\002\000\020\014\uff1a\032\u018e" +
    "\040\u0190\054\u0192\066\u018d\070\u0191\120\u018f\001\002\000" +
    "\004\014\uff1b\001\002\000\004\067\u01a5\001\002\000\020" +
    "\014\uff1c\032\u018e\040\u0190\054\u0192\066\u018d\070\u0191\120" +
    "\u018f\001\002\000\004\014\uff1d\001\002\000\004\033\u01a8" +
    "\001\002\000\026\005\u0175\011\u017e\013\u017a\015\u0179\017" +
    "\u017b\021\u0177\023\u017d\032\u0178\034\u0176\117\ufeea\001\002" +
    "\000\004\117\ufeeb\001\002\000\006\011\u01d9\072\u01da\001" +
    "\002\000\010\015\u0152\017\u0153\121\u0154\001\002\000\026" +
    "\005\u01aa\011\u01b4\013\u01af\015\u01ae\017\u01b0\021\u01ac\023" +
    "\u01b3\032\u01ad\034\u01ab\121\u01b2\001\002\000\016\032\115" +
    "\040\120\054\122\066\114\070\121\120\117\001\002\000" +
    "\016\032\u018e\040\u0190\054\u0192\066\u018d\070\u0191\120\u018f" +
    "\001\002\000\016\044\257\046\260\050\261\052\264\054" +
    "\265\120\262\001\002\000\030\005\u015d\011\u0166\013\u0163" +
    "\021\u015f\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070" +
    "\u0161\120\u015e\001\002\000\004\020\u0237\001\002\000\012" +
    "\054\u0144\066\u0140\070\u0143\120\u0142\001\002\000\004\116" +
    "\u0171\001\002\000\010\025\025\110\030\112\027\001\002" +
    "\000\004\010\u01b6\001\002\000\026\005\u01b7\011\u01bf\013" +
    "\u01bc\015\u01bb\017\u01bd\020\ufed9\021\u01b9\023\u01c0\032\u01ba" +
    "\034\u01b8\001\002\000\006\011\u01d9\072\u01da\001\002\000" +
    "\010\015\u0152\017\u0153\121\u0154\001\002\000\026\005\u01aa" +
    "\011\u01b4\013\u01af\015\u01ae\017\u01b0\021\u01ac\023\u01b3\032" +
    "\u01ad\034\u01ab\121\u01b2\001\002\000\016\032\115\040\120" +
    "\054\122\066\114\070\121\120\117\001\002\000\016\032" +
    "\u018e\040\u0190\054\u0192\066\u018d\070\u0191\120\u018f\001\002" +
    "\000\016\044\257\046\260\050\261\052\264\054\265\120" +
    "\262\001\002\000\030\005\u015d\011\u0166\013\u0163\021\u015f" +
    "\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070\u0161\120" +
    "\u015e\001\002\000\004\020\ufeda\001\002\000\010\025\025" +
    "\110\030\112\027\001\002\000\004\116\u0171\001\002\000" +
    "\004\022\u01c2\001\002\000\026\005\u01b7\011\u01bf\013\u01bc" +
    "\015\u01bb\017\u01bd\020\ufed1\021\u01b9\023\u01c0\032\u01ba\034" +
    "\u01b8\001\002\000\004\020\ufed2\001\002\000\004\010\u01c5" +
    "\001\002\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017" +
    "\u01bd\020\ufec7\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002" +
    "\000\004\020\ufec8\001\002\000\004\016\u01c8\001\002\000" +
    "\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020\ufecd" +
    "\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002\000\004\020" +
    "\ufece\001\002\000\004\012\u01cb\001\002\000\026\005\u01b7" +
    "\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020\ufed3\021\u01b9\023" +
    "\u01c0\032\u01ba\034\u01b8\001\002\000\004\020\ufed4\001\002" +
    "\000\004\014\u01ce\001\002\000\026\005\u01b7\011\u01bf\013" +
    "\u01bc\015\u01bb\017\u01bd\020\ufecb\021\u01b9\023\u01c0\032\u01ba" +
    "\034\u01b8\001\002\000\004\020\ufecc\001\002\000\004\033" +
    "\u01d1\001\002\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb" +
    "\017\u01bd\020\ufec5\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001" +
    "\002\000\004\020\ufec6\001\002\000\004\020\u01d4\001\002" +
    "\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020" +
    "\ufecf\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002\000\004" +
    "\020\ufed0\001\002\000\004\035\u01d7\001\002\000\026\005" +
    "\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020\ufec9\021\u01b9" +
    "\023\u01c0\032\u01ba\034\u01b8\001\002\000\004\020\ufeca\001" +
    "\002\000\010\025\025\110\030\112\027\001\002\000\010" +
    "\074\u01df\076\u01e0\100\u01e1\001\002\000\004\004\u01dc\001" +
    "\002\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd" +
    "\020\ufec3\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002\000" +
    "\004\020\ufec4\001\002\000\004\073\u022c\001\002\000\004" +
    "\102\u01ec\001\002\000\004\102\u021b\001\002\000\004\102" +
    "\u01e3\001\002\000\004\101\u021a\001\002\000\006\104\u01e4" +
    "\106\u01e6\001\002\000\022\011\u0201\015\u01fd\017\u01ff\021" +
    "\u01fb\023\u0200\032\u01fc\034\u01f9\120\u01fa\001\002\000\004" +
    "\103\u01f7\001\002\000\006\074\u01e8\100\u01e9\001\002\000" +
    "\004\107\u01f5\001\002\000\004\102\u01ec\001\002\000\004" +
    "\102\u01e3\001\002\000\004\101\u01eb\001\002\000\004\107" +
    "\ufea0\001\002\000\006\104\u01e4\106\u01e6\001\002\000\004" +
    "\075\u01ee\001\002\000\004\100\u01ef\001\002\000\004\102" +
    "\u01e3\001\002\000\004\101\u01f1\001\002\000\004\107\ufea1" +
    "\001\002\000\004\103\u01f3\001\002\000\006\075\ufebb\102" +
    "\u01ec\001\002\000\004\075\ufeba\001\002\000\010\103\ufeb2" +
    "\104\u01e4\106\u01e6\001\002\000\004\103\ufeb3\001\002\000" +
    "\006\101\ufeb7\102\u01e3\001\002\000\004\101\ufeb6\001\002" +
    "\000\010\015\u0152\017\u0153\121\u0154\001\002\000\024\011" +
    "\u0201\015\u01fd\017\u01ff\021\u01fb\023\u0200\032\u01fc\034\u01f9" +
    "\105\ufeb1\120\u01fa\001\002\000\026\005\u01aa\011\u01b4\013" +
    "\u01af\015\u01ae\017\u01b0\021\u01ac\023\u01b3\032\u01ad\034\u01ab" +
    "\121\u01b2\001\002\000\016\032\115\040\120\054\122\066" +
    "\114\070\121\120\117\001\002\000\016\032\u018e\040\u0190" +
    "\054\u0192\066\u018d\070\u0191\120\u018f\001\002\000\004\105" +
    "\u020b\001\002\000\030\005\u015d\011\u0166\013\u0163\021\u015f" +
    "\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070\u0161\120" +
    "\u015e\001\002\000\004\116\u0171\001\002\000\010\025\025" +
    "\110\030\112\027\001\002\000\004\010\u0203\001\002\000" +
    "\024\011\u0201\015\u01fd\017\u01ff\021\u01fb\023\u0200\032\u01fc" +
    "\034\u01f9\105\ufea6\120\u01fa\001\002\000\004\105\ufea7\001" +
    "\002\000\004\022\u0206\001\002\000\024\011\u0201\015\u01fd" +
    "\017\u01ff\021\u01fb\023\u0200\032\u01fc\034\u01f9\105\ufeae\120" +
    "\u01fa\001\002\000\004\105\ufeaf\001\002\000\004\016\u0209" +
    "\001\002\000\024\011\u0201\015\u01fd\017\u01ff\021\u01fb\023" +
    "\u0200\032\u01fc\034\u01f9\105\ufeaa\120\u01fa\001\002\000\004" +
    "\105\ufeab\001\002\000\010\103\ufeb4\104\u01e4\106\u01e6\001" +
    "\002\000\004\103\ufeb5\001\002\000\004\014\u020e\001\002" +
    "\000\024\011\u0201\015\u01fd\017\u01ff\021\u01fb\023\u0200\032" +
    "\u01fc\034\u01f9\105\ufea8\120\u01fa\001\002\000\004\105\ufea9" +
    "\001\002\000\004\033\u0211\001\002\000\024\011\u0201\015" +
    "\u01fd\017\u01ff\021\u01fb\023\u0200\032\u01fc\034\u01f9\105\ufea4" +
    "\120\u01fa\001\002\000\004\105\ufea5\001\002\000\004\020" +
    "\u0214\001\002\000\024\011\u0201\015\u01fd\017\u01ff\021\u01fb" +
    "\023\u0200\032\u01fc\034\u01f9\105\ufeac\120\u01fa\001\002\000" +
    "\004\105\ufead\001\002\000\004\105\ufeb0\001\002\000\004" +
    "\035\u0218\001\002\000\024\011\u0201\015\u01fd\017\u01ff\021" +
    "\u01fb\023\u0200\032\u01fc\034\u01f9\105\ufea2\120\u01fa\001\002" +
    "\000\004\105\ufea3\001\002\000\004\073\ufebc\001\002\000" +
    "\006\104\u01e4\106\u01e6\001\002\000\004\077\u021d\001\002" +
    "\000\004\100\u021e\001\002\000\004\102\u01e3\001\002\000" +
    "\004\101\u0220\001\002\000\004\073\ufebd\001\002\000\004" +
    "\103\u0222\001\002\000\006\077\ufeb9\102\u021b\001\002\000" +
    "\004\077\ufeb8\001\002\000\004\075\u0225\001\002\000\004" +
    "\076\u0226\001\002\000\004\102\u021b\001\002\000\004\077" +
    "\u0228\001\002\000\004\100\u0229\001\002\000\004\102\u01e3" +
    "\001\002\000\004\101\u022b\001\002\000\004\073\ufebe\001" +
    "\002\000\010\004\ufec1\011\u01d9\072\u01da\001\002\000\004" +
    "\004\ufec2\001\002\000\004\010\u022f\001\002\000\010\004" +
    "\ufebf\011\u01d9\072\u01da\001\002\000\004\004\ufec0\001\002" +
    "\000\004\022\u0232\001\002\000\026\005\u01b7\011\u01bf\013" +
    "\u01bc\015\u01bb\017\u01bd\020\ufee3\021\u01b9\023\u01c0\032\u01ba" +
    "\034\u01b8\001\002\000\004\020\ufee4\001\002\000\004\122" +
    "\u0235\001\002\000\024\005\u01b7\011\u01bf\013\u01bc\015\u01bb" +
    "\017\u01bd\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002\000" +
    "\004\020\ufee7\001\002\000\026\005\u0175\011\u017e\013\u017a" +
    "\015\u0179\017\u017b\021\u0177\023\u017d\032\u0178\034\u0176\117" +
    "\ufef6\001\002\000\004\117\ufef7\001\002\000\004\016\u023a" +
    "\001\002\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017" +
    "\u01bd\020\ufedf\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002" +
    "\000\004\020\ufee0\001\002\000\004\012\u023d\001\002\000" +
    "\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020\ufee5" +
    "\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002\000\004\020" +
    "\ufee6\001\002\000\004\014\u0240\001\002\000\026\005\u01b7" +
    "\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020\ufedd\021\u01b9\023" +
    "\u01c0\032\u01ba\034\u01b8\001\002\000\004\020\ufede\001\002" +
    "\000\004\033\u0243\001\002\000\026\005\u01b7\011\u01bf\013" +
    "\u01bc\015\u01bb\017\u01bd\020\ufed7\021\u01b9\023\u01c0\032\u01ba" +
    "\034\u01b8\001\002\000\004\020\ufed8\001\002\000\004\020" +
    "\u0246\001\002\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb" +
    "\017\u01bd\020\ufee1\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001" +
    "\002\000\004\020\ufee2\001\002\000\004\035\u0249\001\002" +
    "\000\026\005\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020" +
    "\ufedb\021\u01b9\023\u01c0\032\u01ba\034\u01b8\001\002\000\004" +
    "\020\ufedc\001\002\000\004\004\u024c\001\002\000\026\005" +
    "\u01b7\011\u01bf\013\u01bc\015\u01bb\017\u01bd\020\ufed5\021\u01b9" +
    "\023\u01c0\032\u01ba\034\u01b8\001\002\000\004\020\ufed6\001" +
    "\002\000\004\035\u024f\001\002\000\026\005\u0175\011\u017e" +
    "\013\u017a\015\u0179\017\u017b\021\u0177\023\u017d\032\u0178\034" +
    "\u0176\117\ufee8\001\002\000\004\117\ufee9\001\002\000\004" +
    "\004\u0252\001\002\000\026\005\u0175\011\u017e\013\u017a\015" +
    "\u0179\017\u017b\021\u0177\023\u017d\032\u0178\034\u0176\117\ufeec" +
    "\001\002\000\004\117\ufeed\001\002\000\004\067\u0255\001" +
    "\002\000\032\005\u015d\011\u0166\013\u0163\016\uff32\021\u015f" +
    "\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070\u0161\120" +
    "\u015e\001\002\000\004\016\uff33\001\002\000\004\012\u0258" +
    "\001\002\000\032\005\u015d\011\u0166\013\u0163\016\uff24\021" +
    "\u015f\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070\u0161" +
    "\120\u015e\001\002\000\004\016\uff25\001\002\000\004\055" +
    "\u025b\001\002\000\032\005\u015d\011\u0166\013\u0163\016\uff2c" +
    "\021\u015f\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070" +
    "\u0161\120\u015e\001\002\000\004\016\uff2d\001\002\000\016" +
    "\032\075\040\077\054\101\066\074\070\100\120\076\001" +
    "\002\000\004\071\u025f\001\002\000\032\005\u015d\011\u0166" +
    "\013\u0163\016\uff34\021\u015f\023\u0165\032\u0160\040\u0167\054" +
    "\u0162\066\u0164\070\u0161\120\u015e\001\002\000\004\016\uff35" +
    "\001\002\000\004\033\u0262\001\002\000\032\005\u015d\011" +
    "\u0166\013\u0163\016\uff30\021\u015f\023\u0165\032\u0160\040\u0167" +
    "\054\u0162\066\u0164\070\u0161\120\u015e\001\002\000\004\016" +
    "\uff31\001\002\000\004\020\u0265\001\002\000\032\005\u015d" +
    "\011\u0166\013\u0163\016\uff26\021\u015f\023\u0165\032\u0160\040" +
    "\u0167\054\u0162\066\u0164\070\u0161\120\u015e\001\002\000\004" +
    "\016\uff27\001\002\000\004\016\uff2b\001\002\000\004\004" +
    "\u0269\001\002\000\032\005\u015d\011\u0166\013\u0163\016\uff20" +
    "\021\u015f\023\u0165\032\u0160\040\u0167\054\u0162\066\u0164\070" +
    "\u0161\120\u015e\001\002\000\004\016\uff21\001\002\000\004" +
    "\014\u026c\001\002\000\010\015\u015a\017\u015b\035\uff5c\001" +
    "\002\000\004\035\uff5d\001\002\000\004\016\u026f\001\002" +
    "\000\010\015\u015a\017\u015b\035\uff62\001\002\000\004\035" +
    "\uff63\001\002\000\004\014\u0272\001\002\000\010\015\u015a" +
    "\017\u015b\035\uff60\001\002\000\004\035\uff61\001\002\000" +
    "\004\010\u0275\001\002\000\022\007\054\011\050\013\055" +
    "\024\uffd0\034\051\040\056\042\053\121\052\001\002\000" +
    "\004\024\uffd1\001\002\000\004\024\u0278\001\002\000\004" +
    "\114\u0279\001\002\000\004\111\uff43\001\002\000\004\113" +
    "\u027b\001\002\000\010\010\uff4a\110\037\112\036\001\002" +
    "\000\004\010\uff4b\001\002\000\036\005\007\011\024\013" +
    "\017\015\016\017\020\021\012\023\023\026\uffde\027\uffde" +
    "\031\uffde\032\014\034\010\036\uffde\037\uffde\001\002\000" +
    "\014\026\uffdf\027\uffdf\031\uffdf\036\uffdf\037\uffdf\001\002" +
    "\000\004\024\u0280\001\002\000\006\110\037\112\036\001" +
    "\002\000\004\010\uff4e\001\002\000\004\022\u0283\001\002" +
    "\000\036\005\007\011\024\013\017\015\016\017\020\021" +
    "\012\023\023\026\uffe8\027\uffe8\031\uffe8\032\014\034\010" +
    "\036\uffe8\037\uffe8\001\002\000\014\026\uffe9\027\uffe9\031" +
    "\uffe9\036\uffe9\037\uffe9\001\002\000\004\024\u0286\001\002" +
    "\000\026\005\uffd7\011\uffd7\013\uffd7\015\uffd7\017\uffd7\021" +
    "\uffd7\023\uffd7\032\uffd7\034\uffd7\121\u0287\001\002\000\012" +
    "\054\u0144\066\u0140\070\u0143\120\u0142\001\002\000\004\122" +
    "\u0289\001\002\000\024\005\uffd6\011\uffd6\013\uffd6\015\uffd6" +
    "\017\uffd6\021\uffd6\023\uffd6\032\uffd6\034\uffd6\001\002\000" +
    "\004\122\u028b\001\002\000\024\005\uffd5\011\uffd5\013\uffd5" +
    "\015\uffd5\017\uffd5\021\uffd5\023\uffd5\032\uffd5\034\uffd5\001" +
    "\002\000\004\016\u028d\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffe4\027" +
    "\uffe4\031\uffe4\032\014\034\010\036\uffe4\037\uffe4\001\002" +
    "\000\014\026\uffe5\027\uffe5\031\uffe5\036\uffe5\037\uffe5\001" +
    "\002\000\004\012\u0290\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffe0\027" +
    "\uffe0\031\uffe0\032\014\034\010\036\uffe0\037\uffe0\001\002" +
    "\000\014\026\uffe1\027\uffe1\031\uffe1\036\uffe1\037\uffe1\001" +
    "\002\000\004\014\u0293\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffe2\027" +
    "\uffe2\031\uffe2\032\014\034\010\036\uffe2\037\uffe2\001\002" +
    "\000\014\026\uffe3\027\uffe3\031\uffe3\036\uffe3\037\uffe3\001" +
    "\002\000\006\031\ufffb\036\u0297\001\002\000\030\005\007" +
    "\011\024\013\017\015\016\017\020\021\012\023\023\025" +
    "\u029c\032\014\034\010\121\u029b\001\002\000\030\005\007" +
    "\011\024\013\017\015\016\017\020\021\012\023\023\025" +
    "\u029c\032\014\034\010\121\u029b\001\002\000\004\031\ufffa" +
    "\001\002\000\004\037\u02a7\001\002\000\024\005\007\011" +
    "\024\013\017\015\016\017\020\021\012\023\023\032\014" +
    "\034\010\001\002\000\012\054\u0144\066\u0140\070\u0143\120" +
    "\u0142\001\002\000\020\007\054\011\050\013\055\034\051" +
    "\040\056\042\053\121\052\001\002\000\004\024\u029e\001" +
    "\002\000\026\005\uffd4\011\uffd4\013\uffd4\015\uffd4\017\uffd4" +
    "\021\uffd4\023\uffd4\032\uffd4\034\uffd4\121\u029f\001\002\000" +
    "\012\054\u0144\066\u0140\070\u0143\120\u0142\001\002\000\004" +
    "\122\u02a1\001\002\000\024\005\uffd3\011\uffd3\013\uffd3\015" +
    "\uffd3\017\uffd3\021\uffd3\023\uffd3\032\uffd3\034\uffd3\001\002" +
    "\000\004\122\u02a3\001\002\000\024\005\uffd2\011\uffd2\013" +
    "\uffd2\015\uffd2\017\uffd2\021\uffd2\023\uffd2\032\uffd2\034\uffd2" +
    "\001\002\000\004\037\u02a5\001\002\000\010\026\ufff4\031" +
    "\ufff4\036\u0297\001\002\000\006\026\ufff5\031\ufff5\001\002" +
    "\000\010\026\ufff2\031\ufff2\036\u0297\001\002\000\006\026" +
    "\ufff3\031\ufff3\001\002\000\004\026\u02b3\001\002\000\010" +
    "\026\uffea\027\u0296\036\u0297\001\002\000\024\005\007\011" +
    "\024\013\017\015\016\017\020\021\012\023\023\032\014" +
    "\034\010\001\002\000\010\026\uffeb\027\u0296\036\u0297\001" +
    "\002\000\006\026\uffef\036\u0297\001\002\000\004\026\ufff0" +
    "\001\002\000\004\026\ufff1\001\002\000\006\026\uffed\036" +
    "\u0297\001\002\000\004\026\uffec\001\002\000\004\026\uffee" +
    "\001\002\000\012\026\ufff6\027\u0296\031\ufff6\036\ufff6\001" +
    "\002\000\010\026\ufff7\031\ufff7\036\ufff7\001\002\000\004" +
    "\031\ufffc\001\002\000\004\033\u02b7\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\012\023\023" +
    "\026\uffda\027\uffda\031\uffda\032\014\034\010\036\uffda\037" +
    "\uffda\001\002\000\014\026\uffdb\027\uffdb\031\uffdb\036\uffdb" +
    "\037\uffdb\001\002\000\004\002\000\001\002\000\004\020" +
    "\u02bb\001\002\000\036\005\007\011\024\013\017\015\016" +
    "\017\020\021\012\023\023\026\uffe6\027\uffe6\031\uffe6\032" +
    "\014\034\010\036\uffe6\037\uffe6\001\002\000\014\026\uffe7" +
    "\027\uffe7\031\uffe7\036\uffe7\037\uffe7\001\002\000\010\027" +
    "\u0296\031\ufff9\036\u0297\001\002\000\006\031\ufffd\036\u0297" +
    "\001\002\000\004\031\ufffe\001\002\000\004\031\uffff\001" +
    "\002\000\004\035\u02c2\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffd8\027" +
    "\uffd8\031\uffd8\032\014\034\010\036\uffd8\037\uffd8\001\002" +
    "\000\014\026\uffd9\027\uffd9\031\uffd9\036\uffd9\037\uffd9\001" +
    "\002\000\004\004\u02c5\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\012\023\023\026\uffdc\027" +
    "\uffdc\031\uffdc\032\014\034\010\036\uffdc\037\uffdc\001\002" +
    "\000\014\026\uffdd\027\uffdd\031\uffdd\036\uffdd\037\uffdd\001" +
    "\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02c5\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\003\012\004\010\005\014\001\001" +
    "\000\004\047\u02c3\001\001\000\004\020\u02c0\001\001\000" +
    "\004\005\u02bc\001\001\000\004\045\u02b9\001\001\000\002" +
    "\001\001\000\004\050\u02b5\001\001\000\006\007\u0294\010" +
    "\u0297\001\001\000\004\035\u0291\001\001\000\004\023\u028e" +
    "\001\001\000\004\034\u028b\001\001\000\004\013\u0289\001" +
    "\001\000\004\012\u0284\001\001\000\004\044\u0281\001\001" +
    "\000\004\016\025\001\001\000\004\012\u027e\001\001\000" +
    "\002\001\001\000\004\033\u0279\001\001\000\004\032\031" +
    "\001\001\000\004\012\u0276\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\034\001\001\000\002\001\001" +
    "\000\004\033\043\001\001\000\004\032\037\001\001\000" +
    "\002\001\001\000\004\017\041\001\001\000\002\001\001" +
    "\000\004\012\056\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\046\001\001\000\002\001\001\000\004" +
    "\016\u0273\001\001\000\004\020\u0154\001\001\000\004\013" +
    "\u0140\001\001\000\004\015\u0115\001\001\000\004\014\u0106" +
    "\001\001\000\004\023\262\001\001\000\004\022\061\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\043\233\001\001\000\004\042" +
    "\065\001\001\000\004\024\227\001\001\000\002\001\001" +
    "\000\004\050\222\001\001\000\004\042\221\001\001\000" +
    "\002\001\001\000\004\025\072\001\001\000\002\001\001" +
    "\000\004\024\214\001\001\000\004\050\211\001\001\000" +
    "\004\025\210\001\001\000\004\022\205\001\001\000\002" +
    "\001\001\000\004\026\102\001\001\000\004\024\176\001" +
    "\001\000\002\001\001\000\004\050\115\001\001\000\004" +
    "\026\112\001\001\000\002\001\001\000\004\025\107\001" +
    "\001\000\002\001\001\000\004\026\111\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\143\001\001\000" +
    "\004\050\137\001\001\000\002\001\001\000\004\050\134" +
    "\001\001\000\004\022\131\001\001\000\002\001\001\000" +
    "\004\026\122\001\001\000\002\001\001\000\004\050\124" +
    "\001\001\000\002\001\001\000\004\025\126\001\001\000" +
    "\002\001\001\000\004\050\130\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\050\133\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\026\136\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\050\141\001\001\000" +
    "\002\001\001\000\004\024\171\001\001\000\002\001\001" +
    "\000\004\050\164\001\001\000\004\024\163\001\001\000" +
    "\004\022\160\001\001\000\002\001\001\000\004\026\151" +
    "\001\001\000\002\001\001\000\004\024\153\001\001\000" +
    "\002\001\001\000\004\025\155\001\001\000\002\001\001" +
    "\000\004\024\157\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\024\162\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\024\166\001\001\000" +
    "\002\001\001\000\004\050\170\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\173\001\001\000\002\001" +
    "\001\000\004\025\175\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\200\001\001\000\002\001\001\000" +
    "\004\025\202\001\001\000\002\001\001\000\004\025\204" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\025" +
    "\207\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\213\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\025\216\001\001\000\002\001\001" +
    "\000\004\042\220\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\042\224\001\001\000\002" +
    "\001\001\000\004\022\226\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\042\231\001\001\000\002\001\001" +
    "\000\004\024\251\001\001\000\002\001\001\000\004\050" +
    "\244\001\001\000\004\043\243\001\001\000\002\001\001" +
    "\000\004\025\240\001\001\000\002\001\001\000\004\043" +
    "\242\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\043\246\001\001\000\002\001\001\000" +
    "\004\022\250\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\043\253\001\001\000\002\001\001\000\004\012" +
    "\255\001\001\000\002\001\001\000\004\036\365\001\001" +
    "\000\004\037\340\001\001\000\004\040\320\001\001\000" +
    "\004\023\314\001\001\000\002\001\001\000\004\041\271" +
    "\001\001\000\004\026\265\001\001\000\002\001\001\000" +
    "\004\023\267\001\001\000\002\001\001\000\004\024\307" +
    "\001\001\000\002\001\001\000\004\050\302\001\001\000" +
    "\004\041\301\001\001\000\002\001\001\000\004\025\276" +
    "\001\001\000\002\001\001\000\004\041\300\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\041\304\001\001\000\002\001\001\000\004\023\306\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\041\311" +
    "\001\001\000\002\001\001\000\004\012\313\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\024\334\001\001" +
    "\000\004\050\331\001\001\000\004\040\330\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\025\323\001\001" +
    "\000\002\001\001\000\004\040\325\001\001\000\002\001" +
    "\001\000\004\023\327\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\040\333\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\040\336\001\001" +
    "\000\002\001\001\000\004\024\356\001\001\000\002\001" +
    "\001\000\004\050\351\001\001\000\004\037\350\001\001" +
    "\000\002\001\001\000\004\025\345\001\001\000\002\001" +
    "\001\000\004\037\347\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\037\353\001\001\000" +
    "\002\001\001\000\004\023\355\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\037\360\001\001\000\002\001" +
    "\001\000\004\024\u0100\001\001\000\004\050\375\001\001" +
    "\000\004\036\374\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\023\367\001\001\000\002\001\001\000\004" +
    "\025\371\001\001\000\002\001\001\000\004\036\373\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\377\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\036\u0102\001\001\000\002\001\001\000\004" +
    "\024\u0112\001\001\000\004\050\u010f\001\001\000\004\014" +
    "\u010e\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\025\u0109\001\001\000\002\001\001\000\004\014\u010b\001" +
    "\001\000\002\001\001\000\004\012\u010d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\u0111\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\u0114\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\u011b\001\001\000\004\024\u013a\001\001\000\004" +
    "\050\u0137\001\001\000\004\027\u0136\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\015\u011d\031\u011e\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\030\u0121\001" +
    "\001\000\004\024\u012f\001\001\000\002\001\001\000\004" +
    "\050\u012a\001\001\000\004\030\u0129\001\001\000\002\001" +
    "\001\000\004\025\u0126\001\001\000\002\001\001\000\004" +
    "\030\u0128\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\030\u012c\001\001\000\002\001\001" +
    "\000\004\031\u012e\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\030\u0131\001\001\000\002\001\001\000\004" +
    "\025\u0133\001\001\000\002\001\001\000\004\027\u0135\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\u0139\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\027\u013c\001\001\000\002\001\001\000\004" +
    "\012\u013e\001\001\000\002\001\001\000\004\024\u014e\001" +
    "\001\000\002\001\001\000\004\013\u014b\001\001\000\002" +
    "\001\001\000\004\026\u0144\001\001\000\002\001\001\000" +
    "\004\013\u0146\001\001\000\002\001\001\000\004\025\u0148" +
    "\001\001\000\002\001\001\000\004\013\u014a\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\012\u014d\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\013\u0150\001" +
    "\001\000\002\001\001\000\004\035\u0270\001\001\000\004" +
    "\034\u026d\001\001\000\004\013\u0157\001\001\000\002\001" +
    "\001\000\004\012\u0156\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\u015b\001\001\000\004\035\u026a\001" +
    "\001\000\004\034\u0167\001\001\000\002\001\001\000\004" +
    "\047\u0267\001\001\000\004\034\u0266\001\001\000\004\045" +
    "\u0263\001\001\000\004\050\u0260\001\001\000\002\001\001" +
    "\000\004\026\u0259\001\001\000\004\023\u0256\001\001\000" +
    "\004\024\u0253\001\001\000\004\044\u0171\001\001\000\004" +
    "\016\u016d\001\001\000\004\022\u016a\001\001\000\002\001" +
    "\001\000\004\021\u0169\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\034\u016c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\034\u016f\001\001\000\002\001\001" +
    "\000\004\051\u017b\001\001\000\002\001\001\000\004\034" +
    "\u0173\001\001\000\002\001\001\000\004\047\u0250\001\001" +
    "\000\004\020\u024d\001\001\000\004\045\u01b0\001\001\000" +
    "\004\050\u01a6\001\001\000\004\035\u0192\001\001\000\004" +
    "\023\u0189\001\001\000\004\034\u0186\001\001\000\002\001" +
    "\001\000\004\044\u0181\001\001\000\004\016\u017e\001\001" +
    "\000\002\001\001\000\004\051\u0180\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\u0183\001\001\000\002" +
    "\001\001\000\004\044\u0185\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\051\u0188\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\051\u018b\001\001\000\002\001" +
    "\001\000\004\024\u01a3\001\001\000\004\050\u01a0\001\001" +
    "\000\004\035\u019f\001\001\000\004\022\u019c\001\001\000" +
    "\002\001\001\000\004\026\u0195\001\001\000\002\001\001" +
    "\000\004\051\u0194\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\035\u0197\001\001\000\002\001\001\000\004" +
    "\025\u0199\001\001\000\002\001\001\000\004\035\u019b\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\035\u019e" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\035\u01a2\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\u01a5\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\051\u01a8\001\001\000\002\001\001" +
    "\000\004\047\u024a\001\001\000\004\020\u0247\001\001\000" +
    "\004\045\u0244\001\001\000\004\050\u0241\001\001\000\004" +
    "\035\u023e\001\001\000\004\023\u023b\001\001\000\004\034" +
    "\u0238\001\001\000\002\001\001\000\004\013\u0233\001\001" +
    "\000\004\044\u0230\001\001\000\004\016\u01b4\001\001\000" +
    "\002\001\001\000\004\046\u01bd\001\001\000\004\047\u01da" +
    "\001\001\000\004\020\u01d5\001\001\000\004\045\u01d2\001" +
    "\001\000\004\050\u01cf\001\001\000\004\035\u01cc\001\001" +
    "\000\004\023\u01c9\001\001\000\004\034\u01c6\001\001\000" +
    "\002\001\001\000\004\016\u01c3\001\001\000\004\044\u01c0" +
    "\001\001\000\002\001\001\000\004\046\u01c2\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\u01c5\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\046\u01c8\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\046\u01cb" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\046" +
    "\u01ce\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\046\u01d1\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\046\u01d4\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\046\u01d7\001\001\000\002\001\001\000\004\016" +
    "\u022d\001\001\000\004\052\u01dd\001\001\000\002\001\001" +
    "\000\004\046\u01dc\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\053\u0223\001\001\000\004\054\u021b\001\001" +
    "\000\004\055\u01e1\001\001\000\002\001\001\000\004\056" +
    "\u01e4\001\001\000\004\057\u01fd\001\001\000\002\001\001" +
    "\000\004\060\u01e6\001\001\000\002\001\001\000\004\053" +
    "\u01ec\001\001\000\004\055\u01e9\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\056\u01f1\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\055\u01ef\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\053" +
    "\u01f3\001\001\000\002\001\001\000\004\056\u01f5\001\001" +
    "\000\002\001\001\000\004\055\u01f7\001\001\000\002\001" +
    "\001\000\004\020\u0216\001\001\000\004\057\u0215\001\001" +
    "\000\004\045\u0212\001\001\000\004\050\u020f\001\001\000" +
    "\004\035\u020c\001\001\000\002\001\001\000\004\034\u0207" +
    "\001\001\000\004\044\u0204\001\001\000\004\016\u0201\001" +
    "\001\000\002\001\001\000\004\057\u0203\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\057\u0206\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\057\u0209\001\001" +
    "\000\002\001\001\000\004\056\u020b\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\057\u020e\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\057\u0211\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\057\u0214\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\057\u0218\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\056\u0220\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\055\u021e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\054\u0222\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\054\u0226\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\055\u0229\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\047\u022c\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\047\u022f\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\u0232\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u0235\001\001\000\002\001\001" +
    "\000\004\051\u0237\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\046\u023a\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\u023d\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u0240\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u0243\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u0246\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u0249\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\u024c\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\051\u024f\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\051\u0252" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\034" +
    "\u0255\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u0258\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u025b\001\001\000\002\001\001\000\004\025\u025d" +
    "\001\001\000\002\001\001\000\004\034\u025f\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\034\u0262\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\u0265\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u0269\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\021\u026c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\021\u026f\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\021\u0272\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\012\u0275\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\017\u027b\001\001\000\002\001" +
    "\001\000\004\005\u027d\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\017\u0280\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\u0283\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\013\u0287\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\005\u028d\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\u0290" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\005" +
    "\u0293\001\001\000\002\001\001\000\004\010\u02b4\001\001" +
    "\000\010\005\u02a9\006\u02aa\011\u02a8\001\001\000\006\005" +
    "\u0298\006\u0299\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u02a3\001\001\000\004\013\u02a1\001\001\000" +
    "\004\012\u029c\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\013\u029f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\u02a5\001\001\000\002\001\001\000\004\010" +
    "\u02a7\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\007\u02af\010\u02b0\001\001\000\004\005\u02ab\001\001\000" +
    "\006\007\u02ac\010\u02ad\001\001\000\004\010\u02ae\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\u02b1\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\u02b3" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\u02b7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\u02bb\001\001\000" +
    "\002\001\001\000\006\007\u02bd\010\u02be\001\001\000\004" +
    "\010\u02bf\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\005\u02c2\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\u02c5\001\001\000\002\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }
    
    public Symbol getSymbol(){
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {
  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // ENTRYTBL ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // ENTRYTBL ::= AperturaThead THEAD CierreThead AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ENTRY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ENTRY ::= AperturaComment COMMENT CierreComment ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ENTRY ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ENTRY ::= AperturaPara PARRAFO CierrePara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ENTRY ::= Texto ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ENTRY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ROW ::= AperturaEntry ENTRY CierreEntry 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ROW ::= AperturaEntry ENTRY CierreEntry ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // TBODY ::= AperturaRow ROW CierreRow TBODY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TBODY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // TBODY ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TBODY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // TFOOT ::= AperturaRow ROW CierreRow TFOOT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TFOOT",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // TFOOT ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TFOOT",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // THEAD ::= AperturaRow ROW CierreRow THEAD 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("THEAD",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // THEAD ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("THEAD",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // TGROUP ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // TGROUP ::= AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // TGROUP ::= AperturaThead THEAD CierreThead AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // NIMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // NIMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // IMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // IMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // IMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // IMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // IMPORTANT ::= AperturaTitulo TITULO CierreTitulo NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // LISTITEM ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // LISTITEM ::= AperturaComment COMMENT CierreComment LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // LISTITEM ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // LISTITEM ::= AperturaPara PARRAFO CierrePara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem ITEMIZEDLIST 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // LINK ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // LINK ::= Texto LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // LINK ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // LINK ::= AperturaEmail EMAIL CierreEmail LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // LINK ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // LINK ::= AperturaAuthor AUTHOR CierreAuthor LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // LINK ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // LINK ::= AperturaComment COMMENT CierreComment LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LINK ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LINK ::= AperturaLink Url LINK CierreLink LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // COMMENT ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // COMMENT ::= Texto COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // COMMENT ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // COMMENT ::= AperturaEmail EMAIL CierreEmail COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // COMMENT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // COMMENT ::= AperturaComment COMMENT CierreComment COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // COMMENT ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // COMMENT ::= AperturaLink Url LINK CierreLink COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // SIMPARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // SIMPARRAFO ::= Texto SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // SIMPARRAFO ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // SIMPARRAFO ::= AperturaLink Url LINK CierreLink SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // PARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // PARRAFO ::= Texto PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // PARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // PARRAFO ::= AperturaEmail EMAIL CierreEmail PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // PARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // PARRAFO ::= AperturaComment COMMENT CierreComment PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // PARRAFO ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // PARRAFO ::= AperturaLink Url LINK CierreLink PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // EMPHASIS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // EMPHASIS ::= Texto EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // EMPHASIS ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // EMPHASIS ::= AperturaComment COMMENT CierreComment EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // EMPHASIS ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // EMPHASIS ::= AperturaLink Url LINK CierreLink EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // VIDEOOBJECT ::= Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // VIDEOOBJECT ::= AperturaInfo INFORMACION CierreInfo Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // IMAGEOBJECT ::= Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // IMAGEOBJECT ::= AperturaInfo INFORMACION CierreInfo Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // MEDIAOBJECT ::= AperturaInfo INFORMACION CierreInfo NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // HOLDER ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // HOLDER ::= AperturaComment COMMENT CierreComment HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // HOLDER ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // HOLDER ::= AperturaLink Url LINK CierreLink HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // HOLDER ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // HOLDER ::= Texto HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // NHOLDER ::= AperturaHolder HOLDER CierreHolder 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // NHOLDER ::= AperturaHolder HOLDER CierreHolder NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // COPYRIGHT ::= AperturaYear YEAR CierreYear NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // COPYRIGHT ::= AperturaYear YEAR CierreYear COPYRIGHT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // COPYRIGHT ::= AperturaYear YEAR CierreYear 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // NABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // NABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // ABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // ABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // ABSTRACT ::= AperturaTitulo TITULO CierreTitulo NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // YEAR ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // YEAR ::= AperturaComment COMMENT CierreComment YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // YEAR ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // YEAR ::= AperturaLink Url LINK CierreLink YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // YEAR ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // YEAR ::= Texto YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // SURNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // SURNAME ::= AperturaComment COMMENT CierreComment SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // SURNAME ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // SURNAME ::= AperturaLink Url LINK CierreLink SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // SURNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // SURNAME ::= Texto SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // FIRSTNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // FIRSTNAME ::= AperturaComment COMMENT CierreComment FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // FIRSTNAME ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // FIRSTNAME ::= AperturaLink Url LINK CierreLink FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // FIRSTNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // FIRSTNAME ::= Texto FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // EMAIL ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // EMAIL ::= AperturaComment COMMENT CierreComment EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // EMAIL ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // EMAIL ::= AperturaLink Url LINK CierreLink EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // EMAIL ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // EMAIL ::= Texto EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // PHONE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PHONE ::= AperturaComment COMMENT CierreComment PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PHONE ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PHONE ::= AperturaLink Url LINK CierreLink PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PHONE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PHONE ::= Texto PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // STATE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // STATE ::= AperturaComment COMMENT CierreComment STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // STATE ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // STATE ::= AperturaLink Url LINK CierreLink STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // STATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // STATE ::= Texto STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // CITY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // CITY ::= AperturaComment COMMENT CierreComment CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // CITY ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // CITY ::= AperturaLink Url LINK CierreLink CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // CITY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // CITY ::= Texto CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // STREET ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // STREET ::= AperturaComment COMMENT CierreComment STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // STREET ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // STREET ::= AperturaLink Url LINK CierreLink STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // STREET ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // STREET ::= Texto STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ADDRESS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ADDRESS ::= AperturaEmail EMAIL CierreEmail ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ADDRESS ::= AperturaPhone PHONE CierrePhone 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ADDRESS ::= AperturaPhone PHONE CierrePhone ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ADDRESS ::= AperturaState STATE CierreState 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ADDRESS ::= AperturaState STATE CierreState ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ADDRESS ::= AperturaCity CITY CierreCity 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ADDRESS ::= AperturaCity CITY CierreCity ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ADDRESS ::= AperturaStreet STREET CierreStreet 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ADDRESS ::= AperturaStreet STREET CierreStreet ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ADDRESS ::= Texto ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ADDRESS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // AUTHOR ::= AperturaSurname SURNAME CierreSurname 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // AUTHOR ::= AperturaSurname SURNAME CierreSurname AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DATE ::= AperturaComment COMMENT CierreComment DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // DATE ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DATE ::= AperturaLink Url LINK CierreLink DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DATE ::= Texto DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // TITULO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // TITULO ::= AperturaEmail EMAIL CierreEmail TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // TITULO ::= AperturaLink Url LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // TITULO ::= AperturaLink Url LINK CierreLink TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TITULO ::= Texto TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TITULO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // INFORMACION ::= AperturaDate DATE CierreDate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INFORMACION ::= AperturaDate DATE CierreDate INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ENCABEZADOSECTION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ENCABEZADOSECTION ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ENCABEZADOSECTION ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ENCABEZADO ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // CONTENIDO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // CONTENIDO ::= AperturaComment COMMENT CierreComment CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONTENIDO ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTENIDO ::= AperturaPara PARRAFO CierrePara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NSECTION ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // NSECTION ::= ENCABEZADOSECTION CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NSECTION ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // NSECTION ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NSECTION ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SECTSIMPLE ::= AperturaSimpleSect CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SECTSIMPLE ::= AperturaSimpleSect CONTENIDO CierreSimpleSect SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SECTSIMPLE ::= AperturaSimpleSect ENCABEZADOSECTION CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SECTSIMPLE ::= AperturaSimpleSect ENCABEZADOSECTION CONTENIDO CierreSimpleSect SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-4)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SECCION ::= AperturaSection NSECTION CierreSection 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SECCION ::= AperturaSection NSECTION CierreSection SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ARTICULO ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ARTICULO ::= ENCABEZADO CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ARTICULO ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ARTICULO ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ARTICULO ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARTICULO ::= ENCABEZADO CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= EncabezadoXML AperturaArticulo ARTICULO CierreArticulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

