
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Sun Jun 25 21:25:00 ART 2023
//----------------------------------------------------

package code;

import java_cup.runtime.*;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Sun Jun 25 21:25:00 ART 2023
  */
public class Sintax extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public Sintax() {super();}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Sintax(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u015b\000\002\002\004\000\002\002\006\000\002\003" +
    "\006\000\002\003\005\000\002\003\005\000\002\003\005" +
    "\000\002\003\004\000\002\003\004\000\002\003\003\000" +
    "\002\061\002\000\002\007\006\000\002\010\006\000\002" +
    "\010\005\000\002\011\006\000\002\011\005\000\002\011" +
    "\005\000\002\011\005\000\002\011\004\000\002\011\004" +
    "\000\002\011\003\000\002\005\006\000\002\005\005\000" +
    "\002\005\006\000\002\005\005\000\002\005\006\000\002" +
    "\005\005\000\002\005\006\000\002\005\005\000\002\005" +
    "\006\000\002\005\005\000\002\005\006\000\002\005\005" +
    "\000\002\005\006\000\002\005\005\000\002\005\006\000" +
    "\002\005\005\000\002\005\006\000\002\005\005\000\002" +
    "\004\005\000\002\004\010\000\002\004\005\000\002\006" +
    "\005\000\002\006\010\000\002\006\005\000\002\012\006" +
    "\000\002\012\005\000\002\012\006\000\002\012\005\000" +
    "\002\012\006\000\002\012\005\000\002\012\006\000\002" +
    "\012\005\000\002\012\006\000\002\012\005\000\002\012" +
    "\006\000\002\012\005\000\002\012\006\000\002\012\005" +
    "\000\002\013\003\000\002\013\004\000\002\013\006\000" +
    "\002\013\005\000\002\013\006\000\002\013\005\000\002" +
    "\013\006\000\002\013\005\000\002\014\004\000\002\014" +
    "\003\000\002\014\006\000\002\014\005\000\002\014\006" +
    "\000\002\014\005\000\002\014\006\000\002\022\006\000" +
    "\002\022\005\000\002\022\006\000\002\022\005\000\002" +
    "\023\003\000\002\023\004\000\002\023\006\000\002\023" +
    "\005\000\002\023\006\000\002\023\005\000\002\023\006" +
    "\000\002\023\005\000\002\023\006\000\002\023\005\000" +
    "\002\023\006\000\002\023\005\000\002\036\004\000\002" +
    "\036\003\000\002\036\006\000\002\036\005\000\002\036" +
    "\006\000\002\036\005\000\002\036\006\000\002\036\005" +
    "\000\002\037\004\000\002\037\003\000\002\037\006\000" +
    "\002\037\005\000\002\037\006\000\002\037\005\000\002" +
    "\037\006\000\002\037\005\000\002\040\004\000\002\040" +
    "\003\000\002\040\006\000\002\040\005\000\002\040\006" +
    "\000\002\040\005\000\002\040\006\000\002\040\005\000" +
    "\002\041\004\000\002\041\003\000\002\041\006\000\002" +
    "\041\005\000\002\041\006\000\002\041\005\000\002\041" +
    "\006\000\002\041\005\000\002\026\004\000\002\026\003" +
    "\000\002\026\006\000\002\026\005\000\002\026\006\000" +
    "\002\026\005\000\002\026\006\000\002\026\005\000\002" +
    "\042\004\000\002\042\003\000\002\042\006\000\002\042" +
    "\005\000\002\042\006\000\002\042\005\000\002\042\006" +
    "\000\002\042\005\000\002\043\004\000\002\043\003\000" +
    "\002\043\006\000\002\043\005\000\002\043\006\000\002" +
    "\043\005\000\002\043\006\000\002\043\005\000\002\027" +
    "\004\000\002\027\003\000\002\027\006\000\002\027\005" +
    "\000\002\027\006\000\002\027\005\000\002\027\006\000" +
    "\002\027\005\000\002\020\006\000\002\020\006\000\002" +
    "\020\005\000\002\020\006\000\002\020\005\000\002\021" +
    "\006\000\002\021\005\000\002\021\006\000\002\021\005" +
    "\000\002\015\005\000\002\015\006\000\002\015\006\000" +
    "\002\031\006\000\002\031\005\000\002\030\004\000\002" +
    "\030\003\000\002\030\006\000\002\030\005\000\002\030" +
    "\006\000\002\030\005\000\002\030\006\000\002\030\005" +
    "\000\002\016\006\000\002\016\006\000\002\016\005\000" +
    "\002\016\006\000\002\016\005\000\002\017\006\000\002" +
    "\017\005\000\002\017\006\000\002\017\005\000\002\033" +
    "\006\000\002\033\003\000\002\032\006\000\002\032\003" +
    "\000\002\024\006\000\002\024\005\000\002\024\006\000" +
    "\002\024\005\000\002\024\006\000\002\024\005\000\002" +
    "\024\006\000\002\024\005\000\002\024\006\000\002\024" +
    "\005\000\002\024\004\000\002\024\003\000\002\034\006" +
    "\000\002\034\005\000\002\034\006\000\002\034\005\000" +
    "\002\034\006\000\002\034\005\000\002\034\006\000\002" +
    "\034\005\000\002\034\006\000\002\034\005\000\002\034" +
    "\004\000\002\034\003\000\002\034\006\000\002\034\005" +
    "\000\002\034\006\000\002\034\005\000\002\034\006\000" +
    "\002\034\005\000\002\034\006\000\002\034\005\000\002" +
    "\034\006\000\002\034\005\000\002\035\006\000\002\035" +
    "\005\000\002\035\006\000\002\035\005\000\002\035\006" +
    "\000\002\035\005\000\002\035\006\000\002\035\005\000" +
    "\002\035\006\000\002\035\005\000\002\035\004\000\002" +
    "\035\003\000\002\050\006\000\002\050\005\000\002\050" +
    "\006\000\002\050\005\000\002\050\006\000\002\050\005" +
    "\000\002\050\006\000\002\050\005\000\002\050\006\000" +
    "\002\050\005\000\002\050\004\000\002\050\003\000\002" +
    "\025\006\000\002\025\005\000\002\025\006\000\002\025" +
    "\005\000\002\025\006\000\002\025\005\000\002\025\006" +
    "\000\002\025\005\000\002\025\006\000\002\025\005\000" +
    "\002\025\004\000\002\025\003\000\002\044\006\000\002" +
    "\044\005\000\002\051\006\000\002\051\005\000\002\051" +
    "\006\000\002\051\005\000\002\051\006\000\002\051\005" +
    "\000\002\051\006\000\002\051\005\000\002\051\006\000" +
    "\002\051\005\000\002\051\006\000\002\051\005\000\002" +
    "\051\006\000\002\051\005\000\002\051\006\000\002\051" +
    "\005\000\002\051\006\000\002\051\005\000\002\045\006" +
    "\000\002\045\006\000\002\045\005\000\002\045\006\000" +
    "\002\045\005\000\002\045\006\000\002\045\005\000\002" +
    "\045\006\000\002\045\005\000\002\045\006\000\002\045" +
    "\005\000\002\045\006\000\002\045\005\000\002\045\006" +
    "\000\002\045\005\000\002\045\006\000\002\045\005\000" +
    "\002\045\006\000\002\045\005\000\002\046\006\000\002" +
    "\046\005\000\002\046\006\000\002\046\005\000\002\046" +
    "\006\000\002\046\005\000\002\046\006\000\002\046\005" +
    "\000\002\046\006\000\002\046\005\000\002\046\006\000" +
    "\002\046\005\000\002\046\006\000\002\046\005\000\002" +
    "\046\006\000\002\046\005\000\002\046\006\000\002\046" +
    "\005\000\002\047\006\000\002\047\005\000\002\047\006" +
    "\000\002\047\005\000\002\052\013\000\002\052\010\000" +
    "\002\052\005\000\002\053\005\000\002\054\005\000\002" +
    "\055\005\000\002\056\006\000\002\056\005\000\002\056" +
    "\006\000\002\056\005\000\002\057\003\000\002\057\004" +
    "\000\002\057\006\000\002\057\005\000\002\057\006\000" +
    "\002\057\005\000\002\057\006\000\002\057\005\000\002" +
    "\057\006\000\002\057\005\000\002\057\006\000\002\057" +
    "\005\000\002\057\006\000\002\057\005\000\002\057\006" +
    "\000\002\057\005\000\002\060\010\000\002\060\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02b0\000\004\124\005\001\002\000\004\002\u02b2\001" +
    "\002\000\004\030\006\001\002\000\030\005\007\011\024" +
    "\013\017\015\016\017\020\021\013\023\023\025\022\032" +
    "\014\034\010\121\021\001\002\000\006\011\u01c7\072\u01c8" +
    "\001\002\000\010\015\u0141\017\u0142\121\u0143\001\002\000" +
    "\024\005\007\011\024\013\017\015\016\017\020\021\013" +
    "\023\023\032\014\034\010\001\002\000\004\031\u02a7\001" +
    "\002\000\026\005\u0198\011\u01a2\013\u019d\015\u019c\017\u019e" +
    "\021\u019a\023\u01a1\032\u019b\034\u0199\121\u01a0\001\002\000" +
    "\016\032\111\040\113\054\115\066\107\070\114\120\112" +
    "\001\002\000\010\027\u0283\031\ufff9\036\u0284\001\002\000" +
    "\016\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180\120\u017e" +
    "\001\002\000\016\044\247\046\246\050\250\052\253\054" +
    "\254\120\251\001\002\000\030\005\u014c\011\u0155\013\u0152" +
    "\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070" +
    "\u0150\120\u014e\001\002\000\012\054\u0134\066\u0130\070\u0133" +
    "\120\u0132\001\002\000\020\007\050\011\045\013\052\034" +
    "\046\040\053\042\051\121\047\001\002\000\004\116\u0160" +
    "\001\002\000\010\025\025\110\027\112\030\001\002\000" +
    "\020\007\050\011\045\013\052\034\046\040\053\042\051" +
    "\121\047\001\002\000\004\010\u026a\001\002\000\006\025" +
    "\040\114\042\001\002\000\006\025\031\115\032\001\002" +
    "\000\020\007\050\011\045\013\052\034\046\040\053\042" +
    "\051\121\047\001\002\000\004\113\uff48\001\002\000\004" +
    "\113\034\001\002\000\010\010\uff4e\110\037\112\036\001" +
    "\002\000\004\010\uff4f\001\002\000\006\025\031\115\032" +
    "\001\002\000\006\025\040\114\042\001\002\000\020\007" +
    "\050\011\045\013\052\034\046\040\053\042\051\121\047" +
    "\001\002\000\004\111\043\001\002\000\004\111\uff46\001" +
    "\002\000\010\010\uff4c\110\037\112\036\001\002\000\004" +
    "\010\uff4d\001\002\000\010\025\025\110\027\112\030\001" +
    "\002\000\010\015\u0141\017\u0142\121\u0143\001\002\000\012" +
    "\054\u0134\066\u0130\070\u0133\120\u0132\001\002\000\012\032" +
    "\u0120\066\u011f\070\u0123\120\u0121\001\002\000\004\062\370" +
    "\001\002\000\016\044\247\046\246\050\250\052\253\054" +
    "\254\120\251\001\002\000\006\056\061\060\060\001\002" +
    "\000\004\024\055\001\002\000\004\114\056\001\002\000" +
    "\004\111\uff47\001\002\000\004\041\244\001\002\000\012" +
    "\032\225\066\223\070\227\120\226\001\002\000\012\032" +
    "\064\066\062\070\066\120\065\001\002\000\016\032\137" +
    "\040\141\054\143\066\135\070\142\120\140\001\002\000" +
    "\004\057\216\001\002\000\016\032\111\040\113\054\115" +
    "\066\107\070\114\120\112\001\002\000\014\032\064\057" +
    "\uff7f\066\062\070\066\120\065\001\002\000\016\032\071" +
    "\040\073\054\075\066\067\070\074\120\072\001\002\000" +
    "\016\032\137\040\141\054\143\066\135\070\142\120\140" +
    "\001\002\000\004\071\205\001\002\000\016\032\111\040" +
    "\113\054\115\066\107\070\114\120\112\001\002\000\020" +
    "\032\071\040\073\054\075\066\067\070\074\071\uff00\120" +
    "\072\001\002\000\006\056\061\060\060\001\002\000\016" +
    "\032\071\040\073\054\075\066\067\070\074\120\072\001" +
    "\002\000\012\032\100\066\076\070\102\120\101\001\002" +
    "\000\016\032\137\040\141\054\143\066\135\070\142\120" +
    "\140\001\002\000\004\055\166\001\002\000\016\032\111" +
    "\040\113\054\115\066\107\070\114\120\112\001\002\000" +
    "\014\032\100\055\uff87\066\076\070\102\120\101\001\002" +
    "\000\016\032\071\040\073\054\075\066\067\070\074\120" +
    "\072\001\002\000\004\071\104\001\002\000\014\032\100" +
    "\055\uff85\066\076\070\102\120\101\001\002\000\004\055" +
    "\uff86\001\002\000\004\055\uff88\001\002\000\016\032\137" +
    "\040\141\054\143\066\135\070\142\120\140\001\002\000" +
    "\004\033\133\001\002\000\016\032\111\040\113\054\115" +
    "\066\107\070\114\120\112\001\002\000\020\032\111\033" +
    "\uff0c\040\113\054\115\066\107\070\114\120\112\001\002" +
    "\000\006\056\061\060\060\001\002\000\016\032\071\040" +
    "\073\054\075\066\067\070\074\120\072\001\002\000\012" +
    "\032\100\066\076\070\102\120\101\001\002\000\004\055" +
    "\117\001\002\000\020\032\111\033\uff0e\040\113\054\115" +
    "\066\107\070\114\120\112\001\002\000\004\033\uff0f\001" +
    "\002\000\004\071\122\001\002\000\020\032\111\033\uff16" +
    "\040\113\054\115\066\107\070\114\120\112\001\002\000" +
    "\004\033\uff17\001\002\000\004\041\125\001\002\000\020" +
    "\032\111\033\uff10\040\113\054\115\066\107\070\114\120" +
    "\112\001\002\000\004\033\uff11\001\002\000\004\033\uff0d" +
    "\001\002\000\004\033\131\001\002\000\020\032\111\033" +
    "\uff12\040\113\054\115\066\107\070\114\120\112\001\002" +
    "\000\004\033\uff13\001\002\000\014\032\100\055\uff81\066" +
    "\076\070\102\120\101\001\002\000\004\055\uff82\001\002" +
    "\000\016\032\137\040\141\054\143\066\135\070\142\120" +
    "\140\001\002\000\004\067\161\001\002\000\016\032\111" +
    "\040\113\054\115\066\107\070\114\120\112\001\002\000" +
    "\020\032\137\040\141\054\143\066\135\067\uff3a\070\142" +
    "\120\140\001\002\000\006\056\061\060\060\001\002\000" +
    "\016\032\071\040\073\054\075\066\067\070\074\120\072" +
    "\001\002\000\012\032\100\066\076\070\102\120\101\001" +
    "\002\000\004\055\145\001\002\000\020\032\137\040\141" +
    "\054\143\066\135\067\uff3c\070\142\120\140\001\002\000" +
    "\004\067\uff3d\001\002\000\004\071\150\001\002\000\020" +
    "\032\137\040\141\054\143\066\135\067\uff44\070\142\120" +
    "\140\001\002\000\004\067\uff45\001\002\000\004\041\153" +
    "\001\002\000\020\032\137\040\141\054\143\066\135\067" +
    "\uff3e\070\142\120\140\001\002\000\004\067\uff3f\001\002" +
    "\000\004\067\uff3b\001\002\000\004\033\157\001\002\000" +
    "\020\032\137\040\141\054\143\066\135\067\uff40\070\142" +
    "\120\140\001\002\000\004\067\uff41\001\002\000\020\032" +
    "\111\033\uff14\040\113\054\115\066\107\070\114\120\112" +
    "\001\002\000\004\033\uff15\001\002\000\004\067\164\001" +
    "\002\000\020\032\137\040\141\054\143\066\135\067\uff42" +
    "\070\142\120\140\001\002\000\004\067\uff43\001\002\000" +
    "\020\032\071\040\073\054\075\066\067\070\074\071\uff02" +
    "\120\072\001\002\000\004\071\uff03\001\002\000\004\067" +
    "\171\001\002\000\014\032\100\055\uff83\066\076\070\102" +
    "\120\101\001\002\000\004\055\uff84\001\002\000\004\071" +
    "\174\001\002\000\020\032\071\040\073\054\075\066\067" +
    "\070\074\071\uff0a\120\072\001\002\000\004\071\uff0b\001" +
    "\002\000\004\041\177\001\002\000\020\032\071\040\073" +
    "\054\075\066\067\070\074\071\uff04\120\072\001\002\000" +
    "\004\071\uff05\001\002\000\004\071\uff01\001\002\000\004" +
    "\033\203\001\002\000\020\032\071\040\073\054\075\066" +
    "\067\070\074\071\uff06\120\072\001\002\000\004\071\uff07" +
    "\001\002\000\014\032\064\057\uff7d\066\062\070\066\120" +
    "\065\001\002\000\004\057\uff7e\001\002\000\004\067\210" +
    "\001\002\000\020\032\071\040\073\054\075\066\067\070" +
    "\074\071\uff08\120\072\001\002\000\004\071\uff09\001\002" +
    "\000\004\057\uff80\001\002\000\004\033\214\001\002\000" +
    "\014\032\064\057\uff79\066\062\070\066\120\065\001\002" +
    "\000\004\057\uff7a\001\002\000\010\041\uffb7\056\061\060" +
    "\060\001\002\000\004\041\uffb8\001\002\000\004\067\221" +
    "\001\002\000\014\032\064\057\uff7b\066\062\070\066\120" +
    "\065\001\002\000\004\057\uff7c\001\002\000\016\032\137" +
    "\040\141\054\143\066\135\070\142\120\140\001\002\000" +
    "\004\061\237\001\002\000\016\032\111\040\113\054\115" +
    "\066\107\070\114\120\112\001\002\000\014\032\225\061" +
    "\uff77\066\223\070\227\120\226\001\002\000\016\032\071" +
    "\040\073\054\075\066\067\070\074\120\072\001\002\000" +
    "\004\071\231\001\002\000\014\032\225\061\uff75\066\223" +
    "\070\227\120\226\001\002\000\004\061\uff76\001\002\000" +
    "\004\061\uff78\001\002\000\004\033\235\001\002\000\014" +
    "\032\225\061\uff71\066\223\070\227\120\226\001\002\000" +
    "\004\061\uff72\001\002\000\010\041\uffb5\056\061\060\060" +
    "\001\002\000\004\041\uffb6\001\002\000\004\067\242\001" +
    "\002\000\014\032\225\061\uff73\066\223\070\227\120\226" +
    "\001\002\000\004\061\uff74\001\002\000\022\007\050\011" +
    "\045\013\052\024\uffce\034\046\040\053\042\051\121\047" +
    "\001\002\000\004\024\uffcf\001\002\000\012\032\350\066" +
    "\346\070\352\120\351\001\002\000\012\032\326\066\325" +
    "\070\330\120\327\001\002\000\012\032\305\066\304\070" +
    "\310\120\306\001\002\000\020\012\uffb4\044\247\046\246" +
    "\050\250\052\253\054\254\120\251\001\002\000\004\012" +
    "\301\001\002\000\012\032\262\066\260\070\264\120\263" +
    "\001\002\000\012\032\100\066\076\070\102\120\101\001" +
    "\002\000\004\055\256\001\002\000\020\012\uffa9\044\247" +
    "\046\246\050\250\052\253\054\254\120\251\001\002\000" +
    "\004\012\uffaa\001\002\000\016\032\137\040\141\054\143" +
    "\066\135\070\142\120\140\001\002\000\004\053\274\001" +
    "\002\000\016\032\111\040\113\054\115\066\107\070\114" +
    "\120\112\001\002\000\014\032\262\053\uff8f\066\260\070" +
    "\264\120\263\001\002\000\016\032\071\040\073\054\075" +
    "\066\067\070\074\120\072\001\002\000\004\071\266\001" +
    "\002\000\014\032\262\053\uff8d\066\260\070\264\120\263" +
    "\001\002\000\004\053\uff8e\001\002\000\004\053\uff90\001" +
    "\002\000\004\033\272\001\002\000\014\032\262\053\uff89" +
    "\066\260\070\264\120\263\001\002\000\004\053\uff8a\001" +
    "\002\000\020\012\uffab\044\247\046\246\050\250\052\253" +
    "\054\254\120\251\001\002\000\004\012\uffac\001\002\000" +
    "\004\067\277\001\002\000\014\032\262\053\uff8b\066\260" +
    "\070\264\120\263\001\002\000\004\053\uff8c\001\002\000" +
    "\022\007\050\011\045\013\052\024\uffd0\034\046\040\053" +
    "\042\051\121\047\001\002\000\004\024\uffd1\001\002\000" +
    "\004\012\uffb3\001\002\000\016\032\137\040\141\054\143" +
    "\066\135\070\142\120\140\001\002\000\016\032\111\040" +
    "\113\054\115\066\107\070\114\120\112\001\002\000\014" +
    "\032\305\051\uff97\066\304\070\310\120\306\001\002\000" +
    "\004\051\314\001\002\000\016\032\071\040\073\054\075" +
    "\066\067\070\074\120\072\001\002\000\004\071\312\001" +
    "\002\000\014\032\305\051\uff95\066\304\070\310\120\306" +
    "\001\002\000\004\051\uff96\001\002\000\020\012\uffad\044" +
    "\247\046\246\050\250\052\253\054\254\120\251\001\002" +
    "\000\004\012\uffae\001\002\000\004\051\uff98\001\002\000" +
    "\004\033\320\001\002\000\014\032\305\051\uff91\066\304" +
    "\070\310\120\306\001\002\000\004\051\uff92\001\002\000" +
    "\004\067\323\001\002\000\014\032\305\051\uff93\066\304" +
    "\070\310\120\306\001\002\000\004\051\uff94\001\002\000" +
    "\016\032\137\040\141\054\143\066\135\070\142\120\140" +
    "\001\002\000\016\032\111\040\113\054\115\066\107\070" +
    "\114\120\112\001\002\000\014\032\326\045\uffa7\066\325" +
    "\070\330\120\327\001\002\000\016\032\071\040\073\054" +
    "\075\066\067\070\074\120\072\001\002\000\004\045\332" +
    "\001\002\000\020\012\uffb1\044\247\046\246\050\250\052" +
    "\253\054\254\120\251\001\002\000\004\012\uffb2\001\002" +
    "\000\004\071\335\001\002\000\014\032\326\045\uffa5\066" +
    "\325\070\330\120\327\001\002\000\004\045\uffa6\001\002" +
    "\000\004\045\uffa8\001\002\000\004\033\341\001\002\000" +
    "\014\032\326\045\uffa1\066\325\070\330\120\327\001\002" +
    "\000\004\045\uffa2\001\002\000\004\067\344\001\002\000" +
    "\014\032\326\045\uffa3\066\325\070\330\120\327\001\002" +
    "\000\004\045\uffa4\001\002\000\016\032\137\040\141\054" +
    "\143\066\135\070\142\120\140\001\002\000\004\047\362" +
    "\001\002\000\016\032\111\040\113\054\115\066\107\070" +
    "\114\120\112\001\002\000\014\032\350\047\uff9f\066\346" +
    "\070\352\120\351\001\002\000\016\032\071\040\073\054" +
    "\075\066\067\070\074\120\072\001\002\000\004\071\354" +
    "\001\002\000\014\032\350\047\uff9d\066\346\070\352\120" +
    "\351\001\002\000\004\047\uff9e\001\002\000\004\047\uffa0" +
    "\001\002\000\004\033\360\001\002\000\014\032\350\047" +
    "\uff99\066\346\070\352\120\351\001\002\000\004\047\uff9a" +
    "\001\002\000\020\012\uffaf\044\247\046\246\050\250\052" +
    "\253\054\254\120\251\001\002\000\004\012\uffb0\001\002" +
    "\000\004\067\365\001\002\000\014\032\350\047\uff9b\066" +
    "\346\070\352\120\351\001\002\000\004\047\uff9c\001\002" +
    "\000\004\043\u011d\001\002\000\012\032\372\066\371\070" +
    "\374\120\373\001\002\000\016\032\137\040\141\054\143" +
    "\066\135\070\142\120\140\001\002\000\016\032\111\040" +
    "\113\054\115\066\107\070\114\120\112\001\002\000\014" +
    "\032\372\063\uff6f\066\371\070\374\120\373\001\002\000" +
    "\016\032\071\040\073\054\075\066\067\070\074\120\072" +
    "\001\002\000\004\063\376\001\002\000\010\043\uff5f\062" +
    "\370\064\u0101\001\002\000\004\043\uff5e\001\002\000\004" +
    "\043\uff5d\001\002\000\012\032\u0104\066\u0102\070\u0106\120" +
    "\u0105\001\002\000\016\032\137\040\141\054\143\066\135" +
    "\070\142\120\140\001\002\000\004\065\u010e\001\002\000" +
    "\016\032\111\040\113\054\115\066\107\070\114\120\112" +
    "\001\002\000\014\032\u0104\065\uff59\066\u0102\070\u0106\120" +
    "\u0105\001\002\000\016\032\071\040\073\054\075\066\067" +
    "\070\074\120\072\001\002\000\004\071\u0108\001\002\000" +
    "\014\032\u0104\065\uff57\066\u0102\070\u0106\120\u0105\001\002" +
    "\000\004\065\uff58\001\002\000\004\065\uff5a\001\002\000" +
    "\004\033\u010c\001\002\000\014\032\u0104\065\uff53\066\u0102" +
    "\070\u0106\120\u0105\001\002\000\004\065\uff54\001\002\000" +
    "\006\043\uff5b\064\u0101\001\002\000\004\043\uff5c\001\002" +
    "\000\004\067\u0111\001\002\000\014\032\u0104\065\uff55\066" +
    "\u0102\070\u0106\120\u0105\001\002\000\004\065\uff56\001\002" +
    "\000\004\071\u0114\001\002\000\014\032\372\063\uff6d\066" +
    "\371\070\374\120\373\001\002\000\004\063\uff6e\001\002" +
    "\000\004\063\uff70\001\002\000\004\033\u0118\001\002\000" +
    "\014\032\372\063\uff69\066\371\070\374\120\373\001\002" +
    "\000\004\063\uff6a\001\002\000\004\067\u011b\001\002\000" +
    "\014\032\372\063\uff6b\066\371\070\374\120\373\001\002" +
    "\000\004\063\uff6c\001\002\000\022\007\050\011\045\013" +
    "\052\024\uffca\034\046\040\053\042\051\121\047\001\002" +
    "\000\004\024\uffcb\001\002\000\016\032\137\040\141\054" +
    "\143\066\135\070\142\120\140\001\002\000\016\032\111" +
    "\040\113\054\115\066\107\070\114\120\112\001\002\000" +
    "\014\006\uffbe\032\u0120\066\u011f\070\u0123\120\u0121\001\002" +
    "\000\004\006\u0127\001\002\000\016\032\071\040\073\054" +
    "\075\066\067\070\074\120\072\001\002\000\004\071\u0125" +
    "\001\002\000\014\006\uffbc\032\u0120\066\u011f\070\u0123\120" +
    "\u0121\001\002\000\004\006\uffbd\001\002\000\022\007\050" +
    "\011\045\013\052\024\uffcc\034\046\040\053\042\051\121" +
    "\047\001\002\000\004\024\uffcd\001\002\000\004\006\uffbf" +
    "\001\002\000\004\033\u012b\001\002\000\012\032\u0120\066" +
    "\u011f\070\u0123\120\u0121\001\002\000\004\006\uffb9\001\002" +
    "\000\004\067\u012e\001\002\000\014\006\uffba\032\u0120\066" +
    "\u011f\070\u0123\120\u0121\001\002\000\004\006\uffbb\001\002" +
    "\000\016\032\137\040\141\054\143\066\135\070\142\120" +
    "\140\001\002\000\004\122\u013c\001\002\000\014\054\u0134" +
    "\066\u0130\070\u0133\120\u0132\122\uffc7\001\002\000\016\032" +
    "\071\040\073\054\075\066\067\070\074\120\072\001\002" +
    "\000\012\032\100\066\076\070\102\120\101\001\002\000" +
    "\004\055\u0136\001\002\000\014\054\u0134\066\u0130\070\u0133" +
    "\120\u0132\122\uffc0\001\002\000\004\122\uffc1\001\002\000" +
    "\004\071\u0139\001\002\000\014\054\u0134\066\u0130\070\u0133" +
    "\120\u0132\122\uffc2\001\002\000\004\122\uffc3\001\002\000" +
    "\004\122\uffc6\001\002\000\022\007\050\011\045\013\052" +
    "\024\uffc8\034\046\040\053\042\051\121\047\001\002\000" +
    "\004\024\uffc9\001\002\000\004\067\u013f\001\002\000\014" +
    "\054\u0134\066\u0130\070\u0133\120\u0132\122\uffc4\001\002\000" +
    "\004\122\uffc5\001\002\000\016\032\u017d\040\u017f\054\u0181" +
    "\066\u017c\070\u0180\120\u017e\001\002\000\030\005\u014c\011" +
    "\u0155\013\u0152\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151" +
    "\066\u0153\070\u0150\120\u014e\001\002\000\012\054\u0134\066" +
    "\u0130\070\u0133\120\u0132\001\002\000\004\035\u0145\001\002" +
    "\000\022\007\050\011\045\013\052\024\uffd2\034\046\040" +
    "\053\042\051\121\047\001\002\000\004\024\uffd3\001\002" +
    "\000\004\122\u0148\001\002\000\006\015\u0149\017\u014a\001" +
    "\002\000\016\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180" +
    "\120\u017e\001\002\000\030\005\u014c\011\u0155\013\u0152\021" +
    "\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070\u0150" +
    "\120\u014e\001\002\000\004\035\uff68\001\002\000\006\011" +
    "\u01c7\072\u01c8\001\002\000\026\005\u0198\011\u01a2\013\u019d" +
    "\015\u019c\017\u019e\021\u019a\023\u01a1\032\u019b\034\u0199\121" +
    "\u01a0\001\002\000\032\005\u014c\011\u0155\013\u0152\016\uff2e" +
    "\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070" +
    "\u0150\120\u014e\001\002\000\016\032\111\040\113\054\115" +
    "\066\107\070\114\120\112\001\002\000\016\032\071\040" +
    "\073\054\075\066\067\070\074\120\072\001\002\000\012" +
    "\032\100\066\076\070\102\120\101\001\002\000\016\044" +
    "\247\046\246\050\250\052\253\054\254\120\251\001\002" +
    "\000\016\032\137\040\141\054\143\066\135\070\142\120" +
    "\140\001\002\000\004\116\u0160\001\002\000\010\025\025" +
    "\110\027\112\030\001\002\000\006\056\061\060\060\001" +
    "\002\000\004\016\u0158\001\002\000\010\015\u0149\017\u014a" +
    "\035\uff62\001\002\000\004\035\uff63\001\002\000\004\041" +
    "\u015b\001\002\000\032\005\u014c\011\u0155\013\u0152\016\uff32" +
    "\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070" +
    "\u0150\120\u014e\001\002\000\004\016\uff33\001\002\000\004" +
    "\010\u015e\001\002\000\032\005\u014c\011\u0155\013\u0152\016" +
    "\uff26\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153" +
    "\070\u0150\120\u014e\001\002\000\004\016\uff27\001\002\000" +
    "\024\005\u0164\011\u016d\013\u0169\015\u0168\017\u016a\021\u0166" +
    "\023\u016c\032\u0167\034\u0165\001\002\000\004\022\u0162\001" +
    "\002\000\032\005\u014c\011\u0155\013\u0152\016\uff2c\021\u014d" +
    "\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070\u0150\120" +
    "\u014e\001\002\000\004\016\uff2d\001\002\000\006\011\u01c7" +
    "\072\u01c8\001\002\000\010\015\u0141\017\u0142\121\u0143\001" +
    "\002\000\026\005\u0198\011\u01a2\013\u019d\015\u019c\017\u019e" +
    "\021\u019a\023\u01a1\032\u019b\034\u0199\121\u01a0\001\002\000" +
    "\016\032\111\040\113\054\115\066\107\070\114\120\112" +
    "\001\002\000\016\032\u017d\040\u017f\054\u0181\066\u017c\070" +
    "\u0180\120\u017e\001\002\000\016\044\247\046\246\050\250" +
    "\052\253\054\254\120\251\001\002\000\030\005\u014c\011" +
    "\u0155\013\u0152\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151" +
    "\066\u0153\070\u0150\120\u014e\001\002\000\004\117\u0174\001" +
    "\002\000\004\116\u0160\001\002\000\010\025\025\110\027" +
    "\112\030\001\002\000\004\010\u016f\001\002\000\026\005" +
    "\u0164\011\u016d\013\u0169\015\u0168\017\u016a\021\u0166\023\u016c" +
    "\032\u0167\034\u0165\117\ufef2\001\002\000\004\117\ufef3\001" +
    "\002\000\004\022\u0172\001\002\000\026\005\u0164\011\u016d" +
    "\013\u0169\015\u0168\017\u016a\021\u0166\023\u016c\032\u0167\034" +
    "\u0165\117\ufefc\001\002\000\004\117\ufefd\001\002\000\006" +
    "\022\ufefe\116\u0160\001\002\000\004\022\ufeff\001\002\000" +
    "\004\016\u0177\001\002\000\026\005\u0164\011\u016d\013\u0169" +
    "\015\u0168\017\u016a\021\u0166\023\u016c\032\u0167\034\u0165\117" +
    "\ufef8\001\002\000\004\117\ufef9\001\002\000\004\012\u017a" +
    "\001\002\000\026\005\u0164\011\u016d\013\u0169\015\u0168\017" +
    "\u016a\021\u0166\023\u016c\032\u0167\034\u0165\117\ufef4\001\002" +
    "\000\004\117\ufef5\001\002\000\016\032\137\040\141\054" +
    "\143\066\135\070\142\120\140\001\002\000\016\032\111" +
    "\040\113\054\115\066\107\070\114\120\112\001\002\000" +
    "\020\014\uff18\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180" +
    "\120\u017e\001\002\000\006\056\061\060\060\001\002\000" +
    "\016\032\071\040\073\054\075\066\067\070\074\120\072" +
    "\001\002\000\012\032\100\066\076\070\102\120\101\001" +
    "\002\000\004\014\u0183\001\002\000\026\005\u0164\011\u016d" +
    "\013\u0169\015\u0168\017\u016a\021\u0166\023\u016c\032\u0167\034" +
    "\u0165\117\ufef6\001\002\000\004\117\ufef7\001\002\000\004" +
    "\055\u0186\001\002\000\020\014\uff1a\032\u017d\040\u017f\054" +
    "\u0181\066\u017c\070\u0180\120\u017e\001\002\000\004\014\uff1b" +
    "\001\002\000\004\071\u0189\001\002\000\020\014\uff22\032" +
    "\u017d\040\u017f\054\u0181\066\u017c\070\u0180\120\u017e\001\002" +
    "\000\004\014\uff23\001\002\000\004\041\u018c\001\002\000" +
    "\020\014\uff1c\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180" +
    "\120\u017e\001\002\000\004\014\uff1d\001\002\000\004\014" +
    "\uff19\001\002\000\004\033\u0190\001\002\000\020\014\uff1e" +
    "\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180\120\u017e\001" +
    "\002\000\004\014\uff1f\001\002\000\004\067\u0193\001\002" +
    "\000\020\014\uff20\032\u017d\040\u017f\054\u0181\066\u017c\070" +
    "\u0180\120\u017e\001\002\000\004\014\uff21\001\002\000\004" +
    "\033\u0196\001\002\000\026\005\u0164\011\u016d\013\u0169\015" +
    "\u0168\017\u016a\021\u0166\023\u016c\032\u0167\034\u0165\117\ufeee" +
    "\001\002\000\004\117\ufeef\001\002\000\006\011\u01c7\072" +
    "\u01c8\001\002\000\010\015\u0141\017\u0142\121\u0143\001\002" +
    "\000\026\005\u0198\011\u01a2\013\u019d\015\u019c\017\u019e\021" +
    "\u019a\023\u01a1\032\u019b\034\u0199\121\u01a0\001\002\000\016" +
    "\032\111\040\113\054\115\066\107\070\114\120\112\001" +
    "\002\000\016\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180" +
    "\120\u017e\001\002\000\016\044\247\046\246\050\250\052" +
    "\253\054\254\120\251\001\002\000\030\005\u014c\011\u0155" +
    "\013\u0152\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066" +
    "\u0153\070\u0150\120\u014e\001\002\000\004\020\u0222\001\002" +
    "\000\012\054\u0134\066\u0130\070\u0133\120\u0132\001\002\000" +
    "\004\116\u0160\001\002\000\010\025\025\110\027\112\030" +
    "\001\002\000\004\010\u01a4\001\002\000\026\005\u01a5\011" +
    "\u01ae\013\u01aa\015\u01a9\017\u01ab\020\ufedd\021\u01a7\023\u01ad" +
    "\032\u01a8\034\u01a6\001\002\000\006\011\u01c7\072\u01c8\001" +
    "\002\000\010\015\u0141\017\u0142\121\u0143\001\002\000\026" +
    "\005\u0198\011\u01a2\013\u019d\015\u019c\017\u019e\021\u019a\023" +
    "\u01a1\032\u019b\034\u0199\121\u01a0\001\002\000\016\032\111" +
    "\040\113\054\115\066\107\070\114\120\112\001\002\000" +
    "\016\032\u017d\040\u017f\054\u0181\066\u017c\070\u0180\120\u017e" +
    "\001\002\000\016\044\247\046\246\050\250\052\253\054" +
    "\254\120\251\001\002\000\030\005\u014c\011\u0155\013\u0152" +
    "\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070" +
    "\u0150\120\u014e\001\002\000\004\020\ufede\001\002\000\004" +
    "\116\u0160\001\002\000\010\025\025\110\027\112\030\001" +
    "\002\000\004\010\u01b0\001\002\000\026\005\u01a5\011\u01ae" +
    "\013\u01aa\015\u01a9\017\u01ab\020\ufecb\021\u01a7\023\u01ad\032" +
    "\u01a8\034\u01a6\001\002\000\004\020\ufecc\001\002\000\004" +
    "\022\u01b3\001\002\000\026\005\u01a5\011\u01ae\013\u01aa\015" +
    "\u01a9\017\u01ab\020\ufed5\021\u01a7\023\u01ad\032\u01a8\034\u01a6" +
    "\001\002\000\004\020\ufed6\001\002\000\004\016\u01b6\001" +
    "\002\000\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab" +
    "\020\ufed1\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001\002\000" +
    "\004\020\ufed2\001\002\000\004\012\u01b9\001\002\000\026" +
    "\005\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab\020\ufed7\021" +
    "\u01a7\023\u01ad\032\u01a8\034\u01a6\001\002\000\004\020\ufed8" +
    "\001\002\000\004\014\u01bc\001\002\000\026\005\u01a5\011" +
    "\u01ae\013\u01aa\015\u01a9\017\u01ab\020\ufecf\021\u01a7\023\u01ad" +
    "\032\u01a8\034\u01a6\001\002\000\004\020\ufed0\001\002\000" +
    "\004\033\u01bf\001\002\000\026\005\u01a5\011\u01ae\013\u01aa" +
    "\015\u01a9\017\u01ab\020\ufec9\021\u01a7\023\u01ad\032\u01a8\034" +
    "\u01a6\001\002\000\004\020\ufeca\001\002\000\004\020\u01c2" +
    "\001\002\000\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9\017" +
    "\u01ab\020\ufed3\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001\002" +
    "\000\004\020\ufed4\001\002\000\004\035\u01c5\001\002\000" +
    "\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab\020\ufecd" +
    "\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001\002\000\004\020" +
    "\ufece\001\002\000\010\025\025\110\027\112\030\001\002" +
    "\000\010\074\u01cc\076\u01cd\100\u01cf\001\002\000\004\004" +
    "\u01ca\001\002\000\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9" +
    "\017\u01ab\020\ufec7\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001" +
    "\002\000\004\020\ufec8\001\002\000\004\102\u01da\001\002" +
    "\000\004\102\u0209\001\002\000\004\073\u0207\001\002\000" +
    "\004\102\u01d1\001\002\000\004\101\u0206\001\002\000\006" +
    "\104\u01d2\106\u01d4\001\002\000\022\011\u01ed\015\u01e9\017" +
    "\u01eb\021\u01e6\023\u01ec\032\u01e8\034\u01e5\120\u01e7\001\002" +
    "\000\004\103\u01e4\001\002\000\006\074\u01d6\100\u01d7\001" +
    "\002\000\004\107\u01e2\001\002\000\004\102\u01da\001\002" +
    "\000\004\102\u01d1\001\002\000\004\101\u01d9\001\002\000" +
    "\004\107\ufea7\001\002\000\006\104\u01d2\106\u01d4\001\002" +
    "\000\004\075\u01dc\001\002\000\004\100\u01dd\001\002\000" +
    "\004\102\u01d1\001\002\000\004\101\u01df\001\002\000\004" +
    "\107\ufea8\001\002\000\004\103\u01e1\001\002\000\004\075" +
    "\ufebf\001\002\000\010\103\ufeb9\104\u01d2\106\u01d4\001\002" +
    "\000\004\103\ufeba\001\002\000\004\101\ufebd\001\002\000" +
    "\010\015\u0141\017\u0142\121\u0143\001\002\000\026\005\u0198" +
    "\011\u01a2\013\u019d\015\u019c\017\u019e\021\u019a\023\u01a1\032" +
    "\u019b\034\u0199\121\u01a0\001\002\000\024\011\u01ed\015\u01e9" +
    "\017\u01eb\021\u01e6\023\u01ec\032\u01e8\034\u01e5\105\ufeb8\120" +
    "\u01e7\001\002\000\016\032\111\040\113\054\115\066\107" +
    "\070\114\120\112\001\002\000\016\032\u017d\040\u017f\054" +
    "\u0181\066\u017c\070\u0180\120\u017e\001\002\000\004\105\u01f7" +
    "\001\002\000\030\005\u014c\011\u0155\013\u0152\021\u014d\023" +
    "\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070\u0150\120\u014e" +
    "\001\002\000\004\116\u0160\001\002\000\010\025\025\110" +
    "\027\112\030\001\002\000\004\010\u01ef\001\002\000\024" +
    "\011\u01ed\015\u01e9\017\u01eb\021\u01e6\023\u01ec\032\u01e8\034" +
    "\u01e5\105\ufead\120\u01e7\001\002\000\004\105\ufeae\001\002" +
    "\000\004\022\u01f2\001\002\000\024\011\u01ed\015\u01e9\017" +
    "\u01eb\021\u01e6\023\u01ec\032\u01e8\034\u01e5\105\ufeb5\120\u01e7" +
    "\001\002\000\004\105\ufeb6\001\002\000\004\016\u01f5\001" +
    "\002\000\024\011\u01ed\015\u01e9\017\u01eb\021\u01e6\023\u01ec" +
    "\032\u01e8\034\u01e5\105\ufeb1\120\u01e7\001\002\000\004\105" +
    "\ufeb2\001\002\000\010\103\ufebb\104\u01d2\106\u01d4\001\002" +
    "\000\004\103\ufebc\001\002\000\004\014\u01fa\001\002\000" +
    "\024\011\u01ed\015\u01e9\017\u01eb\021\u01e6\023\u01ec\032\u01e8" +
    "\034\u01e5\105\ufeaf\120\u01e7\001\002\000\004\105\ufeb0\001" +
    "\002\000\004\033\u01fd\001\002\000\024\011\u01ed\015\u01e9" +
    "\017\u01eb\021\u01e6\023\u01ec\032\u01e8\034\u01e5\105\ufeab\120" +
    "\u01e7\001\002\000\004\105\ufeac\001\002\000\004\105\ufeb7" +
    "\001\002\000\004\020\u0201\001\002\000\024\011\u01ed\015" +
    "\u01e9\017\u01eb\021\u01e6\023\u01ec\032\u01e8\034\u01e5\105\ufeb3" +
    "\120\u01e7\001\002\000\004\105\ufeb4\001\002\000\004\035" +
    "\u0204\001\002\000\024\011\u01ed\015\u01e9\017\u01eb\021\u01e6" +
    "\023\u01ec\032\u01e8\034\u01e5\105\ufea9\120\u01e7\001\002\000" +
    "\004\105\ufeaa\001\002\000\004\073\ufec0\001\002\000\010" +
    "\004\ufec5\011\u01c7\072\u01c8\001\002\000\004\004\ufec6\001" +
    "\002\000\006\104\u01d2\106\u01d4\001\002\000\004\077\u020b" +
    "\001\002\000\004\100\u020c\001\002\000\004\102\u01d1\001" +
    "\002\000\004\101\u020e\001\002\000\004\073\ufec1\001\002" +
    "\000\004\103\u0210\001\002\000\004\077\ufebe\001\002\000" +
    "\004\075\u0212\001\002\000\004\076\u0213\001\002\000\004" +
    "\102\u0209\001\002\000\004\077\u0215\001\002\000\004\100" +
    "\u0216\001\002\000\004\102\u01d1\001\002\000\004\101\u0218" +
    "\001\002\000\004\073\ufec2\001\002\000\004\010\u021a\001" +
    "\002\000\010\004\ufec3\011\u01c7\072\u01c8\001\002\000\004" +
    "\004\ufec4\001\002\000\004\022\u021d\001\002\000\026\005" +
    "\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab\020\ufee7\021\u01a7" +
    "\023\u01ad\032\u01a8\034\u01a6\001\002\000\004\020\ufee8\001" +
    "\002\000\004\122\u0220\001\002\000\024\005\u01a5\011\u01ae" +
    "\013\u01aa\015\u01a9\017\u01ab\021\u01a7\023\u01ad\032\u01a8\034" +
    "\u01a6\001\002\000\004\020\ufeeb\001\002\000\026\005\u0164" +
    "\011\u016d\013\u0169\015\u0168\017\u016a\021\u0166\023\u016c\032" +
    "\u0167\034\u0165\117\ufefa\001\002\000\004\117\ufefb\001\002" +
    "\000\004\016\u0225\001\002\000\026\005\u01a5\011\u01ae\013" +
    "\u01aa\015\u01a9\017\u01ab\020\ufee3\021\u01a7\023\u01ad\032\u01a8" +
    "\034\u01a6\001\002\000\004\020\ufee4\001\002\000\004\012" +
    "\u0228\001\002\000\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9" +
    "\017\u01ab\020\ufee9\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001" +
    "\002\000\004\020\ufeea\001\002\000\004\014\u022b\001\002" +
    "\000\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab\020" +
    "\ufee1\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001\002\000\004" +
    "\020\ufee2\001\002\000\004\033\u022e\001\002\000\026\005" +
    "\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab\020\ufedb\021\u01a7" +
    "\023\u01ad\032\u01a8\034\u01a6\001\002\000\004\020\ufedc\001" +
    "\002\000\004\020\u0231\001\002\000\026\005\u01a5\011\u01ae" +
    "\013\u01aa\015\u01a9\017\u01ab\020\ufee5\021\u01a7\023\u01ad\032" +
    "\u01a8\034\u01a6\001\002\000\004\020\ufee6\001\002\000\004" +
    "\035\u0234\001\002\000\026\005\u01a5\011\u01ae\013\u01aa\015" +
    "\u01a9\017\u01ab\020\ufedf\021\u01a7\023\u01ad\032\u01a8\034\u01a6" +
    "\001\002\000\004\020\ufee0\001\002\000\004\004\u0237\001" +
    "\002\000\026\005\u01a5\011\u01ae\013\u01aa\015\u01a9\017\u01ab" +
    "\020\ufed9\021\u01a7\023\u01ad\032\u01a8\034\u01a6\001\002\000" +
    "\004\020\ufeda\001\002\000\004\035\u023a\001\002\000\026" +
    "\005\u0164\011\u016d\013\u0169\015\u0168\017\u016a\021\u0166\023" +
    "\u016c\032\u0167\034\u0165\117\ufeec\001\002\000\004\117\ufeed" +
    "\001\002\000\004\004\u023d\001\002\000\026\005\u0164\011" +
    "\u016d\013\u0169\015\u0168\017\u016a\021\u0166\023\u016c\032\u0167" +
    "\034\u0165\117\ufef0\001\002\000\004\117\ufef1\001\002\000" +
    "\004\067\u0240\001\002\000\032\005\u014c\011\u0155\013\u0152" +
    "\016\uff36\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066" +
    "\u0153\070\u0150\120\u014e\001\002\000\004\016\uff37\001\002" +
    "\000\004\012\u0243\001\002\000\032\005\u014c\011\u0155\013" +
    "\u0152\016\uff28\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151" +
    "\066\u0153\070\u0150\120\u014e\001\002\000\004\016\uff29\001" +
    "\002\000\004\055\u0246\001\002\000\032\005\u014c\011\u0155" +
    "\013\u0152\016\uff30\021\u014d\023\u0154\032\u014f\040\u0156\054" +
    "\u0151\066\u0153\070\u0150\120\u014e\001\002\000\004\016\uff31" +
    "\001\002\000\004\071\u0249\001\002\000\032\005\u014c\011" +
    "\u0155\013\u0152\016\uff38\021\u014d\023\u0154\032\u014f\040\u0156" +
    "\054\u0151\066\u0153\070\u0150\120\u014e\001\002\000\004\016" +
    "\uff39\001\002\000\004\033\u024c\001\002\000\032\005\u014c" +
    "\011\u0155\013\u0152\016\uff34\021\u014d\023\u0154\032\u014f\040" +
    "\u0156\054\u0151\066\u0153\070\u0150\120\u014e\001\002\000\004" +
    "\016\uff35\001\002\000\004\016\uff2f\001\002\000\004\020" +
    "\u0250\001\002\000\032\005\u014c\011\u0155\013\u0152\016\uff2a" +
    "\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153\070" +
    "\u0150\120\u014e\001\002\000\004\016\uff2b\001\002\000\004" +
    "\004\u0253\001\002\000\032\005\u014c\011\u0155\013\u0152\016" +
    "\uff24\021\u014d\023\u0154\032\u014f\040\u0156\054\u0151\066\u0153" +
    "\070\u0150\120\u014e\001\002\000\004\016\uff25\001\002\000" +
    "\004\014\u0256\001\002\000\010\015\u0149\017\u014a\035\uff60" +
    "\001\002\000\004\035\uff61\001\002\000\004\016\u0259\001" +
    "\002\000\010\015\u0149\017\u014a\035\uff66\001\002\000\004" +
    "\035\uff67\001\002\000\004\014\u025c\001\002\000\010\015" +
    "\u0149\017\u014a\035\uff64\001\002\000\004\035\uff65\001\002" +
    "\000\004\010\u025f\001\002\000\022\007\050\011\045\013" +
    "\052\024\uffd4\034\046\040\053\042\051\121\047\001\002" +
    "\000\004\024\uffd5\001\002\000\004\113\u0262\001\002\000" +
    "\010\010\uff4a\110\037\112\036\001\002\000\004\010\uff4b" +
    "\001\002\000\004\024\u0265\001\002\000\004\115\u0266\001" +
    "\002\000\004\113\uff49\001\002\000\004\111\u0268\001\002" +
    "\000\010\010\uff50\110\037\112\036\001\002\000\004\010" +
    "\uff51\001\002\000\036\005\007\011\024\013\017\015\016" +
    "\017\020\021\013\023\023\026\uffe2\027\uffe2\031\uffe2\032" +
    "\014\034\010\036\uffe2\037\uffe2\001\002\000\014\026\uffe3" +
    "\027\uffe3\031\uffe3\036\uffe3\037\uffe3\001\002\000\004\024" +
    "\u026d\001\002\000\006\110\037\112\036\001\002\000\004" +
    "\010\uff52\001\002\000\004\022\u0270\001\002\000\036\005" +
    "\007\011\024\013\017\015\016\017\020\021\013\023\023" +
    "\026\uffec\027\uffec\031\uffec\032\014\034\010\036\uffec\037" +
    "\uffec\001\002\000\014\026\uffed\027\uffed\031\uffed\036\uffed" +
    "\037\uffed\001\002\000\004\024\u0273\001\002\000\026\005" +
    "\uffdb\011\uffdb\013\uffdb\015\uffdb\017\uffdb\021\uffdb\023\uffdb" +
    "\032\uffdb\034\uffdb\121\u0274\001\002\000\012\054\u0134\066" +
    "\u0130\070\u0133\120\u0132\001\002\000\004\122\u0276\001\002" +
    "\000\024\005\uffda\011\uffda\013\uffda\015\uffda\017\uffda\021" +
    "\uffda\023\uffda\032\uffda\034\uffda\001\002\000\004\122\u0278" +
    "\001\002\000\024\005\uffd9\011\uffd9\013\uffd9\015\uffd9\017" +
    "\uffd9\021\uffd9\023\uffd9\032\uffd9\034\uffd9\001\002\000\004" +
    "\016\u027a\001\002\000\036\005\007\011\024\013\017\015" +
    "\016\017\020\021\013\023\023\026\uffe8\027\uffe8\031\uffe8" +
    "\032\014\034\010\036\uffe8\037\uffe8\001\002\000\014\026" +
    "\uffe9\027\uffe9\031\uffe9\036\uffe9\037\uffe9\001\002\000\004" +
    "\012\u027d\001\002\000\036\005\007\011\024\013\017\015" +
    "\016\017\020\021\013\023\023\026\uffe4\027\uffe4\031\uffe4" +
    "\032\014\034\010\036\uffe4\037\uffe4\001\002\000\014\026" +
    "\uffe5\027\uffe5\031\uffe5\036\uffe5\037\uffe5\001\002\000\004" +
    "\014\u0280\001\002\000\036\005\007\011\024\013\017\015" +
    "\016\017\020\021\013\023\023\026\uffe6\027\uffe6\031\uffe6" +
    "\032\014\034\010\036\uffe6\037\uffe6\001\002\000\014\026" +
    "\uffe7\027\uffe7\031\uffe7\036\uffe7\037\uffe7\001\002\000\006" +
    "\031\ufffb\036\u0284\001\002\000\030\005\ufff8\011\ufff8\013" +
    "\ufff8\015\ufff8\017\ufff8\021\ufff8\023\ufff8\025\ufff8\032\ufff8" +
    "\034\ufff8\121\ufff8\001\002\000\030\005\007\011\024\013" +
    "\017\015\016\017\020\021\013\023\023\025\u0289\032\014" +
    "\034\010\121\u0288\001\002\000\004\031\ufffa\001\002\000" +
    "\004\037\u0293\001\002\000\024\005\007\011\024\013\017" +
    "\015\016\017\020\021\013\023\023\032\014\034\010\001" +
    "\002\000\012\054\u0134\066\u0130\070\u0133\120\u0132\001\002" +
    "\000\020\007\050\011\045\013\052\034\046\040\053\042" +
    "\051\121\047\001\002\000\004\024\u028b\001\002\000\026" +
    "\005\uffd8\011\uffd8\013\uffd8\015\uffd8\017\uffd8\021\uffd8\023" +
    "\uffd8\032\uffd8\034\uffd8\121\u028c\001\002\000\012\054\u0134" +
    "\066\u0130\070\u0133\120\u0132\001\002\000\004\122\u028e\001" +
    "\002\000\024\005\uffd7\011\uffd7\013\uffd7\015\uffd7\017\uffd7" +
    "\021\uffd7\023\uffd7\032\uffd7\034\uffd7\001\002\000\004\122" +
    "\u0290\001\002\000\024\005\uffd6\011\uffd6\013\uffd6\015\uffd6" +
    "\017\uffd6\021\uffd6\023\uffd6\032\uffd6\034\uffd6\001\002\000" +
    "\004\037\u0292\001\002\000\006\026\ufff6\031\ufff6\001\002" +
    "\000\006\026\ufff5\031\ufff5\001\002\000\030\005\007\011" +
    "\024\013\017\015\016\017\020\021\013\023\023\025\u0289" +
    "\032\014\034\010\121\u0288\001\002\000\004\026\u029f\001" +
    "\002\000\010\026\uffee\027\u0283\036\u0284\001\002\000\024" +
    "\005\007\011\024\013\017\015\016\017\020\021\013\023" +
    "\023\032\014\034\010\001\002\000\006\027\u0283\036\u0284" +
    "\001\002\000\006\026\ufff2\036\u0284\001\002\000\004\026" +
    "\ufff3\001\002\000\004\026\ufff4\001\002\000\006\026\ufff0" +
    "\036\u0284\001\002\000\004\026\uffef\001\002\000\004\026" +
    "\ufff1\001\002\000\010\026\ufff7\031\ufff7\036\ufff7\001\002" +
    "\000\004\031\ufffc\001\002\000\004\033\u02a2\001\002\000" +
    "\036\005\007\011\024\013\017\015\016\017\020\021\013" +
    "\023\023\026\uffde\027\uffde\031\uffde\032\014\034\010\036" +
    "\uffde\037\uffde\001\002\000\014\026\uffdf\027\uffdf\031\uffdf" +
    "\036\uffdf\037\uffdf\001\002\000\004\020\u02a5\001\002\000" +
    "\036\005\007\011\024\013\017\015\016\017\020\021\013" +
    "\023\023\026\uffea\027\uffea\031\uffea\032\014\034\010\036" +
    "\uffea\037\uffea\001\002\000\014\026\uffeb\027\uffeb\031\uffeb" +
    "\036\uffeb\037\uffeb\001\002\000\004\002\000\001\002\000" +
    "\006\027\u0283\036\u0284\001\002\000\006\031\ufffd\036\u0284" +
    "\001\002\000\004\031\ufffe\001\002\000\004\031\uffff\001" +
    "\002\000\004\035\u02ad\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\013\023\023\026\uffdc\027" +
    "\uffdc\031\uffdc\032\014\034\010\036\uffdc\037\uffdc\001\002" +
    "\000\014\026\uffdd\027\uffdd\031\uffdd\036\uffdd\037\uffdd\001" +
    "\002\000\004\004\u02b0\001\002\000\036\005\007\011\024" +
    "\013\017\015\016\017\020\021\013\023\023\026\uffe0\027" +
    "\uffe0\031\uffe0\032\014\034\010\036\uffe0\037\uffe0\001\002" +
    "\000\014\026\uffe1\027\uffe1\031\uffe1\036\uffe1\037\uffe1\001" +
    "\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02b0\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\003\011\004\010\005\014\001\001" +
    "\000\004\047\u02ae\001\001\000\004\020\u02ab\001\001\000" +
    "\004\005\u02a7\001\001\000\002\001\001\000\004\045\u02a3" +
    "\001\001\000\004\050\u02a0\001\001\000\006\007\u0281\010" +
    "\u0284\001\001\000\004\035\u027e\001\001\000\004\023\u027b" +
    "\001\001\000\004\034\u0278\001\001\000\004\013\u0276\001" +
    "\001\000\004\012\u0271\001\001\000\004\044\u026e\001\001" +
    "\000\004\016\025\001\001\000\004\012\u026b\001\001\000" +
    "\002\001\001\000\004\032\u0266\001\001\000\004\033\032" +
    "\001\001\000\004\012\u0263\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\034\001\001\000\002\001\001" +
    "\000\004\033\u0260\001\001\000\004\032\040\001\001\000" +
    "\004\012\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\043\001\001\000\002\001\001\000\004\016" +
    "\u025d\001\001\000\004\020\u0143\001\001\000\004\013\u0130" +
    "\001\001\000\004\014\u0121\001\001\000\004\015\366\001" +
    "\001\000\004\023\251\001\001\000\004\022\056\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\043\223\001\001\000\004\042\062" +
    "\001\001\000\004\024\217\001\001\000\002\001\001\000" +
    "\004\050\212\001\001\000\004\042\211\001\001\000\004" +
    "\025\067\001\001\000\004\024\206\001\001\000\002\001" +
    "\001\000\004\050\201\001\001\000\004\025\200\001\001" +
    "\000\004\022\175\001\001\000\004\025\172\001\001\000" +
    "\004\026\076\001\001\000\004\024\167\001\001\000\002" +
    "\001\001\000\004\050\107\001\001\000\004\026\105\001" +
    "\001\000\004\025\102\001\001\000\002\001\001\000\004" +
    "\026\104\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\024\135\001\001\000\002\001\001\000\004\050\127" +
    "\001\001\000\004\050\126\001\001\000\004\022\123\001" +
    "\001\000\004\025\120\001\001\000\004\026\115\001\001" +
    "\000\002\001\001\000\004\050\117\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\050\122\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\050\125\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\050\131\001\001\000\002\001\001\000\004\026\133\001" +
    "\001\000\002\001\001\000\004\024\162\001\001\000\002" +
    "\001\001\000\004\050\155\001\001\000\004\024\154\001" +
    "\001\000\004\022\151\001\001\000\004\025\146\001\001" +
    "\000\004\026\143\001\001\000\002\001\001\000\004\024" +
    "\145\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\024\150\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\024\153\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\157\001\001\000\002\001" +
    "\001\000\004\050\161\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\024\164\001\001\000\002\001\001\000" +
    "\004\025\166\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\171\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\025\174\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\177\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\025\203\001\001" +
    "\000\002\001\001\000\004\042\205\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\025\210\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\042" +
    "\214\001\001\000\002\001\001\000\004\022\216\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\042\221\001" +
    "\001\000\002\001\001\000\004\024\240\001\001\000\002" +
    "\001\001\000\004\050\233\001\001\000\004\043\232\001" +
    "\001\000\004\025\227\001\001\000\002\001\001\000\004" +
    "\043\231\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\043\235\001\001\000\002\001\001" +
    "\000\004\022\237\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\043\242\001\001\000\002\001\001\000\004" +
    "\012\244\001\001\000\002\001\001\000\004\037\346\001" +
    "\001\000\004\036\330\001\001\000\004\040\306\001\001" +
    "\000\004\023\302\001\001\000\002\001\001\000\004\041" +
    "\260\001\001\000\004\026\254\001\001\000\002\001\001" +
    "\000\004\023\256\001\001\000\002\001\001\000\004\024" +
    "\275\001\001\000\002\001\001\000\004\050\270\001\001" +
    "\000\004\041\267\001\001\000\004\025\264\001\001\000" +
    "\002\001\001\000\004\041\266\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\041\272\001" +
    "\001\000\002\001\001\000\004\023\274\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\041\277\001\001\000" +
    "\002\001\001\000\004\012\301\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\321\001\001\000\004\050" +
    "\316\001\001\000\004\040\315\001\001\000\002\001\001" +
    "\000\004\025\310\001\001\000\002\001\001\000\004\040" +
    "\312\001\001\000\002\001\001\000\004\023\314\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\040\320\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\040\323\001\001\000\002\001\001\000\004\024" +
    "\342\001\001\000\004\050\337\001\001\000\004\036\336" +
    "\001\001\000\004\025\333\001\001\000\002\001\001\000" +
    "\004\023\332\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\335\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\036\341\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\036\344\001\001\000" +
    "\002\001\001\000\004\024\363\001\001\000\002\001\001" +
    "\000\004\050\356\001\001\000\004\037\355\001\001\000" +
    "\004\025\352\001\001\000\002\001\001\000\004\037\354" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\037\360\001\001\000\002\001\001\000\004" +
    "\023\362\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\037\365\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\374\001\001\000\004\024\u0119\001\001\000" +
    "\004\050\u0116\001\001\000\004\027\u0115\001\001\000\004" +
    "\025\u0112\001\001\000\002\001\001\000\006\015\376\031" +
    "\377\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\030\u0102\001\001\000\004\024\u010f\001\001\000\002\001" +
    "\001\000\004\050\u010a\001\001\000\004\030\u0109\001\001" +
    "\000\004\025\u0106\001\001\000\002\001\001\000\004\030" +
    "\u0108\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\030\u010c\001\001\000\002\001\001\000" +
    "\004\031\u010e\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\030\u0111\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\027\u0114\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\u0118\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\027\u011b\001\001" +
    "\000\002\001\001\000\004\012\u011d\001\001\000\002\001" +
    "\001\000\004\024\u012c\001\001\000\004\050\u0129\001\001" +
    "\000\004\014\u0128\001\001\000\002\001\001\000\004\025" +
    "\u0123\001\001\000\002\001\001\000\004\014\u0125\001\001" +
    "\000\002\001\001\000\004\012\u0127\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\014\u012b" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\014" +
    "\u012e\001\001\000\002\001\001\000\004\024\u013d\001\001" +
    "\000\002\001\001\000\004\013\u013a\001\001\000\004\025" +
    "\u0137\001\001\000\004\026\u0134\001\001\000\002\001\001" +
    "\000\004\013\u0136\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\013\u0139\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\u013c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\013\u013f\001\001\000\002\001\001" +
    "\000\004\035\u025a\001\001\000\004\034\u0257\001\001\000" +
    "\004\013\u0146\001\001\000\002\001\001\000\004\012\u0145" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\021" +
    "\u014a\001\001\000\004\035\u0254\001\001\000\004\034\u0156" +
    "\001\001\000\002\001\001\000\004\047\u0251\001\001\000" +
    "\004\045\u024e\001\001\000\004\034\u024d\001\001\000\004" +
    "\050\u024a\001\001\000\004\025\u0247\001\001\000\004\026" +
    "\u0244\001\001\000\004\023\u0241\001\001\000\004\024\u023e" +
    "\001\001\000\004\044\u0160\001\001\000\004\016\u015c\001" +
    "\001\000\004\022\u0159\001\001\000\002\001\001\000\004" +
    "\021\u0158\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u015b\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u015e\001\001\000\002\001\001\000\004\051" +
    "\u016a\001\001\000\002\001\001\000\004\034\u0162\001\001" +
    "\000\002\001\001\000\004\047\u023b\001\001\000\004\020" +
    "\u0238\001\001\000\004\045\u019e\001\001\000\004\050\u0194" +
    "\001\001\000\004\035\u0181\001\001\000\004\023\u0178\001" +
    "\001\000\004\034\u0175\001\001\000\002\001\001\000\004" +
    "\044\u0170\001\001\000\004\016\u016d\001\001\000\002\001" +
    "\001\000\004\051\u016f\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\051\u0172\001\001\000\002\001\001\000" +
    "\004\044\u0174\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\051\u0177\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\051\u017a\001\001\000\002\001\001\000\004" +
    "\024\u0191\001\001\000\004\050\u018e\001\001\000\004\035" +
    "\u018d\001\001\000\004\022\u018a\001\001\000\004\025\u0187" +
    "\001\001\000\004\026\u0184\001\001\000\002\001\001\000" +
    "\004\051\u0183\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\035\u0186\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\035\u0189\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\u018c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\035\u0190\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\035\u0193\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\051\u0196" +
    "\001\001\000\002\001\001\000\004\047\u0235\001\001\000" +
    "\004\020\u0232\001\001\000\004\045\u022f\001\001\000\004" +
    "\050\u022c\001\001\000\004\035\u0229\001\001\000\004\023" +
    "\u0226\001\001\000\004\034\u0223\001\001\000\002\001\001" +
    "\000\004\013\u021e\001\001\000\004\044\u021b\001\001\000" +
    "\004\016\u01a2\001\001\000\002\001\001\000\004\046\u01ab" +
    "\001\001\000\004\047\u01c8\001\001\000\004\020\u01c3\001" +
    "\001\000\004\045\u01c0\001\001\000\004\050\u01bd\001\001" +
    "\000\004\035\u01ba\001\001\000\004\023\u01b7\001\001\000" +
    "\004\034\u01b4\001\001\000\002\001\001\000\004\044\u01b1" +
    "\001\001\000\004\016\u01ae\001\001\000\002\001\001\000" +
    "\004\046\u01b0\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\046\u01b3\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\046\u01b6\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\u01b9\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u01bc\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u01bf\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u01c2\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u01c5\001\001\000" +
    "\002\001\001\000\004\016\u0218\001\001\000\004\052\u01cd" +
    "\001\001\000\002\001\001\000\004\046\u01ca\001\001\000" +
    "\002\001\001\000\004\053\u0210\001\001\000\004\054\u0209" +
    "\001\001\000\002\001\001\000\004\055\u01cf\001\001\000" +
    "\002\001\001\000\004\056\u01d2\001\001\000\004\057\u01e9" +
    "\001\001\000\002\001\001\000\004\060\u01d4\001\001\000" +
    "\002\001\001\000\004\053\u01da\001\001\000\004\055\u01d7" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\056" +
    "\u01df\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\055\u01dd\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\056\u01e2\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\u0202\001" +
    "\001\000\004\045\u01ff\001\001\000\004\057\u01fe\001\001" +
    "\000\004\050\u01fb\001\001\000\004\035\u01f8\001\001\000" +
    "\002\001\001\000\004\034\u01f3\001\001\000\004\044\u01f0" +
    "\001\001\000\004\016\u01ed\001\001\000\002\001\001\000" +
    "\004\057\u01ef\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\057\u01f2\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\057\u01f5\001\001\000\002\001\001\000\004" +
    "\056\u01f7\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\057\u01fa\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\057\u01fd\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\057\u0201\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\057\u0204\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\047\u0207\001\001" +
    "\000\002\001\001\000\004\056\u020e\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\055\u020c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\054\u0213" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\055" +
    "\u0216\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\047\u021a\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u021d\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u0220\001\001\000\002\001" +
    "\001\000\004\051\u0222\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\046\u0225\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\046\u0228\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\046\u022b\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\u022e\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\046\u0231\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\u0234\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\046\u0237\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\051\u023a" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\u023d\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\034\u0240\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\034\u0243\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\034\u0246\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\034\u0249\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\034\u024c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\034\u0250\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\034\u0253\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\021\u0256" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\021" +
    "\u0259\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\021\u025c\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\012\u025f\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\u0262\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\017\u0268\001\001\000\002\001\001\000\004\005" +
    "\u026a\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\017\u026d\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\u0270\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\u0274\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\u027a\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\u027d\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\005\u0280\001\001\000" +
    "\002\001\001\000\004\010\u029f\001\001\000\004\061\u0293" +
    "\001\001\000\006\005\u0285\006\u0286\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\u0290\001\001\000\004" +
    "\013\u028e\001\001\000\004\012\u0289\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\013\u028c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\005\u0295\006\u0296\011\u0294\001\001\000\002\001" +
    "\001\000\006\007\u029b\010\u029c\001\001\000\004\005\u0297" +
    "\001\001\000\006\007\u0298\010\u0299\001\001\000\004\010" +
    "\u029a\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\u029d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\005\u02a2\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\u02a5\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\007\u02a8\010\u02a9\001\001\000\004\010\u02aa\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\u02ad\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\005\u02b0\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Sintax$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions() throws IOException
    {
      action_obj = new CUP$Sintax$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Sintax$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getSymbol(){
        return this.s;
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$Sintax$actions {

 

    BufferedWriter writer;  

    public void InitFileWritter() throws IOException{
        this.writer = new BufferedWriter(new FileWriter("index.html"));
        this.Write("<html><head></head><body>\n");
       
    }

    public void Write(String token) throws IOException{
        this.writer.write(token);
    }

    public void CloseFileWritter() throws IOException{
        this.writer.close();
    }


  private final Sintax parser;

  /** Constructor */
  CUP$Sintax$actions(Sintax parser) throws IOException {
    this.parser = parser;
        
            this.InitFileWritter();
      
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$Sintax$do_action(
    int                        CUP$Sintax$act_num,
    java_cup.runtime.lr_parser CUP$Sintax$parser,
    java.util.Stack            CUP$Sintax$stack,
    int                        CUP$Sintax$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Sintax$result;

      /* select the action based on the action number */
      switch (CUP$Sintax$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ENTRYTBL ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ENTRYTBL ::= AperturaThead THEAD CierreThead AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRYTBL",46, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ENTRY ::= AperturaAbstract ABSTRACT CierreAbstract ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ENTRY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ENTRY ::= AperturaComment COMMENT CierreComment ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ENTRY ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ENTRY ::= AperturaSimPara SIMPARRAFO CierreSimPara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ENTRY ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ENTRY ::= AperturaPara PARRAFO CierrePara ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ENTRY ::= AperturaImportant IMPORTANT CierreImportant ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // ENTRY ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // ENTRY ::= Texto ENTRY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // ENTRY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENTRY",45, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // ROW ::= AperturaEntrytbl ENTRYTBL CierreEntrytbl ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // ROW ::= AperturaEntry ENTRY CierreEntry 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // ROW ::= AperturaEntry ENTRY CierreEntry ROW 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ROW",44, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // TBODY ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TBODY",43, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // TFOOT ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TFOOT",42, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // THEAD ::= AperturaRow ROW CierreRow 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("THEAD",41, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // TGROUP ::= AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // TGROUP ::= AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // TGROUP ::= AperturaThead THEAD CierreThead AperturaTfoot TFOOT CierreTfoot AperturaTbody TBODY CierreTbody 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TGROUP",40, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-8)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // INFORMALTABLE ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INFORMALTABLE ::= AperturaTgroup TGROUP CierreTgroup INFORMALTABLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMALTABLE",37, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // NIMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // NIMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // NIMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // NIMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // NIMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // NIMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // NIMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // NIMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // NIMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // NIMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NIMPORTANT",36, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // IMPORTANT ::= AperturaInformalTable INFORMALTABLE CierreInformalTable NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // IMPORTANT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // IMPORTANT ::= AperturaComment COMMENT CierreComment NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // IMPORTANT ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // IMPORTANT ::= AperturaAbstract ABSTRACT CierreAbstract NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // IMPORTANT ::= AperturaSimPara SIMPARRAFO CierreSimPara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // IMPORTANT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // IMPORTANT ::= AperturaPara PARRAFO CierrePara NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // IMPORTANT ::= AperturaImportant IMPORTANT CierreImportant NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // IMPORTANT ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // IMPORTANT ::= AperturaAddress ADDRESS CierreAddress NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // IMPORTANT ::= AperturaTitulo TITULO CierreTitulo NIMPORTANT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMPORTANT",35, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // LISTITEM ::= AperturaAbstract ABSTRACT CierreAbstract LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // LISTITEM ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // LISTITEM ::= AperturaComment COMMENT CierreComment LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // LISTITEM ::= AperturaInformalTable INFORMALTABLE CierreInformalTable LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // LISTITEM ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // LISTITEM ::= AperturaAddress ADDRESS CierreAddress LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // LISTITEM ::= AperturaSimPara SIMPARRAFO CierreSimPara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // LISTITEM ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // LISTITEM ::= AperturaPara PARRAFO CierrePara LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // LISTITEM ::= AperturaImportant IMPORTANT CierreImportant LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // LISTITEM ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList LISTITEM 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LISTITEM",39, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // ITEMIZEDLIST ::= AperturaListItem LISTITEM CierreListItem ITEMIZEDLIST 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ITEMIZEDLIST",34, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // LINK ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // LINK ::= Texto LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // LINK ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // LINK ::= AperturaEmail EMAIL CierreEmail LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // LINK ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LINK ::= AperturaAuthor AUTHOR CierreAuthor LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LINK ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LINK ::= AperturaComment COMMENT CierreComment LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // LINK ::= AperturaEmphasis EMPHASIS CierreEmphasis LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // LINK ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // LINK ::= AperturaLink LINK CierreLink LINK 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("LINK",19, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // COMMENT ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // COMMENT ::= Texto COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // COMMENT ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // COMMENT ::= AperturaEmail EMAIL CierreEmail COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // COMMENT ::= AperturaAuthor AUTHOR CierreAuthor COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // COMMENT ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // COMMENT ::= AperturaComment COMMENT CierreComment COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // COMMENT ::= AperturaEmphasis EMPHASIS CierreEmphasis COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // COMMENT ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // COMMENT ::= AperturaLink LINK CierreLink COMMENT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COMMENT",38, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // SIMPARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // SIMPARRAFO ::= Texto SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // SIMPARRAFO ::= AperturaEmail EMAIL CierreEmail SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // SIMPARRAFO ::= AperturaAuthor AUTHOR CierreAuthor SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // SIMPARRAFO ::= AperturaComment COMMENT CierreComment SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // SIMPARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // SIMPARRAFO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // SIMPARRAFO ::= AperturaLink LINK CierreLink SIMPARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SIMPARRAFO",27, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // PARRAFO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // PARRAFO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // PARRAFO ::= AperturaAddress ADDRESS CierreAddress PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // PARRAFO ::= AperturaImportant IMPORTANT CierreImportant PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // PARRAFO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // PARRAFO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // PARRAFO ::= Texto PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // PARRAFO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // PARRAFO ::= AperturaEmail EMAIL CierreEmail PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // PARRAFO ::= AperturaAuthor AUTHOR CierreAuthor PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // PARRAFO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // PARRAFO ::= AperturaComment COMMENT CierreComment PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // PARRAFO ::= AperturaEmphasis EMPHASIS CierreEmphasis PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // PARRAFO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // PARRAFO ::= AperturaLink LINK CierreLink PARRAFO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PARRAFO",26, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // EMPHASIS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // EMPHASIS ::= Texto EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // EMPHASIS ::= AperturaEmail EMAIL CierreEmail EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // EMPHASIS ::= AperturaAuthor AUTHOR CierreAuthor EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // EMPHASIS ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // EMPHASIS ::= AperturaComment COMMENT CierreComment EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // EMPHASIS ::= AperturaEmphasis EMPHASIS CierreEmphasis EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // EMPHASIS ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // EMPHASIS ::= AperturaLink LINK CierreLink EMPHASIS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMPHASIS",18, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // VIDEOOBJECT ::= Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // VIDEOOBJECT ::= AperturaInfo INFORMACION CierreInfo Videodata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("VIDEOOBJECT",24, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // IMAGEOBJECT ::= Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // IMAGEOBJECT ::= AperturaInfo INFORMACION CierreInfo Imagedata 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("IMAGEOBJECT",25, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // NMEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // NMEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NMEDIAOBJECT",13, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // MEDIAOBJECT ::= AperturaImageobject IMAGEOBJECT CierreImageobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // MEDIAOBJECT ::= AperturaVideoobject VIDEOOBJECT CierreVideoobject NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // MEDIAOBJECT ::= AperturaInfo INFORMACION CierreInfo NMEDIAOBJECT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("MEDIAOBJECT",12, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // HOLDER ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // HOLDER ::= AperturaComment COMMENT CierreComment HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // HOLDER ::= AperturaEmphasis EMPHASIS CierreEmphasis HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // HOLDER ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // HOLDER ::= AperturaLink LINK CierreLink HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // HOLDER ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // HOLDER ::= Texto HOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("HOLDER",22, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // NHOLDER ::= AperturaHolder HOLDER CierreHolder 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // NHOLDER ::= AperturaHolder HOLDER CierreHolder NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NHOLDER",23, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // COPYRIGHT ::= AperturaYear YEAR CierreYear NHOLDER 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // COPYRIGHT ::= AperturaYear YEAR CierreYear COPYRIGHT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // COPYRIGHT ::= AperturaYear YEAR CierreYear 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("COPYRIGHT",11, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // NABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // NABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // NABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NABSTRACT",15, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // ABSTRACT ::= AperturaSimPara SIMPARRAFO CierreSimPara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // ABSTRACT ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ABSTRACT ::= AperturaPara PARRAFO CierrePara NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // ABSTRACT ::= AperturaTitulo TITULO CierreTitulo NABSTRACT 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ABSTRACT",14, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // YEAR ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // YEAR ::= AperturaComment COMMENT CierreComment YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // YEAR ::= AperturaEmphasis EMPHASIS CierreEmphasis YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // YEAR ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // YEAR ::= AperturaLink LINK CierreLink YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // YEAR ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // YEAR ::= Texto YEAR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("YEAR",21, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // SURNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // SURNAME ::= AperturaComment COMMENT CierreComment SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // SURNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // SURNAME ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // SURNAME ::= AperturaLink LINK CierreLink SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // SURNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // SURNAME ::= Texto SURNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SURNAME",33, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // FIRSTNAME ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // FIRSTNAME ::= AperturaComment COMMENT CierreComment FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // FIRSTNAME ::= AperturaEmphasis EMPHASIS CierreEmphasis FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // FIRSTNAME ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // FIRSTNAME ::= AperturaLink LINK CierreLink FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // FIRSTNAME ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // FIRSTNAME ::= Texto FIRSTNAME 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("FIRSTNAME",32, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // EMAIL ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // EMAIL ::= AperturaComment COMMENT CierreComment EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // EMAIL ::= AperturaEmphasis EMPHASIS CierreEmphasis EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // EMAIL ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // EMAIL ::= AperturaLink LINK CierreLink EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // EMAIL ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // EMAIL ::= Texto EMAIL 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("EMAIL",20, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PHONE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PHONE ::= AperturaComment COMMENT CierreComment PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PHONE ::= AperturaEmphasis EMPHASIS CierreEmphasis PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // PHONE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // PHONE ::= AperturaLink LINK CierreLink PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // PHONE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PHONE ::= Texto PHONE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("PHONE",31, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // STATE ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // STATE ::= AperturaComment COMMENT CierreComment STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // STATE ::= AperturaEmphasis EMPHASIS CierreEmphasis STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // STATE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // STATE ::= AperturaLink LINK CierreLink STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // STATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // STATE ::= Texto STATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STATE",30, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // CITY ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // CITY ::= AperturaComment COMMENT CierreComment CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // CITY ::= AperturaEmphasis EMPHASIS CierreEmphasis CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // CITY ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // CITY ::= AperturaLink LINK CierreLink CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // CITY ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // CITY ::= Texto CITY 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CITY",29, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // STREET ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // STREET ::= AperturaComment COMMENT CierreComment STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // STREET ::= AperturaEmphasis EMPHASIS CierreEmphasis STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // STREET ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // STREET ::= AperturaLink LINK CierreLink STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // STREET ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // STREET ::= Texto STREET 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("STREET",28, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ADDRESS ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ADDRESS ::= AperturaEmail EMAIL CierreEmail ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ADDRESS ::= AperturaPhone PHONE CierrePhone 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ADDRESS ::= AperturaPhone PHONE CierrePhone ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ADDRESS ::= AperturaState STATE CierreState 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ADDRESS ::= AperturaState STATE CierreState ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ADDRESS ::= AperturaCity CITY CierreCity 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ADDRESS ::= AperturaCity CITY CierreCity ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ADDRESS ::= AperturaStreet STREET CierreStreet 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ADDRESS ::= AperturaStreet STREET CierreStreet ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ADDRESS ::= Texto ADDRESS 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ADDRESS ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ADDRESS",17, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // AUTHOR ::= AperturaSurname SURNAME CierreSurname 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // AUTHOR ::= AperturaSurname SURNAME CierreSurname AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // AUTHOR ::= AperturaFirstName FIRSTNAME CierreFirstName AUTHOR 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("AUTHOR",16, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // DATE ::= AperturaComment COMMENT CierreComment DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // DATE ::= AperturaEmphasis EMPHASIS CierreEmphasis DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // DATE ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // DATE ::= AperturaLink LINK CierreLink DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // DATE ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // DATE ::= Texto DATE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("DATE",10, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // TITULO ::= AperturaEmail EMAIL CierreEmail 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TITULO ::= AperturaEmail EMAIL CierreEmail TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // TITULO ::= AperturaLink LINK CierreLink 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // TITULO ::= AperturaLink LINK CierreLink TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // TITULO ::= AperturaEmphasis EMPHASIS CierreEmphasis TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // TITULO ::= Texto TITULO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // TITULO ::= Texto 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("TITULO",9, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INFORMACION ::= AperturaTitulo TITULO CierreTitulo INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INFORMACION ::= AperturaCopyright COPYRIGHT CierreCopyright INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INFORMACION ::= AperturaDate DATE CierreDate 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INFORMACION ::= AperturaDate DATE CierreDate INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INFORMACION ::= AperturaAuthor AUTHOR CierreAuthor INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INFORMACION ::= AperturaAddress ADDRESS CierreAddress INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // INFORMACION ::= AperturaAbstract ABSTRACT CierreAbstract INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INFORMACION ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject INFORMACION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INFORMACION",8, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ENCABEZADOSECTION ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ENCABEZADOSECTION ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ENCABEZADOSECTION ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADOSECTION",4, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ENCABEZADO ::= AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo AperturaTitulo TITULO CierreTitulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-5)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ENCABEZADO ::= AperturaInfo INFORMACION CierreInfo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ENCABEZADO",2, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // CONTENIDO ::= AperturaAbstract ABSTRACT CierreAbstract CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // CONTENIDO ::= AperturaComment COMMENT CierreComment 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // CONTENIDO ::= AperturaComment COMMENT CierreComment CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONTENIDO ::= AperturaInformalTable INFORMALTABLE CierreInformalTable CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONTENIDO ::= AperturaMediaObject MEDIAOBJECT CierreMediaObject CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONTENIDO ::= AperturaAddress ADDRESS CierreAddress CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONTENIDO ::= AperturaSimPara SIMPARRAFO CierreSimPara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONTENIDO ::= AperturaPara PARRAFO CierrePara 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CONTENIDO ::= AperturaPara PARRAFO CierrePara CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CONTENIDO ::= AperturaImportant IMPORTANT CierreImportant CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CONTENIDO ::= AperturaItemizedList ITEMIZEDLIST CierreItemizedList CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("CONTENIDO",3, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NSECTION ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // NSECTION ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NSECTION ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // NSECTION ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // NSECTION ::= ENCABEZADOSECTION CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NSECTION",7, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SECTSIMPLE ::= AperturaSimpleSect CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SECTSIMPLE ::= AperturaSimpleSect ENCABEZADOSECTION CONTENIDO CierreSimpleSect 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECTSIMPLE",6, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // SECCION ::= AperturaSection NT$0 NSECTION CierreSection 
            {
              Object RESULT =null;
              // propagate RESULT from NT$0
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)).value;
		 this.Write("</section>"); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("SECCION",5, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // NT$0 ::= 
            {
              Object RESULT =null;
 this.Write("<section>"); 
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("NT$0",47, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ARTICULO ::= CONTENIDO 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ARTICULO ::= CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ARTICULO ::= CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ARTICULO ::= CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARTICULO ::= ENCABEZADO CONTENIDO SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-2)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARTICULO ::= ENCABEZADO CONTENIDO SECCION SECTSIMPLE 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("ARTICULO",1, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= EncabezadoXML AperturaArticulo ARTICULO CierreArticulo 
            {
              Object RESULT =null;

              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-3)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          return CUP$Sintax$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)).value;
		RESULT = start_val;
              CUP$Sintax$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Sintax$stack.elementAt(CUP$Sintax$top-1)), ((java_cup.runtime.Symbol)CUP$Sintax$stack.peek()), RESULT);
            }
          /* ACCEPT */
            this.CloseFileWritter();
          CUP$Sintax$parser.done_parsing();
          return CUP$Sintax$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

