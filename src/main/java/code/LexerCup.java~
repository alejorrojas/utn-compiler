/* The following code was generated by JFlex 1.4.3 on 11/6/23, 18:42 */

package code;
import java_cup.runtime.Symbol;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 11/6/23, 18:42 from the specification file
 * <tt>C:/Users/usuario/OneDrive/Documentos/Facultad/Sintaxis/utn-parser/src/main/java/code/lexerCup.flex</tt>
 */
class LexerCup implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  2, 10,  0,  0,  2,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
    17, 30, 21,  3,  3,  3,  0,  0,  3,  3,  3,  3,  1,  3,  1,  9, 
     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  8,  3, 12, 27, 22,  3, 
     3,  1,  1, 33, 31, 37,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32, 
    36,  1,  1,  1, 34,  1,  1,  1,  1, 35,  1,  3,  3,  3,  0,  1, 
     0, 26, 40, 38, 24, 20, 11, 29,  4, 14, 41, 16, 13, 28, 15, 25, 
     6,  1, 19,  7,  5, 42, 23, 44, 18, 43, 39,  3,  3,  3,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  0,  0,  0,  3, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\1\1\1\3\2\1\1\2\1\1\14\0"+
    "\1\4\7\0\1\1\56\0\2\1\102\0\1\1\66\0"+
    "\1\5\17\0\1\1\7\0\1\6\31\0\1\7\23\0"+
    "\1\10\6\0\1\11\6\0\1\12\2\0\1\13\2\14"+
    "\1\0\1\15\1\16\1\17\1\0\1\20\1\21\1\0"+
    "\1\22\13\0\1\23\12\0\1\24\6\0\1\25\5\0"+
    "\1\26\2\0\1\27\10\0\1\30\2\0\1\31\12\0"+
    "\1\32\1\33\1\34\5\0\1\35\1\36\1\37\1\0"+
    "\1\40\1\41\1\0\1\42\12\0\1\43\2\0\1\44"+
    "\27\0\1\45\5\0\1\46\1\47\1\50\1\51\1\52"+
    "\1\53\20\0\1\54\13\0\1\55\3\0\1\56\1\57"+
    "\4\0\1\60\2\0\1\61\1\62\1\63\6\0\1\64"+
    "\2\0\1\65\1\66\3\0\1\67\1\0\1\70\6\0"+
    "\1\71\2\0\1\72\6\0\1\73\4\0\1\74\1\0"+
    "\1\75\2\0\1\76\3\0\1\77\6\0\1\100\1\101"+
    "\1\0\1\102\2\0\1\103\3\0\1\104\11\0\1\105"+
    "\11\0\1\106\1\0\1\107\1\110\3\0\1\111\1\112"+
    "\1\113\1\0\1\114\4\0\1\115\2\0\1\116\3\0"+
    "\1\117\13\0\1\120\74\0\1\121\6\0\1\122\10\0"+
    "\1\4\33\0\1\4\3\0\1\4\3\0\1\4\3\0"+
    "\1\4\1\0\1\123\33\0\1\121\4\0\1\122\6\0"+
    "\1\121\2\0\1\122\134\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[841];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\55\0\132\0\207\0\264\0\341\0\u010e\0\u013b"+
    "\0\u0168\0\u0195\0\u01c2\0\u01ef\0\u021c\0\u0249\0\u0276\0\u02a3"+
    "\0\u02d0\0\u02fd\0\u032a\0\u0357\0\55\0\u0384\0\u03b1\0\u03de"+
    "\0\u040b\0\u0438\0\u0465\0\u0492\0\u04bf\0\u04ec\0\u0519\0\u0546"+
    "\0\u0573\0\u05a0\0\u05cd\0\u05fa\0\u0627\0\u0654\0\u0681\0\u06ae"+
    "\0\u06db\0\u0708\0\u0735\0\u0762\0\u078f\0\u07bc\0\u07e9\0\u0816"+
    "\0\u0843\0\u0870\0\u089d\0\u08ca\0\u08f7\0\u0924\0\u0951\0\u097e"+
    "\0\u09ab\0\u09d8\0\u0a05\0\u0a32\0\u0a5f\0\u0a8c\0\u0ab9\0\u0ae6"+
    "\0\u0b13\0\u0b40\0\u0b6d\0\u0b9a\0\u0bc7\0\u0bf4\0\u0c21\0\u0c4e"+
    "\0\u0c7b\0\u0ca8\0\u0cd5\0\u0d02\0\u0d2f\0\u0d5c\0\u0d89\0\u0db6"+
    "\0\u0de3\0\u0e10\0\u0e3d\0\u0e6a\0\u0e97\0\u0ec4\0\u0ef1\0\u0f1e"+
    "\0\u0f4b\0\u0f78\0\u0fa5\0\u0fd2\0\u0fff\0\u102c\0\u1059\0\u1086"+
    "\0\u10b3\0\u10e0\0\u110d\0\u113a\0\u1167\0\u1194\0\u11c1\0\u11ee"+
    "\0\u121b\0\u1248\0\u1275\0\u12a2\0\u12cf\0\u12fc\0\u1329\0\u1356"+
    "\0\u1383\0\u13b0\0\u13dd\0\u140a\0\u1437\0\u1464\0\u1491\0\u14be"+
    "\0\u14eb\0\u1518\0\u1545\0\u1572\0\u159f\0\u15cc\0\u15f9\0\u1626"+
    "\0\u1653\0\u1680\0\u16ad\0\u16da\0\u1707\0\u1734\0\u1761\0\u178e"+
    "\0\u17bb\0\u17e8\0\u1815\0\u1842\0\u186f\0\u189c\0\u18c9\0\u18f6"+
    "\0\u1923\0\u1950\0\u197d\0\u19aa\0\u19d7\0\u1a04\0\u1a31\0\u1a5e"+
    "\0\u1a8b\0\u1ab8\0\u1ae5\0\u1b12\0\u1b3f\0\u1b6c\0\u1b99\0\u1bc6"+
    "\0\u1bf3\0\u1c20\0\u1c4d\0\u1c7a\0\u1ca7\0\u1cd4\0\u1d01\0\u1d2e"+
    "\0\u1d5b\0\u1d88\0\u1db5\0\u1de2\0\u1e0f\0\u1e3c\0\u1e69\0\u1e96"+
    "\0\u1ec3\0\u1ef0\0\u1f1d\0\u1f4a\0\u1f77\0\u1fa4\0\u1fd1\0\u1ffe"+
    "\0\u202b\0\u2058\0\u2085\0\u20b2\0\u20df\0\u210c\0\u2139\0\u2166"+
    "\0\u2193\0\u21c0\0\u21ed\0\u221a\0\u2247\0\u2274\0\55\0\u22a1"+
    "\0\u22ce\0\u22fb\0\u2328\0\u2355\0\u2382\0\u23af\0\u23dc\0\u2409"+
    "\0\u2436\0\u2463\0\u2490\0\u24bd\0\u24ea\0\u2517\0\u2544\0\u2571"+
    "\0\u259e\0\u25cb\0\u25f8\0\u2625\0\u2652\0\u267f\0\55\0\u26ac"+
    "\0\u26d9\0\u2706\0\u2733\0\u2760\0\u278d\0\u27ba\0\u27e7\0\u2814"+
    "\0\u2841\0\u286e\0\u289b\0\u28c8\0\u28f5\0\u2922\0\u294f\0\u297c"+
    "\0\u29a9\0\u29d6\0\u2a03\0\u2a30\0\u2a5d\0\u2a8a\0\u2ab7\0\u2ae4"+
    "\0\55\0\u2b11\0\u2b3e\0\u2b6b\0\u2b98\0\u2bc5\0\u2bf2\0\u2c1f"+
    "\0\u2c4c\0\u2c79\0\u2ca6\0\u2cd3\0\u2d00\0\u2d2d\0\u2d5a\0\u2d87"+
    "\0\u2db4\0\u2de1\0\u2e0e\0\u2e3b\0\55\0\u2e68\0\u2e95\0\u2ec2"+
    "\0\u2eef\0\u2f1c\0\u2f49\0\55\0\u2f76\0\u2fa3\0\u2fd0\0\u2ffd"+
    "\0\u302a\0\u3057\0\55\0\u3084\0\u30b1\0\55\0\u30de\0\u2544"+
    "\0\u310b\0\55\0\55\0\55\0\u3138\0\55\0\55\0\u3165"+
    "\0\55\0\u3192\0\u31bf\0\u31ec\0\u3219\0\u3246\0\u3273\0\u32a0"+
    "\0\u32cd\0\u32fa\0\u3327\0\u3354\0\55\0\u3381\0\u33ae\0\u33db"+
    "\0\u3408\0\u3435\0\u3462\0\u348f\0\u34bc\0\u34e9\0\u3516\0\55"+
    "\0\u3543\0\u3570\0\u359d\0\u35ca\0\u35f7\0\u3624\0\55\0\u3651"+
    "\0\u367e\0\u36ab\0\u36d8\0\u3705\0\55\0\u3732\0\u375f\0\55"+
    "\0\u378c\0\u37b9\0\u37e6\0\u3813\0\u3840\0\u386d\0\u389a\0\u38c7"+
    "\0\55\0\u38f4\0\u3921\0\55\0\u394e\0\u397b\0\u39a8\0\u39d5"+
    "\0\u3a02\0\u3a2f\0\u3a5c\0\u3a89\0\u3ab6\0\u3ae3\0\55\0\55"+
    "\0\55\0\u3b10\0\u3b3d\0\u3b6a\0\u3b97\0\u3bc4\0\55\0\55"+
    "\0\55\0\u3bf1\0\55\0\55\0\u3c1e\0\55\0\u3c4b\0\u3c78"+
    "\0\u3ca5\0\u3cd2\0\u3cff\0\u3d2c\0\u3d59\0\u3d86\0\u3db3\0\u3de0"+
    "\0\55\0\u3e0d\0\u3e3a\0\55\0\u3e67\0\u3e94\0\u3ec1\0\u3eee"+
    "\0\u3f1b\0\u3f48\0\u3f75\0\u3fa2\0\u3fcf\0\u3ffc\0\u4029\0\u4056"+
    "\0\u4083\0\u40b0\0\u40dd\0\u410a\0\u4137\0\u4164\0\u4191\0\u41be"+
    "\0\u41eb\0\u4218\0\u4245\0\55\0\u4272\0\u429f\0\u42cc\0\u42f9"+
    "\0\u4326\0\55\0\55\0\55\0\55\0\55\0\55\0\u4353"+
    "\0\u4380\0\u43ad\0\u43da\0\u4407\0\u4434\0\u4461\0\u448e\0\u44bb"+
    "\0\u44e8\0\u4515\0\u4542\0\u456f\0\u459c\0\u45c9\0\u45f6\0\55"+
    "\0\u4623\0\u4650\0\u467d\0\u46aa\0\u46d7\0\u4704\0\u4731\0\u475e"+
    "\0\u478b\0\u47b8\0\u47e5\0\55\0\u4812\0\u483f\0\u486c\0\55"+
    "\0\55\0\u4899\0\u48c6\0\u48f3\0\u4920\0\55\0\u494d\0\u497a"+
    "\0\55\0\55\0\55\0\u49a7\0\u49d4\0\u4a01\0\u4a2e\0\u4a5b"+
    "\0\u4a88\0\55\0\u4ab5\0\u4ae2\0\55\0\55\0\u4b0f\0\u4b3c"+
    "\0\u4b69\0\55\0\u4b96\0\55\0\u4bc3\0\u4bf0\0\u4c1d\0\u4c4a"+
    "\0\u4c77\0\u4ca4\0\55\0\u4cd1\0\u4cfe\0\55\0\u4d2b\0\u4d58"+
    "\0\u4d85\0\u4db2\0\u4ddf\0\u4e0c\0\55\0\u4e39\0\u4e66\0\u4e93"+
    "\0\u4ec0\0\55\0\u4eed\0\55\0\u4f1a\0\u4f47\0\55\0\u4f74"+
    "\0\u4fa1\0\u4fce\0\55\0\u4ffb\0\u5028\0\u5055\0\u5082\0\u50af"+
    "\0\u50dc\0\55\0\55\0\u5109\0\55\0\u5136\0\u5163\0\55"+
    "\0\u5190\0\u51bd\0\u51ea\0\55\0\u5217\0\u5244\0\u5271\0\u529e"+
    "\0\u52cb\0\u52f8\0\u5325\0\u5352\0\u537f\0\55\0\u53ac\0\u53d9"+
    "\0\u5406\0\u5433\0\u5460\0\u548d\0\u54ba\0\u54e7\0\u5514\0\55"+
    "\0\u5541\0\55\0\55\0\u556e\0\u559b\0\u55c8\0\55\0\55"+
    "\0\55\0\u55f5\0\55\0\u5622\0\u564f\0\u567c\0\u56a9\0\55"+
    "\0\u56d6\0\u5703\0\55\0\u5730\0\u575d\0\u578a\0\55\0\u57b7"+
    "\0\u57e4\0\u5811\0\u583e\0\u586b\0\u5898\0\u58c5\0\u58f2\0\u591f"+
    "\0\u594c\0\u5979\0\55\0\u59a6\0\u59d3\0\u5a00\0\u5a2d\0\u5a5a"+
    "\0\u5a87\0\u5ab4\0\u5ae1\0\u5b0e\0\u5b3b\0\u5b68\0\u5b95\0\u5bc2"+
    "\0\u5bef\0\u5c1c\0\u5c49\0\u5c76\0\u5ca3\0\u5cd0\0\u5cfd\0\u5d2a"+
    "\0\u5d57\0\u5d84\0\u5db1\0\u5dde\0\u5e0b\0\u5e38\0\u5e65\0\u5e92"+
    "\0\u5ebf\0\u5eec\0\u5f19\0\u5f46\0\u5f73\0\u5fa0\0\u5fcd\0\u5ffa"+
    "\0\u6027\0\u6054\0\u6081\0\u60ae\0\u60db\0\u6108\0\u6135\0\u6162"+
    "\0\u618f\0\u61bc\0\u61e9\0\u6216\0\u6243\0\u6270\0\u629d\0\u62ca"+
    "\0\u62f7\0\u6324\0\u6351\0\u637e\0\u63ab\0\u63d8\0\u6405\0\55"+
    "\0\u6432\0\u645f\0\u648c\0\u64b9\0\u64e6\0\u6513\0\55\0\u6540"+
    "\0\u656d\0\u659a\0\u65c7\0\u65f4\0\u6621\0\u664e\0\u667b\0\u664e"+
    "\0\u66a8\0\u66d5\0\u6702\0\u672f\0\u675c\0\u6789\0\u67b6\0\u67e3"+
    "\0\u6810\0\u683d\0\u686a\0\u6897\0\u68c4\0\u68f1\0\u691e\0\u694b"+
    "\0\u6978\0\u69a5\0\u69d2\0\u69ff\0\u6a2c\0\u6a59\0\u6a86\0\u6ab3"+
    "\0\u6ae0\0\u6b0d\0\u6b3a\0\u6b0d\0\u6b67\0\u6b94\0\u6bc1\0\u6b94"+
    "\0\u6bee\0\u6c1b\0\u6c48\0\u6c1b\0\u6c75\0\u6ca2\0\u6ccf\0\u6ca2"+
    "\0\u6cfc\0\u664e\0\u6d29\0\u6d56\0\u6d83\0\u6db0\0\u6ddd\0\u6e0a"+
    "\0\u6e37\0\u6e64\0\u6e91\0\u6ebe\0\u6eeb\0\u6f18\0\u6f45\0\u6f72"+
    "\0\u6f9f\0\u6fcc\0\u6ff9\0\u7026\0\u7053\0\u7080\0\u70ad\0\u70da"+
    "\0\u7107\0\u7134\0\u7161\0\u718e\0\u71bb\0\u6b0d\0\u71e8\0\u7215"+
    "\0\u7242\0\u726f\0\u6c1b\0\u729c\0\u72c9\0\u72f6\0\u7323\0\u7350"+
    "\0\u737d\0\u6b94\0\u73aa\0\u73d7\0\u6ca2\0\u7404\0\u7431\0\u745e"+
    "\0\u748b\0\u74b8\0\u74e5\0\u7512\0\u753f\0\u756c\0\u7599\0\u75c6"+
    "\0\u75f3\0\u7620\0\u764d\0\u767a\0\u76a7\0\u76d4\0\u7701\0\u772e"+
    "\0\u775b\0\u7788\0\u77b5\0\u77e2\0\u780f\0\u783c\0\u7869\0\u7896"+
    "\0\u78c3\0\u78f0\0\u791d\0\u794a\0\u7977\0\u79a4\0\u79d1\0\u79fe"+
    "\0\u7a2b\0\u7a58\0\u7a85\0\u7ab2\0\u7adf\0\u7b0c\0\u7b39\0\u7b66"+
    "\0\u7b93\0\u7bc0\0\u7bed\0\u7c1a\0\u7c47\0\u7c74\0\u7ca1\0\u7cce"+
    "\0\u7cfb\0\u7d28\0\u7d55\0\u7d82\0\u7daf\0\u7ddc\0\u7e09\0\u7e36"+
    "\0\u7e63\0\u7e90\0\u7ebd\0\u7eea\0\u7f17\0\u7f44\0\u7f71\0\u7f9e"+
    "\0\u7fcb\0\u7ff8\0\u8025\0\u8052\0\u807f\0\u80ac\0\u80d9\0\u8106"+
    "\0\u8133\0\u8160\0\u818d\0\u81ba\0\u81e7\0\u8214\0\u8241\0\u826e"+
    "\0\u829b\0\u82c8\0\u82f5\0\u8322\0\u834f\0\u837c\0\u83a9\0\u83d6"+
    "\0\u8403";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[841];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\3\1\5\5\3\1\4\1\6"+
    "\1\7\4\3\1\4\4\3\1\2\26\3\56\0\13\3"+
    "\1\0\11\3\1\0\26\3\1\0\1\3\1\4\7\3"+
    "\1\4\1\3\1\0\4\3\1\4\4\3\1\0\26\3"+
    "\1\0\4\3\1\6\6\3\1\0\11\3\1\0\26\3"+
    "\1\0\4\3\1\10\6\3\1\0\11\3\1\0\26\3"+
    "\1\0\3\11\1\12\1\13\1\14\1\15\1\11\1\16"+
    "\1\11\1\17\1\20\1\21\1\22\4\11\1\23\1\24"+
    "\1\11\1\25\1\26\1\27\1\11\1\30\1\11\1\31"+
    "\1\11\1\32\7\11\1\33\4\11\1\34\1\11\1\0"+
    "\5\3\1\35\5\3\1\0\11\3\1\0\26\3\1\0"+
    "\13\11\1\0\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\2\11\1\36\23\11\1\0\3\11\1\37"+
    "\6\11\1\40\1\0\1\11\1\41\7\11\1\25\6\11"+
    "\1\42\12\11\1\43\4\11\1\0\3\11\1\44\7\11"+
    "\1\0\11\11\1\25\3\11\1\45\22\11\1\0\4\11"+
    "\1\46\6\11\1\0\1\11\1\47\5\11\1\50\1\11"+
    "\1\25\23\11\1\51\2\11\1\0\3\11\1\52\1\53"+
    "\1\54\1\55\3\11\1\56\1\0\1\57\1\60\4\11"+
    "\1\61\1\62\1\11\1\25\1\63\1\64\1\11\1\65"+
    "\1\11\1\66\11\11\1\67\4\11\1\70\1\11\1\0"+
    "\13\11\1\0\1\11\1\71\7\11\1\25\26\11\1\0"+
    "\13\11\1\20\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\1\11\1\72\7\11\1\25\26\11\1\0\4\11\1\73"+
    "\6\11\1\0\2\11\1\74\6\11\1\25\5\11\1\75"+
    "\20\11\1\0\13\11\1\0\11\11\1\25\2\11\1\76"+
    "\23\11\1\0\13\11\1\0\2\11\1\77\6\11\1\25"+
    "\5\11\1\100\20\11\1\0\13\11\1\0\1\11\1\101"+
    "\7\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\3\11\1\102\22\11\1\0\13\11\1\0\6\11\1\103"+
    "\2\11\1\25\1\11\1\104\17\11\1\105\1\11\1\106"+
    "\2\11\1\0\13\11\1\0\7\11\1\107\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\25\10\11\1\110"+
    "\15\11\1\0\13\11\1\0\1\11\1\111\7\11\1\25"+
    "\2\11\1\112\23\11\1\0\13\11\1\0\7\11\1\113"+
    "\1\11\1\25\26\11\1\0\6\3\1\114\1\115\3\3"+
    "\1\0\11\3\1\0\26\3\1\0\13\11\1\0\1\116"+
    "\10\11\1\25\26\11\1\0\13\11\1\0\7\11\1\117"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\120\23\11\1\0\4\11\1\121\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\6\11\1\122"+
    "\2\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\123\23\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\124\23\11\1\0\13\11\1\0\6\11\1\125"+
    "\2\11\1\25\26\11\1\0\13\11\1\0\6\11\1\126"+
    "\2\11\1\25\3\11\1\127\22\11\1\0\13\11\1\0"+
    "\11\11\1\25\5\11\1\130\20\11\1\0\13\11\1\0"+
    "\11\11\1\25\17\11\1\131\6\11\1\0\13\11\1\0"+
    "\6\11\1\132\2\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\2\11\1\133\23\11\1\0\3\11\1\134"+
    "\6\11\1\135\1\0\1\11\1\136\7\11\1\25\6\11"+
    "\1\137\12\11\1\140\4\11\1\0\3\11\1\141\7\11"+
    "\1\0\11\11\1\25\3\11\1\142\22\11\1\0\4\11"+
    "\1\143\6\11\1\0\1\11\1\144\5\11\1\145\1\11"+
    "\1\25\23\11\1\146\2\11\1\0\13\11\1\0\1\11"+
    "\1\147\7\11\1\25\26\11\1\0\13\11\1\0\1\11"+
    "\1\150\7\11\1\25\26\11\1\0\4\11\1\151\6\11"+
    "\1\0\2\11\1\152\6\11\1\25\5\11\1\153\20\11"+
    "\1\0\13\11\1\0\11\11\1\25\2\11\1\154\23\11"+
    "\1\0\13\11\1\0\2\11\1\155\6\11\1\25\5\11"+
    "\1\156\20\11\1\0\13\11\1\0\1\11\1\157\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\3\11"+
    "\1\160\22\11\1\0\13\11\1\0\6\11\1\161\2\11"+
    "\1\25\1\11\1\162\17\11\1\163\1\11\1\164\2\11"+
    "\1\0\13\11\1\0\7\11\1\165\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\1\11\1\166\7\11\1\25\2\11"+
    "\1\167\23\11\1\0\13\11\1\0\7\11\1\170\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\6\11\1\171\2\11"+
    "\1\25\26\11\1\0\6\11\1\172\4\11\1\0\2\11"+
    "\1\173\6\11\1\25\26\11\1\0\13\11\1\0\7\11"+
    "\1\174\1\11\1\25\26\11\1\0\12\11\1\175\1\0"+
    "\11\11\1\25\26\11\1\0\5\11\1\176\5\11\1\0"+
    "\11\11\1\25\3\11\1\177\22\11\1\0\13\11\1\0"+
    "\11\11\1\25\25\11\1\200\1\0\4\11\1\201\6\11"+
    "\1\0\11\11\1\25\26\11\1\0\5\11\1\202\5\11"+
    "\1\0\11\11\1\25\3\11\1\203\22\11\1\0\13\11"+
    "\1\0\11\11\1\25\1\11\1\204\24\11\1\0\4\11"+
    "\1\205\6\11\1\0\11\11\1\25\26\11\1\0\4\11"+
    "\1\206\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\1\11\1\207\24\11\1\0\6\11"+
    "\1\210\4\11\1\0\11\11\1\25\26\11\1\0\4\11"+
    "\1\211\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\1\11\1\212\24\11\1\0\13\11"+
    "\1\0\11\11\1\25\11\11\1\213\14\11\1\0\4\11"+
    "\1\214\6\11\1\0\11\11\1\25\26\11\1\0\5\11"+
    "\1\215\5\11\1\0\11\11\1\25\5\11\1\216\20\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\217\22\11"+
    "\1\0\7\3\1\115\3\3\1\0\11\3\1\0\26\3"+
    "\1\0\10\3\1\220\2\3\1\0\11\3\1\0\26\3"+
    "\1\0\13\11\1\0\11\11\1\25\1\11\1\221\24\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\222\22\11"+
    "\1\0\13\11\1\0\11\11\1\25\2\11\1\223\23\11"+
    "\1\0\13\11\1\0\1\224\10\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\2\11\1\225\23\11\1\0"+
    "\13\11\1\0\11\11\1\25\1\11\1\226\24\11\1\0"+
    "\13\11\1\0\2\11\1\227\6\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\3\11\1\230\22\11\1\0"+
    "\13\11\1\0\7\11\1\231\1\11\1\25\26\11\1\0"+
    "\4\11\1\232\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\5\11\1\233\5\11\1\0\11\11\1\25\26\11\1\0"+
    "\4\11\1\234\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\2\11\1\235\6\11\1\25\26\11\1\0"+
    "\13\11\1\0\1\236\10\11\1\25\26\11\1\0\13\11"+
    "\1\0\7\11\1\237\1\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\2\11\1\240\23\11\1\0\4\11"+
    "\1\241\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\6\11\1\242\2\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\2\11\1\243\23\11\1\0\13\11"+
    "\1\0\11\11\1\25\2\11\1\244\23\11\1\0\13\11"+
    "\1\0\6\11\1\245\2\11\1\25\26\11\1\0\13\11"+
    "\1\0\6\11\1\246\2\11\1\25\3\11\1\247\22\11"+
    "\1\0\13\11\1\0\11\11\1\25\5\11\1\250\20\11"+
    "\1\0\13\11\1\0\11\11\1\25\17\11\1\251\6\11"+
    "\1\0\13\11\1\0\6\11\1\252\2\11\1\25\26\11"+
    "\1\0\13\11\1\0\6\11\1\253\2\11\1\25\26\11"+
    "\1\0\6\11\1\254\4\11\1\0\11\11\1\25\26\11"+
    "\1\0\13\11\1\0\7\11\1\255\1\11\1\25\26\11"+
    "\1\0\12\11\1\256\1\0\11\11\1\25\26\11\1\0"+
    "\5\11\1\257\5\11\1\0\11\11\1\25\3\11\1\260"+
    "\22\11\1\0\13\11\1\0\11\11\1\25\25\11\1\261"+
    "\1\0\4\11\1\262\6\11\1\0\11\11\1\25\26\11"+
    "\1\0\5\11\1\263\5\11\1\0\11\11\1\25\3\11"+
    "\1\264\22\11\1\0\13\11\1\0\11\11\1\25\1\11"+
    "\1\265\24\11\1\0\4\11\1\266\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\4\11\1\267\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\1\11"+
    "\1\270\24\11\1\0\6\11\1\271\4\11\1\0\11\11"+
    "\1\25\26\11\1\0\4\11\1\272\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\1\11"+
    "\1\273\24\11\1\0\4\11\1\274\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\5\11\1\275\5\11\1\0\11\11"+
    "\1\25\5\11\1\276\20\11\1\0\13\11\1\0\11\11"+
    "\1\25\3\11\1\277\22\11\1\0\6\11\1\300\4\11"+
    "\1\0\11\11\1\25\26\11\1\0\4\11\1\301\6\11"+
    "\1\0\11\11\1\25\26\11\1\0\13\11\1\0\3\11"+
    "\1\302\5\11\1\25\26\11\1\0\13\11\1\0\11\11"+
    "\1\25\5\11\1\303\20\11\1\0\13\11\1\0\11\11"+
    "\1\25\2\11\1\304\23\11\1\0\13\11\1\0\11\11"+
    "\1\25\2\11\1\305\23\11\1\0\13\11\1\0\11\11"+
    "\1\25\6\11\1\306\17\11\1\0\13\11\1\0\11\11"+
    "\1\307\26\11\1\0\13\11\1\0\6\11\1\310\2\11"+
    "\1\25\26\11\1\0\3\11\1\311\7\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\1\11\1\312\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\7\11\1\313\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\7\11\1\314\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\1\11\1\315\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\6\11\1\316\2\11"+
    "\1\25\26\11\1\0\4\11\1\317\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\3\11\1\320\7\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\1\11\1\321\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\12\11"+
    "\1\322\13\11\1\0\13\11\1\0\11\11\1\25\24\11"+
    "\1\323\1\11\1\0\13\11\1\0\11\11\1\25\24\11"+
    "\1\324\1\11\1\0\13\11\1\0\11\11\1\25\5\11"+
    "\1\325\20\11\1\0\13\11\1\0\6\11\1\326\2\11"+
    "\1\25\26\11\1\0\10\3\1\327\2\3\1\0\11\3"+
    "\1\0\26\3\1\0\13\11\1\0\7\11\1\330\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\1\11"+
    "\1\331\24\11\1\0\4\11\1\332\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\7\11\1\333\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\23\11"+
    "\1\334\2\11\1\0\13\11\1\0\11\11\1\25\24\11"+
    "\1\335\1\11\1\0\13\11\1\0\7\11\1\336\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\337\26\11"+
    "\1\0\13\11\1\0\7\11\1\340\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\7\11\1\341\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\1\342\10\11\1\25\3\11\1\343"+
    "\22\11\1\0\13\11\1\0\1\11\1\344\7\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\25\3\11\1\345"+
    "\22\11\1\0\13\11\1\0\11\11\1\25\1\11\1\346"+
    "\24\11\1\0\13\11\1\0\11\11\1\25\3\11\1\347"+
    "\22\11\1\0\13\11\1\0\11\11\1\25\2\11\1\350"+
    "\23\11\1\0\13\11\1\0\1\351\10\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\2\11\1\352\23\11"+
    "\1\0\13\11\1\0\11\11\1\25\1\11\1\353\24\11"+
    "\1\0\13\11\1\0\2\11\1\354\6\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\355\22\11"+
    "\1\0\13\11\1\0\7\11\1\356\1\11\1\25\26\11"+
    "\1\0\4\11\1\357\6\11\1\0\11\11\1\25\26\11"+
    "\1\0\5\11\1\360\5\11\1\0\11\11\1\25\26\11"+
    "\1\0\4\11\1\361\6\11\1\0\11\11\1\25\26\11"+
    "\1\0\13\11\1\0\2\11\1\362\6\11\1\25\26\11"+
    "\1\0\6\11\1\363\4\11\1\0\11\11\1\25\26\11"+
    "\1\0\4\11\1\364\6\11\1\0\11\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\5\11\1\365\20\11"+
    "\1\0\13\11\1\0\11\11\1\25\2\11\1\366\23\11"+
    "\1\0\13\11\1\0\11\11\1\25\2\11\1\367\23\11"+
    "\1\0\13\11\1\0\11\11\1\25\6\11\1\370\17\11"+
    "\1\0\13\11\1\0\11\11\1\371\26\11\1\0\13\11"+
    "\1\0\6\11\1\372\2\11\1\25\26\11\1\0\3\11"+
    "\1\373\7\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\11\1\374\7\11\1\25\26\11\1\0\13\11"+
    "\1\0\7\11\1\375\1\11\1\25\26\11\1\0\13\11"+
    "\1\0\7\11\1\376\1\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\11\1\377\7\11\1\25\26\11\1\0\13\11"+
    "\1\0\6\11\1\u0100\2\11\1\25\26\11\1\0\4\11"+
    "\1\u0101\6\11\1\0\11\11\1\25\26\11\1\0\3\11"+
    "\1\u0102\7\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\11\1\u0103\7\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\24\11\1\u0104\1\11\1\0\13\11"+
    "\1\0\11\11\1\25\24\11\1\u0105\1\11\1\0\13\11"+
    "\1\0\11\11\1\25\5\11\1\u0106\20\11\1\0\13\11"+
    "\1\0\6\11\1\u0107\2\11\1\25\26\11\1\0\4\11"+
    "\1\u0108\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\11\1\u0109\7\11\1\25\26\11\1\0\13\11"+
    "\1\0\4\11\1\u010a\4\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\11\1\u010b\7\11\1\25\26\11\1\0\13\11"+
    "\1\0\6\11\1\u010c\2\11\1\u010d\26\11\1\0\13\11"+
    "\1\0\6\11\1\u010e\2\11\1\25\26\11\1\0\13\11"+
    "\1\0\7\11\1\u010f\1\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\24\11\1\u0110\1\11\1\0\13\11"+
    "\1\0\11\11\1\25\3\11\1\u0111\22\11\1\0\13\11"+
    "\1\0\1\u0112\10\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\2\11\1\u0113\23\11\1\0\13\11\1\0"+
    "\11\11\1\u0114\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0115\6\11\1\0\13\11\1\0\7\11\1\u0116"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\6\11\1\u0117"+
    "\2\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\u0118\23\11\1\0\13\11\1\0\11\11\1\25"+
    "\3\11\1\u0119\22\11\1\0\13\11\1\0\11\11\1\25"+
    "\13\11\1\u011a\12\11\1\0\13\11\1\0\11\11\1\u011b"+
    "\26\11\1\0\13\11\1\0\6\11\1\u011c\2\11\1\25"+
    "\26\11\1\0\13\11\1\0\7\11\1\u011d\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\u011e\26\11\1\u011f"+
    "\11\u0120\1\3\1\u0120\1\u011f\11\u0120\1\u011f\26\u0120\1\0"+
    "\13\11\1\0\6\11\1\u0121\2\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u0122\26\11\1\0\13\11\1\0"+
    "\11\11\1\u0123\26\11\1\0\13\11\1\0\11\11\1\u0124"+
    "\26\11\1\0\5\11\1\u0125\5\11\1\0\11\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\u0126\26\11\1\0"+
    "\13\11\1\0\11\11\1\u0127\26\11\1\0\4\11\1\u0128"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\u0129\26\11\1\0\13\11\1\0\7\11\1\u012a"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\6\11\1\u012b"+
    "\2\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\u012c\23\11\1\0\13\11\1\0\11\11\1\25"+
    "\5\11\1\u012d\20\11\1\0\13\11\1\0\7\11\1\u012e"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\1\11\1\u012f\24\11\1\0\4\11\1\u0130\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\7\11\1\u0131"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\23\11\1\u0132\2\11\1\0\13\11\1\0\11\11\1\25"+
    "\24\11\1\u0133\1\11\1\0\13\11\1\0\7\11\1\u0134"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\11\11\1\u0135"+
    "\26\11\1\0\13\11\1\0\7\11\1\u0136\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\7\11\1\u0137\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\1\u0138\10\11\1\25\3\11"+
    "\1\u0139\22\11\1\0\13\11\1\0\1\11\1\u013a\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\3\11"+
    "\1\u013b\22\11\1\0\4\11\1\u013c\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\1\11\1\u013d\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\1\11\1\u013e\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\6\11\1\u013f\2\11"+
    "\1\u0140\26\11\1\0\13\11\1\0\6\11\1\u0141\2\11"+
    "\1\25\26\11\1\0\13\11\1\0\7\11\1\u0142\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\24\11"+
    "\1\u0143\1\11\1\0\13\11\1\0\11\11\1\25\3\11"+
    "\1\u0144\22\11\1\0\13\11\1\0\1\u0145\10\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\25\2\11\1\u0146"+
    "\23\11\1\0\13\11\1\0\11\11\1\u0147\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\17\11\1\u0148\6\11\1\0"+
    "\13\11\1\0\7\11\1\u0149\1\11\1\25\26\11\1\0"+
    "\13\11\1\0\6\11\1\u014a\2\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\2\11\1\u014b\23\11\1\0"+
    "\13\11\1\0\11\11\1\25\3\11\1\u014c\22\11\1\0"+
    "\13\11\1\0\11\11\1\u014d\26\11\1\0\13\11\1\0"+
    "\6\11\1\u014e\2\11\1\25\26\11\1\0\13\11\1\0"+
    "\7\11\1\u014f\1\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\u0150\26\11\1\0\13\11\1\0\2\11\1\u0151"+
    "\6\11\1\25\26\11\1\0\4\11\1\u0152\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\5\11\1\u0153"+
    "\3\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\20\11\1\u0154\5\11\1\0\13\11\1\0\11\11\1\25"+
    "\5\11\1\u0155\20\11\1\0\4\11\1\u0156\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\1\11\1\u0157\1\u0158\23\11\1\0\13\11\1\0\11\11"+
    "\1\u0159\21\11\1\u015a\4\11\1\0\6\11\1\u015b\4\11"+
    "\1\0\11\11\1\25\26\11\1\0\13\11\1\0\11\11"+
    "\1\u015c\26\11\1\0\13\11\1\0\11\11\1\25\1\11"+
    "\1\u015d\1\u015e\23\11\1\0\13\11\1\0\1\u015f\10\11"+
    "\1\25\26\11\1\0\6\11\1\u0160\4\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\3\11"+
    "\1\u0161\22\11\1\0\13\11\1\0\6\11\1\u0162\2\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\2\11"+
    "\1\u0163\23\11\1\0\13\11\1\0\11\11\1\25\14\11"+
    "\1\u0164\11\11\1\0\13\11\1\0\1\11\1\u0165\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\2\11\1\u0166\6\11"+
    "\1\25\26\11\12\u011f\1\0\42\u011f\1\0\13\11\1\0"+
    "\11\11\1\u0167\26\11\1\0\13\11\1\0\11\11\1\u0168"+
    "\26\11\1\0\13\11\1\0\11\11\1\u0169\26\11\1\0"+
    "\6\11\1\u016a\4\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\3\11\1\u016b\22\11\1\0"+
    "\13\11\1\0\2\11\1\u016c\6\11\1\25\26\11\1\0"+
    "\13\11\1\0\7\11\1\u016d\1\11\1\25\26\11\1\0"+
    "\13\11\1\0\6\11\1\u016e\2\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u016f\26\11\1\0\13\11\1\0"+
    "\11\11\1\u0170\26\11\1\0\13\11\1\0\11\11\1\u0171"+
    "\26\11\1\0\5\11\1\u0172\5\11\1\0\11\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\u0173\26\11\1\0"+
    "\13\11\1\0\11\11\1\u0174\26\11\1\0\4\11\1\u0175"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\u0176\26\11\1\0\13\11\1\0\7\11\1\u0177"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\6\11\1\u0178"+
    "\2\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\u0179\23\11\1\0\13\11\1\0\11\11\1\25"+
    "\5\11\1\u017a\20\11\1\0\13\11\1\0\2\11\1\u017b"+
    "\6\11\1\25\26\11\1\0\4\11\1\u017c\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\20\11\1\u017d\5\11\1\0\13\11\1\0\11\11\1\25"+
    "\5\11\1\u017e\20\11\1\0\4\11\1\u017f\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\2\11\1\u0180\23\11\1\0\13\11\1\0\11\11\1\u0181"+
    "\21\11\1\u0182\4\11\1\0\6\11\1\u0183\4\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\11\11\1\u0184"+
    "\26\11\1\0\13\11\1\0\11\11\1\25\2\11\1\u0185"+
    "\23\11\1\0\13\11\1\0\1\u0186\10\11\1\25\26\11"+
    "\1\0\6\11\1\u0187\4\11\1\0\11\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u0188\22\11"+
    "\1\0\13\11\1\0\6\11\1\u0189\2\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\2\11\1\u018a\23\11"+
    "\1\0\13\11\1\0\1\11\1\u018b\7\11\1\25\26\11"+
    "\1\0\13\11\1\0\2\11\1\u018c\6\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u018d\22\11"+
    "\1\0\13\11\1\0\7\11\1\u018e\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\1\u018f\10\11\1\25\26\11\1\0"+
    "\13\11\1\0\7\11\1\u0190\1\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\3\11\1\u0191\22\11\1\0"+
    "\13\11\1\0\11\11\1\25\3\11\1\u0192\22\11\1\0"+
    "\13\11\1\0\11\11\1\25\3\11\1\u0193\22\11\1\0"+
    "\13\11\1\0\11\11\1\25\21\11\1\u0194\4\11\1\0"+
    "\13\11\1\0\1\u0195\10\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\11\1\u0196\7\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\3\11\1\u0197\22\11\1\0\13\11"+
    "\1\0\11\11\1\25\21\11\1\u0198\4\11\1\0\13\11"+
    "\1\0\7\11\1\u0199\1\11\1\25\26\11\1\0\6\11"+
    "\1\u019a\4\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\17\11\1\u019b\6\11\1\0\13\11"+
    "\1\0\11\11\1\u019c\26\11\1\0\13\11\1\0\11\11"+
    "\1\25\21\11\1\u019d\4\11\1\0\13\11\1\0\11\11"+
    "\1\25\15\11\1\u019e\10\11\1\0\13\11\1\0\11\11"+
    "\1\25\6\11\1\u019f\17\11\1\0\4\11\1\u01a0\6\11"+
    "\1\0\11\11\1\25\26\11\1\0\13\11\1\0\7\11"+
    "\1\u01a1\1\11\1\25\26\11\1\0\13\11\1\0\11\11"+
    "\1\u01a2\26\11\1\0\13\11\1\0\11\11\1\u01a3\26\11"+
    "\1\0\13\11\1\0\11\11\1\u01a4\26\11\1\0\13\11"+
    "\1\0\11\11\1\u01a5\26\11\1\0\13\11\1\0\11\11"+
    "\1\u01a6\26\11\1\0\13\11\1\0\11\11\1\u01a7\26\11"+
    "\1\0\6\11\1\u01a8\4\11\1\0\11\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u01a9\22\11"+
    "\1\0\13\11\1\0\2\11\1\u01aa\6\11\1\25\26\11"+
    "\1\0\13\11\1\0\7\11\1\u01ab\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u01ac\22\11"+
    "\1\0\13\11\1\0\7\11\1\u01ad\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\7\11\1\u01ae\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u01af\22\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u01b0\22\11"+
    "\1\0\13\11\1\0\11\11\1\25\21\11\1\u01b1\4\11"+
    "\1\0\13\11\1\0\1\u01b2\10\11\1\25\26\11\1\0"+
    "\13\11\1\0\1\11\1\u01b3\7\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\21\11\1\u01b4\4\11\1\0"+
    "\13\11\1\0\7\11\1\u01b5\1\11\1\25\26\11\1\0"+
    "\6\11\1\u01b6\4\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\17\11\1\u01b7\6\11\1\0"+
    "\13\11\1\0\11\11\1\u01b8\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\21\11\1\u01b9\4\11\1\0\13\11\1\0"+
    "\11\11\1\25\6\11\1\u01ba\17\11\1\0\4\11\1\u01bb"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\5\11\1\u01bc\20\11\1\0\13\11\1\0"+
    "\11\11\1\25\5\11\1\u01bd\20\11\1\0\13\11\1\0"+
    "\1\11\1\u01be\7\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\1\11\1\u01bf\24\11\1\0\13\11\1\0"+
    "\1\u01c0\10\11\1\25\26\11\1\0\13\11\1\0\2\11"+
    "\1\u01c1\6\11\1\25\26\11\1\0\4\11\1\u01c2\6\11"+
    "\1\0\11\11\1\25\26\11\1\0\13\11\1\0\11\11"+
    "\1\25\22\11\1\u01c3\3\11\1\0\13\11\1\0\11\11"+
    "\1\u01c4\26\11\1\0\6\11\1\u01c5\4\11\1\0\11\11"+
    "\1\25\26\11\1\0\4\11\1\u01c6\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\22\11"+
    "\1\u01c7\3\11\1\0\13\11\1\0\11\11\1\u01c8\26\11"+
    "\1\0\13\11\1\0\11\11\1\u01c9\26\11\1\0\4\11"+
    "\1\u01ca\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\22\11\1\u01cb\3\11\1\0\13\11"+
    "\1\0\11\11\1\25\16\11\1\u01cc\7\11\1\0\3\11"+
    "\1\u01cd\7\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\u01ce\26\11\1\0\13\11\1\0\11\11"+
    "\1\25\17\11\1\u01cf\6\11\1\0\13\11\1\0\7\11"+
    "\1\u01d0\1\11\1\25\26\11\1\0\13\11\1\0\11\11"+
    "\1\u01d1\26\11\1\0\13\11\1\0\11\11\1\u01d2\26\11"+
    "\1\0\13\11\1\0\11\11\1\u01d3\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\5\11\1\u01d4\20\11\1\0\13\11"+
    "\1\0\11\11\1\25\5\11\1\u01d5\20\11\1\0\13\11"+
    "\1\0\11\11\1\25\1\11\1\u01d6\24\11\1\0\13\11"+
    "\1\0\1\u01d7\10\11\1\25\26\11\1\0\13\11\1\0"+
    "\2\11\1\u01d8\6\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\22\11\1\u01d9\3\11\1\0\13\11\1\0"+
    "\11\11\1\u01da\26\11\1\0\6\11\1\u01db\4\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\22\11\1\u01dc\3\11\1\0\13\11\1\0\11\11\1\u01dd"+
    "\26\11\1\0\13\11\1\0\11\11\1\u01de\26\11\1\0"+
    "\4\11\1\u01df\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\22\11\1\u01e0\3\11\1\0"+
    "\3\11\1\u01e1\7\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u01e2\26\11\1\0\13\11\1\0"+
    "\7\11\1\u01e3\1\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\u01e4\26\11\1\0\13\11\1\0\2\11\1\u01e5"+
    "\6\11\1\25\26\11\1\0\13\11\1\0\1\u01e6\10\11"+
    "\1\25\26\11\1\0\4\11\1\u01e7\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\4\11\1\u01e8\6\11\1\0\11\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\25\3\11"+
    "\1\u01e9\22\11\1\0\13\11\1\0\7\11\1\u01ea\1\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\u01eb\26\11"+
    "\1\0\13\11\1\0\11\11\1\25\3\11\1\u01ec\22\11"+
    "\1\0\13\11\1\0\7\11\1\u01ed\1\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\u01ee\26\11\1\0\13\11"+
    "\1\0\7\11\1\u01ef\1\11\1\25\26\11\1\0\13\11"+
    "\1\0\4\11\1\u01f0\4\11\1\25\26\11\1\0\4\11"+
    "\1\u01f1\6\11\1\0\11\11\1\25\26\11\1\0\4\11"+
    "\1\u01f2\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\25\17\11\1\u01f3\6\11\1\0\13\11"+
    "\1\0\7\11\1\u01f4\1\11\1\25\26\11\1\0\13\11"+
    "\1\0\11\11\1\u01f5\26\11\1\0\13\11\1\0\1\u01f6"+
    "\10\11\1\25\26\11\1\0\4\11\1\u01f7\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\4\11\1\u01f8\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\7\11\1\u01f9"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\11\11\1\u01fa"+
    "\26\11\1\0\13\11\1\0\7\11\1\u01fb\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\u01fc\26\11\1\0"+
    "\13\11\1\0\7\11\1\u01fd\1\11\1\25\26\11\1\0"+
    "\4\11\1\u01fe\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u01ff\26\11\1\0\13\11\1\0"+
    "\3\11\1\u0200\5\11\1\25\26\11\1\0\13\11\1\0"+
    "\1\11\1\u0201\7\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\3\11\1\u0202\22\11\1\0\13\11\1\0"+
    "\11\11\1\u0203\26\11\1\0\13\11\1\0\4\11\1\u0204"+
    "\4\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0205\6\11\1\0\13\11\1\0\4\11\1\u0206"+
    "\4\11\1\25\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0207\6\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0208\6\11\1\0\13\11\1\0\11\11\1\25"+
    "\3\11\1\u0209\22\11\1\0\13\11\1\0\11\11\1\u020a"+
    "\26\11\1\0\13\11\1\0\11\11\1\u020b\26\11\1\0"+
    "\4\11\1\u020c\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u020d\26\11\1\0\13\11\1\0"+
    "\1\11\1\u020e\7\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\3\11\1\u020f\22\11\1\0\13\11\1\0"+
    "\11\11\1\u0210\26\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0211\6\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0212\6\11\1\0\13\11\1\0\11\11\1\25"+
    "\17\11\1\u0213\6\11\1\0\13\11\1\0\11\11\1\u0214"+
    "\26\11\1\0\7\11\1\u0215\3\11\1\0\11\11\1\25"+
    "\26\11\1\0\6\11\1\u0216\4\11\1\0\11\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\25\21\11\1\u0217"+
    "\4\11\1\0\12\11\1\u0218\1\0\11\11\1\25\26\11"+
    "\1\0\4\11\1\u0219\6\11\1\0\11\11\1\25\26\11"+
    "\1\0\12\11\1\u021a\1\0\11\11\1\25\26\11\1\0"+
    "\4\11\1\u021b\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\4\11\1\u021c\6\11\1\0\11\11\1\25\26\11\1\0"+
    "\13\11\1\0\6\11\1\u021d\2\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u021e\26\11\1\0\6\11\1\u021f"+
    "\4\11\1\0\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\25\21\11\1\u0220\4\11\1\0\4\11\1\u0221"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\4\11\1\u0222"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\4\11\1\u0223"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\3\11\1\u0224"+
    "\7\11\1\0\11\11\1\25\26\11\1\0\4\11\1\u0225"+
    "\6\11\1\0\11\11\1\25\26\11\1\0\13\11\1\0"+
    "\1\u0226\10\11\1\25\26\11\1\0\13\11\1\0\1\11"+
    "\1\u0227\7\11\1\25\26\11\1\0\13\11\1\0\11\11"+
    "\1\u0228\26\11\1\0\13\11\1\0\1\11\1\u0229\7\11"+
    "\1\25\26\11\1\0\13\11\1\0\11\11\1\u022a\26\11"+
    "\1\0\13\11\1\0\11\11\1\u022b\26\11\1\0\4\11"+
    "\1\u022c\6\11\1\0\11\11\1\25\26\11\1\0\4\11"+
    "\1\u022d\6\11\1\0\11\11\1\25\26\11\1\0\13\11"+
    "\1\0\1\u022e\10\11\1\25\26\11\1\0\13\11\1\0"+
    "\11\11\1\u022f\26\11\1\0\13\11\1\0\11\11\1\u0230"+
    "\26\11\1\0\13\11\1\0\11\11\1\u0231\26\11\1\0"+
    "\13\11\1\0\6\11\1\u0232\2\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\u0233\26\11\1\0\13\11\1\0"+
    "\7\11\1\u0234\1\11\1\25\26\11\1\0\13\11\1\0"+
    "\1\u0235\10\11\1\25\26\11\1\0\13\11\1\0\1\u0236"+
    "\10\11\1\25\26\11\1\0\13\11\1\0\1\11\1\u0237"+
    "\7\11\1\25\26\11\1\0\13\11\1\0\11\11\1\u0238"+
    "\26\11\1\0\13\11\1\0\7\11\1\u0239\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\7\11\1\u023a\1\11\1\25"+
    "\26\11\1\0\13\11\1\0\11\11\1\u023b\26\11\1\0"+
    "\13\11\1\0\7\11\1\u023c\1\11\1\25\26\11\1\0"+
    "\13\11\1\0\7\11\1\u023d\1\11\1\25\26\11\1\0"+
    "\13\11\1\0\11\11\1\25\17\11\1\u023e\6\11\1\0"+
    "\13\11\1\0\11\11\1\u023f\26\11\1\0\12\11\1\u0240"+
    "\1\0\11\11\1\25\26\11\1\0\13\11\1\0\6\11"+
    "\1\u0241\2\11\1\25\26\11\1\0\13\11\1\0\6\11"+
    "\1\u0242\2\11\1\25\26\11\1\0\13\11\1\0\1\u0243"+
    "\10\11\1\25\26\11\1\0\7\11\1\u0244\3\11\1\0"+
    "\11\11\1\25\26\11\1\0\13\11\1\0\7\11\1\u0245"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\7\11\1\u0246"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\7\11\1\u0247"+
    "\1\11\1\25\26\11\1\0\13\11\1\0\10\11\1\u0248"+
    "\1\25\26\11\1\0\12\11\1\u0249\1\0\11\11\1\25"+
    "\26\11\1\0\12\11\1\u024a\1\0\11\11\1\25\26\11"+
    "\1\0\13\11\1\0\11\11\1\u024b\26\11\1\0\3\11"+
    "\1\u024c\6\11\1\u024d\1\u024e\11\11\1\25\26\11\1\0"+
    "\7\11\1\u024f\3\11\1\0\11\11\1\25\4\11\1\u0250"+
    "\21\11\1\0\7\11\1\u0251\3\11\1\0\11\11\1\25"+
    "\4\11\1\u0252\21\11\1\0\4\11\1\u024d\6\11\1\0"+
    "\11\11\1\25\26\11\1\0\4\11\1\u0253\6\11\1\0"+
    "\11\11\1\25\26\11\15\0\1\u0254\40\0\13\11\1\0"+
    "\10\11\1\u0255\1\25\26\11\1\0\13\11\1\0\10\11"+
    "\1\u0256\1\25\26\11\1\0\13\11\1\0\10\11\1\u0257"+
    "\1\25\26\11\1\0\13\11\1\0\10\11\1\u0258\1\25"+
    "\26\11\1\0\5\11\1\u0259\5\11\1\0\11\11\1\25"+
    "\26\11\16\0\1\u025a\37\0\1\u025b\2\11\1\u025c\3\u025b"+
    "\1\11\1\u025b\1\11\1\u025d\1\u025e\4\u025b\1\11\3\u025b"+
    "\1\11\1\25\4\u025b\1\11\2\u025b\1\11\16\u025b\1\0"+
    "\1\u025f\2\11\1\u0260\3\u025f\1\11\1\u025f\1\11\1\u0261"+
    "\1\u0262\4\u025f\1\11\3\u025f\1\11\1\25\4\u025f\1\11"+
    "\2\u025f\1\11\16\u025f\1\0\1\u0263\2\11\1\u0264\3\u0263"+
    "\1\11\1\u0263\1\11\1\u0265\1\u0266\4\u0263\1\11\3\u0263"+
    "\1\11\1\25\4\u0263\1\11\2\u0263\1\11\16\u0263\1\0"+
    "\1\u0267\2\11\1\u0268\3\u0267\1\11\1\u0267\1\11\1\u0269"+
    "\1\u026a\4\u0267\1\11\3\u0267\1\11\1\25\4\u0267\1\11"+
    "\2\u0267\1\11\16\u0267\1\0\6\11\1\u026b\1\u026c\3\11"+
    "\1\0\11\11\1\25\26\11\17\0\1\u026d\36\0\1\u025b"+
    "\2\11\1\u025c\3\u025b\1\11\1\u025b\1\11\1\u025d\1\0"+
    "\4\u025b\1\11\3\u025b\1\u026e\1\25\4\u025b\1\11\2\u025b"+
    "\1\11\16\u025b\1\0\1\u025b\2\11\1\u025c\1\u025d\2\u025b"+
    "\1\11\1\u025b\1\11\1\u025d\1\0\4\u025b\1\11\3\u025b"+
    "\1\u026e\1\25\4\u025b\1\11\2\u025b\1\11\16\u025b\1\0"+
    "\1\u025b\2\11\1\u025c\1\u026f\2\u025b\1\11\1\u025b\1\11"+
    "\1\u025d\1\0\4\u025b\1\11\3\u025b\1\u026e\1\25\4\u025b"+
    "\1\11\2\u025b\1\11\16\u025b\16\0\1\u0270\37\0\1\u025f"+
    "\2\11\1\u0260\3\u025f\1\11\1\u025f\1\11\1\u0261\1\0"+
    "\4\u025f\1\11\3\u025f\1\u0271\1\25\4\u025f\1\11\2\u025f"+
    "\1\11\16\u025f\1\0\1\u025f\2\11\1\u0260\1\u0261\2\u025f"+
    "\1\11\1\u025f\1\11\1\u0261\1\0\4\u025f\1\11\3\u025f"+
    "\1\u0271\1\25\4\u025f\1\11\2\u025f\1\11\16\u025f\1\0"+
    "\1\u025f\2\11\1\u0260\1\u0272\2\u025f\1\11\1\u025f\1\11"+
    "\1\u0261\1\0\4\u025f\1\11\3\u025f\1\u0271\1\25\4\u025f"+
    "\1\11\2\u025f\1\11\16\u025f\16\0\1\u0273\37\0\1\u0263"+
    "\2\11\1\u0264\3\u0263\1\11\1\u0263\1\11\1\u0265\1\0"+
    "\4\u0263\1\11\3\u0263\1\u0274\1\25\4\u0263\1\11\2\u0263"+
    "\1\11\16\u0263\1\0\1\u0263\2\11\1\u0264\1\u0265\2\u0263"+
    "\1\11\1\u0263\1\11\1\u0265\1\0\4\u0263\1\11\3\u0263"+
    "\1\u0274\1\25\4\u0263\1\11\2\u0263\1\11\16\u0263\1\0"+
    "\1\u0263\2\11\1\u0264\1\u0275\2\u0263\1\11\1\u0263\1\11"+
    "\1\u0265\1\0\4\u0263\1\11\3\u0263\1\u0274\1\25\4\u0263"+
    "\1\11\2\u0263\1\11\16\u0263\27\0\1\u0276\26\0\1\u0267"+
    "\2\11\1\u0268\3\u0267\1\11\1\u0267\1\11\1\u0269\1\0"+
    "\4\u0267\1\11\3\u0267\1\u0277\1\25\4\u0267\1\11\2\u0267"+
    "\1\11\16\u0267\1\0\1\u0267\2\11\1\u0268\1\u0269\2\u0267"+
    "\1\11\1\u0267\1\11\1\u0269\1\0\4\u0267\1\11\3\u0267"+
    "\1\u0277\1\25\4\u0267\1\11\2\u0267\1\11\16\u0267\1\0"+
    "\1\u0267\2\11\1\u0268\1\u0278\2\u0267\1\11\1\u0267\1\11"+
    "\1\u0269\1\0\4\u0267\1\11\3\u0267\1\u0277\1\25\4\u0267"+
    "\1\11\2\u0267\1\11\16\u0267\27\0\1\u0279\26\0\7\11"+
    "\1\u026c\3\11\1\0\11\11\1\25\26\11\1\0\10\11"+
    "\1\u027a\2\11\1\0\11\11\1\25\26\11\20\0\1\u027b"+
    "\35\0\10\11\1\u027c\2\11\1\0\11\11\1\25\26\11"+
    "\1\0\1\u025b\2\11\1\u025c\1\u025b\1\u027d\1\u025b\1\11"+
    "\1\u025b\1\11\1\u025d\1\0\4\u025b\1\11\3\u025b\1\u026e"+
    "\1\25\4\u025b\1\11\2\u025b\1\11\16\u025b\34\0\1\u027e"+
    "\21\0\13\11\1\0\4\11\1\u026e\4\11\1\25\26\11"+
    "\1\0\1\u025f\2\11\1\u0260\1\u025f\1\u027f\1\u025f\1\11"+
    "\1\u025f\1\11\1\u0261\1\0\4\u025f\1\11\3\u025f\1\u0271"+
    "\1\25\4\u025f\1\11\2\u025f\1\11\16\u025f\34\0\1\u0280"+
    "\21\0\10\11\1\u0281\2\11\1\0\11\11\1\25\26\11"+
    "\1\0\1\u0263\2\11\1\u0264\1\u0263\1\u0282\1\u0263\1\11"+
    "\1\u0263\1\11\1\u0265\1\0\4\u0263\1\11\3\u0263\1\u0274"+
    "\1\25\4\u0263\1\11\2\u0263\1\11\16\u0263\16\0\1\u0283"+
    "\37\0\13\11\1\0\4\11\1\u0274\4\11\1\25\26\11"+
    "\1\0\1\u0267\2\11\1\u0268\1\u0267\1\u0284\1\u0267\1\11"+
    "\1\u0267\1\11\1\u0269\1\0\4\u0267\1\11\3\u0267\1\u0277"+
    "\1\25\4\u0267\1\11\2\u0267\1\11\16\u0267\16\0\1\u0285"+
    "\37\0\10\11\1\u0286\2\11\1\0\11\11\1\25\26\11"+
    "\21\0\1\u0287\34\0\13\11\1\0\11\11\1\u0288\26\11"+
    "\1\0\1\u025b\2\11\1\u025c\2\u025b\1\u0289\1\u028a\1\u025b"+
    "\1\11\1\u025d\1\0\4\u025b\1\11\3\u025b\1\u026e\1\25"+
    "\4\u025b\1\11\2\u025b\1\11\16\u025b\32\0\1\u028b\23\0"+
    "\1\u025f\2\11\1\u0260\2\u025f\1\u028c\1\u028d\1\u025f\1\11"+
    "\1\u0261\1\0\4\u025f\1\11\3\u025f\1\u0271\1\25\4\u025f"+
    "\1\11\2\u025f\1\11\16\u025f\32\0\1\u028e\23\0\13\11"+
    "\1\0\11\11\1\u028f\26\11\1\0\1\u0263\2\11\1\u0264"+
    "\2\u0263\1\u0290\1\u0291\1\u0263\1\11\1\u0265\1\0\4\u0263"+
    "\1\11\3\u0263\1\u0274\1\25\4\u0263\1\11\2\u0263\1\11"+
    "\16\u0263\30\0\1\u0292\25\0\1\u0267\2\11\1\u0268\2\u0267"+
    "\1\u0293\1\u0294\1\u0267\1\11\1\u0269\1\0\4\u0267\1\11"+
    "\3\u0267\1\u0277\1\25\4\u0267\1\11\2\u0267\1\11\16\u0267"+
    "\30\0\1\u0295\24\0\1\u0296\11\u0297\1\11\1\u0297\1\u0296"+
    "\11\u0297\1\u0298\26\u0297\22\0\1\u0299\33\0\1\u025b\2\11"+
    "\1\u025c\3\u025b\1\u028a\1\u025b\1\11\1\u025d\1\0\4\u025b"+
    "\1\11\3\u025b\1\u026e\1\25\4\u025b\1\11\2\u025b\1\11"+
    "\16\u025b\1\0\10\11\1\u029a\2\11\1\0\11\11\1\25"+
    "\26\11\35\0\1\u029b\20\0\1\u025f\2\11\1\u0260\3\u025f"+
    "\1\u028d\1\u025f\1\11\1\u0261\1\0\4\u025f\1\11\3\u025f"+
    "\1\u0271\1\25\4\u025f\1\11\2\u025f\1\11\16\u025f\1\0"+
    "\10\11\1\u029c\2\11\1\0\11\11\1\25\26\11\35\0"+
    "\1\u029d\20\0\1\u0263\2\11\1\u0264\3\u0263\1\u0291\1\u0263"+
    "\1\11\1\u0265\1\0\4\u0263\1\11\3\u0263\1\u0274\1\25"+
    "\4\u0263\1\11\2\u0263\1\11\16\u0263\1\0\10\11\1\u029e"+
    "\2\11\1\0\11\11\1\25\26\11\24\0\1\u029f\31\0"+
    "\1\u0267\2\11\1\u0268\3\u0267\1\u0294\1\u0267\1\11\1\u0269"+
    "\1\0\4\u0267\1\11\3\u0267\1\u0277\1\25\4\u0267\1\11"+
    "\2\u0267\1\11\16\u0267\1\0\10\11\1\u02a0\2\11\1\0"+
    "\11\11\1\25\26\11\24\0\1\u02a1\30\0\12\u0296\1\0"+
    "\12\u0296\1\u02a2\30\u0296\11\u0297\1\11\1\u0297\1\u0296\10\u0297"+
    "\1\u02a3\1\u0298\26\u0297\15\0\1\u02a4\40\0\10\11\1\u02a5"+
    "\2\11\1\0\11\11\1\25\26\11\24\0\1\u02a6\31\0"+
    "\10\11\1\u02a7\2\11\1\0\11\11\1\25\26\11\24\0"+
    "\1\u02a8\31\0\10\11\1\u02a9\2\11\1\0\11\11\1\25"+
    "\26\11\31\0\1\u02aa\24\0\10\11\1\u02ab\2\11\1\0"+
    "\11\11\1\25\26\11\31\0\1\u02ac\23\0\11\u0296\1\u02ad"+
    "\1\0\6\u0296\1\u02ae\3\u0296\1\u02a2\30\u0296\10\u0297\1\u02af"+
    "\1\11\1\u0297\1\u0296\4\u0297\1\u02b0\3\u0297\1\u02a3\1\u0298"+
    "\26\u0297\16\0\1\u02b1\36\0\1\u02b2\11\u02b3\1\11\1\u02b3"+
    "\1\u02b2\11\u02b3\1\u02b4\26\u02b3\30\0\1\u02b5\24\0\1\u02b6"+
    "\11\u02b7\1\11\1\u02b7\1\u02b6\11\u02b7\1\u02b8\26\u02b7\30\0"+
    "\1\u02b9\24\0\1\u02ba\11\u02bb\1\11\1\u02bb\1\u02ba\11\u02bb"+
    "\1\u02bc\26\u02bb\30\0\1\u02bd\24\0\1\u02be\11\u02bf\1\11"+
    "\1\u02bf\1\u02be\11\u02bf\1\u02c0\26\u02bf\30\0\1\u02c1\24\0"+
    "\12\u0296\1\0\12\u0296\1\u02a2\1\u02c2\37\u0296\1\u02ad\1\0"+
    "\12\u0296\1\u02a2\30\u0296\11\u0297\1\11\1\u0297\1\u0296\10\u0297"+
    "\1\u02a3\1\u02c2\26\u0297\1\u0296\10\u0297\1\u02af\1\11\1\u0297"+
    "\1\u0296\10\u0297\1\u02a3\1\u0298\26\u0297\17\0\1\u02c3\35\0"+
    "\12\u02b2\1\0\12\u02b2\1\u02c4\30\u02b2\11\u02b3\1\11\1\u02b3"+
    "\1\u02b2\10\u02b3\1\u02c5\1\u02b4\26\u02b3\32\0\1\u02c6\22\0"+
    "\12\u02b6\1\0\12\u02b6\1\u02c7\30\u02b6\11\u02b7\1\11\1\u02b7"+
    "\1\u02b6\10\u02b7\1\u02c8\1\u02b8\26\u02b7\32\0\1\u02c9\22\0"+
    "\12\u02ba\1\0\12\u02ba\1\u02ca\30\u02ba\11\u02bb\1\11\1\u02bb"+
    "\1\u02ba\10\u02bb\1\u02cb\1\u02bc\26\u02bb\32\0\1\u02cc\22\0"+
    "\12\u02be\1\0\12\u02be\1\u02cd\30\u02be\11\u02bf\1\11\1\u02bf"+
    "\1\u02be\10\u02bf\1\u02ce\1\u02c0\26\u02bf\32\0\1\u02cf\42\0"+
    "\1\u02d0\34\0\11\u02b2\1\u02d1\1\0\12\u02b2\1\u02c4\30\u02b2"+
    "\10\u02b3\1\u02d2\1\11\1\u02b3\1\u02b2\10\u02b3\1\u02c5\1\u02b4"+
    "\26\u02b3\5\0\1\u02d3\47\0\12\u02b6\1\0\6\u02b6\1\u02d4"+
    "\3\u02b6\1\u02c7\30\u02b6\11\u02b7\1\11\1\u02b7\1\u02b6\4\u02b7"+
    "\1\u02d5\3\u02b7\1\u02c8\1\u02b8\26\u02b7\5\0\1\u02d6\47\0"+
    "\11\u02ba\1\u02d7\1\0\12\u02ba\1\u02ca\30\u02ba\10\u02bb\1\u02d8"+
    "\1\11\1\u02bb\1\u02ba\10\u02bb\1\u02cb\1\u02bc\26\u02bb\5\0"+
    "\1\u02d9\47\0\12\u02be\1\0\6\u02be\1\u02da\3\u02be\1\u02cd"+
    "\30\u02be\11\u02bf\1\11\1\u02bf\1\u02be\4\u02bf\1\u02db\3\u02bf"+
    "\1\u02ce\1\u02c0\26\u02bf\5\0\1\u02dc\57\0\1\u02dd\44\0"+
    "\12\u02b2\1\0\12\u02b2\1\u02c4\1\u02de\27\u02b2\11\u02b3\1\11"+
    "\1\u02b3\1\u02b2\10\u02b3\1\u02c5\1\u02de\26\u02b3\32\0\1\u02df"+
    "\22\0\11\u02b6\1\u02e0\1\0\12\u02b6\1\u02c7\30\u02b6\10\u02b7"+
    "\1\u02e1\1\11\1\u02b7\1\u02b6\10\u02b7\1\u02c8\1\u02b8\26\u02b7"+
    "\32\0\1\u02e2\22\0\12\u02ba\1\0\12\u02ba\1\u02ca\1\u02e3"+
    "\27\u02ba\11\u02bb\1\11\1\u02bb\1\u02ba\10\u02bb\1\u02cb\1\u02e3"+
    "\26\u02bb\32\0\1\u02e4\22\0\11\u02be\1\u02e5\1\0\12\u02be"+
    "\1\u02cd\30\u02be\10\u02bf\1\u02e6\1\11\1\u02bf\1\u02be\10\u02bf"+
    "\1\u02ce\1\u02c0\26\u02bf\32\0\1\u02e7\26\0\1\u02e8\71\0"+
    "\1\u02e9\33\0\12\u02b6\1\0\12\u02b6\1\u02c7\1\u02ea\27\u02b6"+
    "\11\u02b7\1\11\1\u02b7\1\u02b6\10\u02b7\1\u02c8\1\u02ea\26\u02b7"+
    "\21\0\1\u02eb\54\0\1\u02ec\33\0\12\u02be\1\0\12\u02be"+
    "\1\u02cd\1\u02ed\27\u02be\11\u02bf\1\11\1\u02bf\1\u02be\10\u02bf"+
    "\1\u02ce\1\u02ed\26\u02bf\21\0\1\u02ee\56\0\1\u02ef\44\0"+
    "\1\u02f0\54\0\1\u02f1\54\0\1\u02f2\54\0\1\u02f3\65\0"+
    "\1\u02f4\46\0\1\u02f5\54\0\1\u02f6\54\0\1\u02f7\54\0"+
    "\1\u02f8\51\0\1\u02f9\56\0\1\u02fa\54\0\1\u02fb\54\0"+
    "\1\u02fc\54\0\1\u02fd\47\0\1\u02fe\70\0\1\u02ff\54\0"+
    "\1\u0300\54\0\1\u0301\54\0\1\u0302\55\0\1\u0303\52\0"+
    "\1\u0304\54\0\1\u0305\54\0\1\u0306\54\0\1\u0307\35\0"+
    "\1\u0308\6\0\1\u0309\1\u024e\64\0\1\u030a\54\0\1\u030b"+
    "\54\0\1\u030c\54\0\1\u030d\35\0\1\u0309\54\0\1\u030e"+
    "\62\0\1\u030f\54\0\1\u0310\54\0\1\u0311\54\0\1\u0312"+
    "\47\0\1\u0313\56\0\1\u0314\77\0\1\u0315\31\0\1\u0316"+
    "\77\0\1\u0317\30\0\1\u0318\1\u0319\71\0\1\u031a\54\0"+
    "\1\u031b\54\0\1\u031c\54\0\1\u031d\37\0\1\u0319\55\0"+
    "\1\u031e\44\0\1\u031f\2\0\1\u0320\3\u031f\1\0\1\u031f"+
    "\1\0\1\u0321\1\u025e\4\u031f\1\0\3\u031f\2\0\4\u031f"+
    "\1\0\2\u031f\1\0\16\u031f\1\0\1\u0322\2\0\1\u0323"+
    "\3\u0322\1\0\1\u0322\1\0\1\u0324\1\u0262\4\u0322\1\0"+
    "\3\u0322\2\0\4\u0322\1\0\2\u0322\1\0\16\u0322\1\0"+
    "\1\u0325\2\0\1\u0326\3\u0325\1\0\1\u0325\1\0\1\u0327"+
    "\1\u0266\4\u0325\1\0\3\u0325\2\0\4\u0325\1\0\2\u0325"+
    "\1\0\16\u0325\1\0\1\u0328\2\0\1\u0329\3\u0328\1\0"+
    "\1\u0328\1\0\1\u032a\1\u026a\4\u0328\1\0\3\u0328\2\0"+
    "\4\u0328\1\0\2\u0328\1\0\16\u0328\11\0\1\u032b\44\0"+
    "\1\u031f\2\0\1\u0320\3\u031f\1\0\1\u031f\1\0\1\u0321"+
    "\1\0\4\u031f\1\0\3\u031f\1\u032c\1\0\4\u031f\1\0"+
    "\2\u031f\1\0\16\u031f\1\0\1\u031f\2\0\1\u0320\1\u0321"+
    "\2\u031f\1\0\1\u031f\1\0\1\u0321\1\0\4\u031f\1\0"+
    "\3\u031f\1\u032c\1\0\4\u031f\1\0\2\u031f\1\0\16\u031f"+
    "\1\0\1\u031f\2\0\1\u0320\1\u032d\2\u031f\1\0\1\u031f"+
    "\1\0\1\u0321\1\0\4\u031f\1\0\3\u031f\1\u032c\1\0"+
    "\4\u031f\1\0\2\u031f\1\0\16\u031f\1\0\1\u0322\2\0"+
    "\1\u0323\3\u0322\1\0\1\u0322\1\0\1\u0324\1\0\4\u0322"+
    "\1\0\3\u0322\1\u032e\1\0\4\u0322\1\0\2\u0322\1\0"+
    "\16\u0322\1\0\1\u0322\2\0\1\u0323\1\u0324\2\u0322\1\0"+
    "\1\u0322\1\0\1\u0324\1\0\4\u0322\1\0\3\u0322\1\u032e"+
    "\1\0\4\u0322\1\0\2\u0322\1\0\16\u0322\1\0\1\u0322"+
    "\2\0\1\u0323\1\u032f\2\u0322\1\0\1\u0322\1\0\1\u0324"+
    "\1\0\4\u0322\1\0\3\u0322\1\u032e\1\0\4\u0322\1\0"+
    "\2\u0322\1\0\16\u0322\1\0\1\u0325\2\0\1\u0326\3\u0325"+
    "\1\0\1\u0325\1\0\1\u0327\1\0\4\u0325\1\0\3\u0325"+
    "\1\u0330\1\0\4\u0325\1\0\2\u0325\1\0\16\u0325\1\0"+
    "\1\u0325\2\0\1\u0326\1\u0327\2\u0325\1\0\1\u0325\1\0"+
    "\1\u0327\1\0\4\u0325\1\0\3\u0325\1\u0330\1\0\4\u0325"+
    "\1\0\2\u0325\1\0\16\u0325\1\0\1\u0325\2\0\1\u0326"+
    "\1\u0331\2\u0325\1\0\1\u0325\1\0\1\u0327\1\0\4\u0325"+
    "\1\0\3\u0325\1\u0330\1\0\4\u0325\1\0\2\u0325\1\0"+
    "\16\u0325\1\0\1\u0328\2\0\1\u0329\3\u0328\1\0\1\u0328"+
    "\1\0\1\u032a\1\0\4\u0328\1\0\3\u0328\1\u0332\1\0"+
    "\4\u0328\1\0\2\u0328\1\0\16\u0328\1\0\1\u0328\2\0"+
    "\1\u0329\1\u032a\2\u0328\1\0\1\u0328\1\0\1\u032a\1\0"+
    "\4\u0328\1\0\3\u0328\1\u0332\1\0\4\u0328\1\0\2\u0328"+
    "\1\0\16\u0328\1\0\1\u0328\2\0\1\u0329\1\u0333\2\u0328"+
    "\1\0\1\u0328\1\0\1\u032a\1\0\4\u0328\1\0\3\u0328"+
    "\1\u0332\1\0\4\u0328\1\0\2\u0328\1\0\16\u0328\12\u0296"+
    "\1\0\42\u0296\11\0\1\u0334\44\0\1\u031f\2\0\1\u0320"+
    "\1\u031f\1\u0335\1\u031f\1\0\1\u031f\1\0\1\u0321\1\0"+
    "\4\u031f\1\0\3\u031f\1\u032c\1\0\4\u031f\1\0\2\u031f"+
    "\1\0\16\u031f\21\0\1\u032c\34\0\1\u0322\2\0\1\u0323"+
    "\1\u0322\1\u0336\1\u0322\1\0\1\u0322\1\0\1\u0324\1\0"+
    "\4\u0322\1\0\3\u0322\1\u032e\1\0\4\u0322\1\0\2\u0322"+
    "\1\0\16\u0322\11\0\1\u0337\44\0\1\u0325\2\0\1\u0326"+
    "\1\u0325\1\u0338\1\u0325\1\0\1\u0325\1\0\1\u0327\1\0"+
    "\4\u0325\1\0\3\u0325\1\u0330\1\0\4\u0325\1\0\2\u0325"+
    "\1\0\16\u0325\21\0\1\u0330\34\0\1\u0328\2\0\1\u0329"+
    "\1\u0328\1\u0339\1\u0328\1\0\1\u0328\1\0\1\u032a\1\0"+
    "\4\u0328\1\0\3\u0328\1\u0332\1\0\4\u0328\1\0\2\u0328"+
    "\1\0\16\u0328\26\0\1\u0288\27\0\1\u031f\2\0\1\u0320"+
    "\2\u031f\1\u033a\1\u033b\1\u031f\1\0\1\u0321\1\0\4\u031f"+
    "\1\0\3\u031f\1\u032c\1\0\4\u031f\1\0\2\u031f\1\0"+
    "\16\u031f\1\0\1\u0322\2\0\1\u0323\2\u0322\1\u033c\1\u033d"+
    "\1\u0322\1\0\1\u0324\1\0\4\u0322\1\0\3\u0322\1\u032e"+
    "\1\0\4\u0322\1\0\2\u0322\1\0\16\u0322\26\0\1\u028f"+
    "\27\0\1\u0325\2\0\1\u0326\2\u0325\1\u033e\1\u033f\1\u0325"+
    "\1\0\1\u0327\1\0\4\u0325\1\0\3\u0325\1\u0330\1\0"+
    "\4\u0325\1\0\2\u0325\1\0\16\u0325\1\0\1\u0328\2\0"+
    "\1\u0329\2\u0328\1\u0340\1\u0341\1\u0328\1\0\1\u032a\1\0"+
    "\4\u0328\1\0\3\u0328\1\u0332\1\0\4\u0328\1\0\2\u0328"+
    "\1\0\16\u0328\1\0\1\u031f\2\0\1\u0320\3\u031f\1\u033b"+
    "\1\u031f\1\0\1\u0321\1\0\4\u031f\1\0\3\u031f\1\u032c"+
    "\1\0\4\u031f\1\0\2\u031f\1\0\16\u031f\11\0\1\u0342"+
    "\44\0\1\u0322\2\0\1\u0323\3\u0322\1\u033d\1\u0322\1\0"+
    "\1\u0324\1\0\4\u0322\1\0\3\u0322\1\u032e\1\0\4\u0322"+
    "\1\0\2\u0322\1\0\16\u0322\11\0\1\u0343\44\0\1\u0325"+
    "\2\0\1\u0326\3\u0325\1\u033f\1\u0325\1\0\1\u0327\1\0"+
    "\4\u0325\1\0\3\u0325\1\u0330\1\0\4\u0325\1\0\2\u0325"+
    "\1\0\16\u0325\11\0\1\u0344\44\0\1\u0328\2\0\1\u0329"+
    "\3\u0328\1\u0341\1\u0328\1\0\1\u032a\1\0\4\u0328\1\0"+
    "\3\u0328\1\u0332\1\0\4\u0328\1\0\2\u0328\1\0\16\u0328"+
    "\11\0\1\u0345\54\0\1\u0346\54\0\1\u0347\54\0\1\u0348"+
    "\54\0\1\u0349\43\0\12\u02b2\1\0\42\u02b2\12\u02b6\1\0"+
    "\42\u02b6\12\u02ba\1\0\42\u02ba\12\u02be\1\0\42\u02be";

  private static int [] zzUnpackTrans() {
    int [] result = new int[33840];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\6\1\14\0\1\11\7\0\1\1\56\0"+
    "\2\1\102\0\1\1\66\0\1\11\17\0\1\1\7\0"+
    "\1\11\31\0\1\11\23\0\1\11\6\0\1\11\6\0"+
    "\1\11\2\0\1\11\2\1\1\0\3\11\1\0\2\11"+
    "\1\0\1\11\13\0\1\11\12\0\1\11\6\0\1\11"+
    "\5\0\1\11\2\0\1\11\10\0\1\11\2\0\1\11"+
    "\12\0\3\11\5\0\3\11\1\0\2\11\1\0\1\11"+
    "\12\0\1\11\2\0\1\11\27\0\1\11\5\0\6\11"+
    "\20\0\1\11\13\0\1\11\3\0\2\11\4\0\1\11"+
    "\2\0\3\11\6\0\1\11\2\0\2\11\3\0\1\11"+
    "\1\0\1\11\6\0\1\11\2\0\1\11\6\0\1\11"+
    "\4\0\1\11\1\0\1\11\2\0\1\11\3\0\1\11"+
    "\6\0\2\11\1\0\1\11\2\0\1\11\3\0\1\11"+
    "\11\0\1\11\11\0\1\11\1\0\2\11\3\0\3\11"+
    "\1\0\1\11\4\0\1\11\2\0\1\11\3\0\1\11"+
    "\13\0\1\11\74\0\1\11\6\0\1\11\10\0\1\1"+
    "\33\0\1\1\3\0\1\1\3\0\1\1\3\0\1\1"+
    "\1\0\1\1\33\0\1\1\4\0\1\1\6\0\1\1"+
    "\2\0\1\1\134\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[841];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  LexerCup(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  LexerCup(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 44: 
          { return new Symbol(sym.CierreAuthor, yychar, yyline, yytext());
          }
        case 84: break;
        case 48: 
          { return new Symbol(sym.AperturaComment, yychar, yyline, yytext());
          }
        case 85: break;
        case 20: 
          { return new Symbol(sym.CierreInfo, yychar, yyline, yytext());
          }
        case 86: break;
        case 68: 
          { return new Symbol(sym.CierreCopyright, yychar, yyline, yytext());
          }
        case 87: break;
        case 42: 
          { return new Symbol(sym.CierreTgroup, yychar, yyline, yytext());
          }
        case 88: break;
        case 78: 
          { return new Symbol(sym.AperturaInformalTable, yychar, yyline, yytext());
          }
        case 89: break;
        case 19: 
          { return new Symbol(sym.CierrePara, yychar, yyline, yytext());
          }
        case 90: break;
        case 39: 
          { return new Symbol(sym.AperturaSection, yychar, yyline, yytext());
          }
        case 91: break;
        case 3: 
          { /*IGNORE*/
          }
        case 92: break;
        case 34: 
          { return new Symbol(sym.CierreState, yychar, yyline, yytext());
          }
        case 93: break;
        case 14: 
          { return new Symbol(sym.AperturaTfoot, yychar, yyline, yytext());
          }
        case 94: break;
        case 75: 
          { return new Symbol(sym.CierreMediaObject, yychar, yyline, yytext());
          }
        case 95: break;
        case 31: 
          { return new Symbol(sym.CierreTitulo, yychar, yyline, yytext());
          }
        case 96: break;
        case 62: 
          { return new Symbol(sym.AperturaFirstName, yychar, yyline, yytext());
          }
        case 97: break;
        case 54: 
          { return new Symbol(sym.CierreAddress, yychar, yyline, yytext());
          }
        case 98: break;
        case 81: 
          { return new Symbol(sym.Imagedata, yychar, yyline, yytext());
          }
        case 99: break;
        case 66: 
          { return new Symbol(sym.CierreFirstName, yychar, yyline, yytext());
          }
        case 100: break;
        case 33: 
          { return new Symbol(sym.CierrePhone, yychar, yyline, yytext());
          }
        case 101: break;
        case 11: 
          { return new Symbol(sym.AperturaYear, yychar, yyline, yytext());
          }
        case 102: break;
        case 28: 
          { return new Symbol(sym.AperturaStreet, yychar, yyline, yytext());
          }
        case 103: break;
        case 35: 
          { return new Symbol(sym.CierreEntry, yychar, yyline, yytext());
          }
        case 104: break;
        case 49: 
          { return new Symbol(sym.CierreSimPara, yychar, yyline, yytext());
          }
        case 105: break;
        case 13: 
          { return new Symbol(sym.AperturaThead, yychar, yyline, yytext());
          }
        case 106: break;
        case 37: 
          { return new Symbol(sym.AperturaAuthor, yychar, yyline, yytext());
          }
        case 107: break;
        case 1: 
          { return new Symbol(sym.Texto, yychar, yyline, yytext());
          }
        case 108: break;
        case 58: 
          { return new Symbol(sym.AperturaAbstract, yychar, yyline, yytext());
          }
        case 109: break;
        case 18: 
          { return new Symbol(sym.AperturaState, yychar, yyline, yytext());
          }
        case 110: break;
        case 27: 
          { return new Symbol(sym.AperturaTgroup, yychar, yyline, yytext());
          }
        case 111: break;
        case 69: 
          { return new Symbol(sym.CierreSimpleSect, yychar, yyline, yytext());
          }
        case 112: break;
        case 51: 
          { return new Symbol(sym.CierreSurname, yychar, yyline, yytext());
          }
        case 113: break;
        case 61: 
          { return new Symbol(sym.CierreAbstract, yychar, yyline, yytext());
          }
        case 114: break;
        case 74: 
          { return new Symbol(sym.CierreVideoobject, yychar, yyline, yytext());
          }
        case 115: break;
        case 4: 
          { return new Symbol(sym.ERROR, yychar, yyline, yytext());
          }
        case 116: break;
        case 63: 
          { return new Symbol(sym.AperturaImportant, yychar, yyline, yytext());
          }
        case 117: break;
        case 5: 
          { return new Symbol(sym.AperturaRow, yychar, yyline, yytext());
          }
        case 118: break;
        case 2: 
          { return new Symbol(sym.UndefinedToken, yychar, yyline, yytext());
          }
        case 119: break;
        case 80: 
          { return new Symbol(sym.EncabezadoXML, yychar, yyline, yytext());
          }
        case 120: break;
        case 73: 
          { return new Symbol(sym.CierreImageobject, yychar, yyline, yytext());
          }
        case 121: break;
        case 60: 
          { return new Symbol(sym.CierreEmphasis, yychar, yyline, yytext());
          }
        case 122: break;
        case 32: 
          { return new Symbol(sym.CierreTbody, yychar, yyline, yytext());
          }
        case 123: break;
        case 52: 
          { return new Symbol(sym.CierreEntrybl, yychar, yyline, yytext());
          }
        case 124: break;
        case 55: 
          { return new Symbol(sym.CierreComment, yychar, yyline, yytext());
          }
        case 125: break;
        case 57: 
          { return new Symbol(sym.AperturaEmphasis, yychar, yyline, yytext());
          }
        case 126: break;
        case 17: 
          { return new Symbol(sym.AperturaPhone, yychar, yyline, yytext());
          }
        case 127: break;
        case 67: 
          { return new Symbol(sym.CierreImportant, yychar, yyline, yytext());
          }
        case 128: break;
        case 23: 
          { return new Symbol(sym.CierreYear, yychar, yyline, yytext());
          }
        case 129: break;
        case 24: 
          { return new Symbol(sym.AperturaEntry, yychar, yyline, yytext());
          }
        case 130: break;
        case 12: 
          { return new Symbol(sym.Link, yychar, yyline, yytext());
          }
        case 131: break;
        case 15: 
          { return new Symbol(sym.AperturaTitulo, yychar, yyline, yytext());
          }
        case 132: break;
        case 82: 
          { return new Symbol(sym.Videodata, yychar, yyline, yytext());
          }
        case 133: break;
        case 56: 
          { return new Symbol(sym.AperturaListItem, yychar, yyline, yytext());
          }
        case 134: break;
        case 9: 
          { return new Symbol(sym.AperturaDate, yychar, yyline, yytext());
          }
        case 135: break;
        case 72: 
          { return new Symbol(sym.AperturaMediaObject, yychar, yyline, yytext());
          }
        case 136: break;
        case 65: 
          { return new Symbol(sym.AperturaSimpleSect, yychar, yyline, yytext());
          }
        case 137: break;
        case 50: 
          { return new Symbol(sym.CierreSection, yychar, yyline, yytext());
          }
        case 138: break;
        case 83: 
          { return new Symbol(sym.Url, yychar, yyline, yytext());
          }
        case 139: break;
        case 59: 
          { return new Symbol(sym.CierreListItem, yychar, yyline, yytext());
          }
        case 140: break;
        case 10: 
          { return new Symbol(sym.AperturaCity, yychar, yyline, yytext());
          }
        case 141: break;
        case 36: 
          { return new Symbol(sym.CierreEmail, yychar, yyline, yytext());
          }
        case 142: break;
        case 16: 
          { return new Symbol(sym.AperturaTbody, yychar, yyline, yytext());
          }
        case 143: break;
        case 71: 
          { return new Symbol(sym.AperturaVideoobject, yychar, yyline, yytext());
          }
        case 144: break;
        case 41: 
          { return new Symbol(sym.CierreHolder, yychar, yyline, yytext());
          }
        case 145: break;
        case 8: 
          { return new Symbol(sym.AperturaInfo, yychar, yyline, yytext());
          }
        case 146: break;
        case 47: 
          { return new Symbol(sym.AperturaAddress, yychar, yyline, yytext());
          }
        case 147: break;
        case 46: 
          { return new Symbol(sym.AperturaArticulo, yychar, yyline, yytext());
          }
        case 148: break;
        case 79: 
          { return new Symbol(sym.CierreInformalTable, yychar, yyline, yytext());
          }
        case 149: break;
        case 7: 
          { return new Symbol(sym.CierreRow, yychar, yyline, yytext());
          }
        case 150: break;
        case 70: 
          { return new Symbol(sym.AperturaImageobject, yychar, yyline, yytext());
          }
        case 151: break;
        case 25: 
          { return new Symbol(sym.AperturaEmail, yychar, yyline, yytext());
          }
        case 152: break;
        case 76: 
          { return new Symbol(sym.AperturaItemizedList, yychar, yyline, yytext());
          }
        case 153: break;
        case 53: 
          { return new Symbol(sym.CierreArticulo, yychar, yyline, yytext());
          }
        case 154: break;
        case 38: 
          { return new Symbol(sym.AperturaSimPara, yychar, yyline, yytext());
          }
        case 155: break;
        case 21: 
          { return new Symbol(sym.CierreDate, yychar, yyline, yytext());
          }
        case 156: break;
        case 40: 
          { return new Symbol(sym.AperturaSurname, yychar, yyline, yytext());
          }
        case 157: break;
        case 6: 
          { return new Symbol(sym.AperturaPara, yychar, yyline, yytext());
          }
        case 158: break;
        case 64: 
          { return new Symbol(sym.AperturaCopyright, yychar, yyline, yytext());
          }
        case 159: break;
        case 77: 
          { return new Symbol(sym.CierreItemizedList, yychar, yyline, yytext());
          }
        case 160: break;
        case 26: 
          { return new Symbol(sym.AperturaHolder, yychar, yyline, yytext());
          }
        case 161: break;
        case 22: 
          { return new Symbol(sym.CierreCity, yychar, yyline, yytext());
          }
        case 162: break;
        case 30: 
          { return new Symbol(sym.CierreTfoot, yychar, yyline, yytext());
          }
        case 163: break;
        case 29: 
          { return new Symbol(sym.CierreThead, yychar, yyline, yytext());
          }
        case 164: break;
        case 43: 
          { return new Symbol(sym.CierreStreet, yychar, yyline, yytext());
          }
        case 165: break;
        case 45: 
          { return new Symbol(sym.AperturaEntrybl, yychar, yyline, yytext());
          }
        case 166: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
              { return new java_cup.runtime.Symbol(sym.EOF); }
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
